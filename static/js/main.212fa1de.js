/*! For license information please see main.212fa1de.js.LICENSE.txt */
(()=>{var e={3684:function(e,t,n){(function(){"use strict";function e(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var t="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e};var a=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var a=e[t];if(a&&a.Math==Math)return a}throw Error("Cannot find global object")}(this);function r(e,n){if(n)e:{var r=a;e=e.split(".");for(var s=0;s<e.length-1;s++){var o=e[s];if(!(o in r))break e;r=r[o]}(n=n(s=r[e=e[e.length-1]]))!=s&&null!=n&&t(r,e,{configurable:!0,writable:!0,value:n})}}function s(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function o(t){var n="undefined"!=typeof Symbol&&Symbol.iterator&&t[Symbol.iterator];return n?n.call(t):{next:e(t)}}function i(){this.i=!1,this.g=null,this.o=void 0,this.j=1,this.m=0,this.h=null}function c(e){if(e.i)throw new TypeError("Generator is already running");e.i=!0}function l(e,t){e.h={F:t,G:!0},e.j=e.m}function u(e){this.g=new i,this.h=e}function d(e,t,n,a){try{var r=t.call(e.g.g,n);if(!(r instanceof Object))throw new TypeError("Iterator result "+r+" is not an object");if(!r.done)return e.g.i=!1,r;var s=r.value}catch(o){return e.g.g=null,l(e.g,o),h(e)}return e.g.g=null,a.call(e.g,s),h(e)}function h(e){for(;e.g.j;)try{var t=e.h(e.g);if(t)return e.g.i=!1,{value:t.value,done:!1}}catch(n){e.g.o=void 0,l(e.g,n)}if(e.g.i=!1,e.g.h){if(t=e.g.h,e.g.h=null,t.G)throw t.F;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function p(e){this.next=function(t){return c(e.g),e.g.g?t=d(e,e.g.g.next,t,e.g.l):(e.g.l(t),t=h(e)),t},this.throw=function(t){return c(e.g),e.g.g?t=d(e,e.g.g.throw,t,e.g.l):(l(e.g,t),t=h(e)),t},this.return=function(t){return function(e,t){c(e.g);var n=e.g.g;return n?d(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.g.return):(e.g.return(t),h(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function f(e){function t(t){return e.next(t)}function n(t){return e.throw(t)}return new Promise((function(a,r){!function e(s){s.done?a(s.value):Promise.resolve(s.value).then(t,n).then(e,r)}(e.next())}))}r("Symbol",(function(e){function n(e,n){this.g=e,t(this,"description",{configurable:!0,writable:!0,value:n})}if(e)return e;n.prototype.toString=function(){return this.g};var a="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",r=0;return function e(t){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new n(a+(t||"")+"_"+r++,t)}})),r("Symbol.iterator",(function(n){if(n)return n;n=Symbol("Symbol.iterator");for(var r="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),o=0;o<r.length;o++){var i=a[r[o]];"function"===typeof i&&"function"!=typeof i.prototype[n]&&t(i.prototype,n,{configurable:!0,writable:!0,value:function(){return s(e(this))}})}return n})),i.prototype.l=function(e){this.o=e},i.prototype.return=function(e){this.h={return:e},this.j=this.m},r("Promise",(function(e){function t(e){this.h=0,this.i=void 0,this.g=[],this.o=!1;var t=this.j();try{e(t.resolve,t.reject)}catch(n){t.reject(n)}}function n(){this.g=null}function r(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.h=function(e){if(null==this.g){this.g=[];var t=this;this.i((function(){t.l()}))}this.g.push(e)};var s=a.setTimeout;n.prototype.i=function(e){s(e,0)},n.prototype.l=function(){for(;this.g&&this.g.length;){var e=this.g;this.g=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(a){this.j(a)}}}this.g=null},n.prototype.j=function(e){this.i((function(){throw e}))},t.prototype.j=function(){function e(e){return function(a){n||(n=!0,e.call(t,a))}}var t=this,n=!1;return{resolve:e(this.A),reject:e(this.l)}},t.prototype.A=function(e){if(e===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.C(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.v(e):this.m(e)}},t.prototype.v=function(e){var t=void 0;try{t=e.then}catch(n){return void this.l(n)}"function"==typeof t?this.D(t,e):this.m(e)},t.prototype.l=function(e){this.u(2,e)},t.prototype.m=function(e){this.u(1,e)},t.prototype.u=function(e,t){if(0!=this.h)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.h);this.h=e,this.i=t,2===this.h&&this.B(),this.H()},t.prototype.B=function(){var e=this;s((function(){if(e.I()){var t=a.console;"undefined"!==typeof t&&t.error(e.i)}}),1)},t.prototype.I=function(){if(this.o)return!1;var e=a.CustomEvent,t=a.Event,n=a.dispatchEvent;return"undefined"===typeof n||("function"===typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"===typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=a.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.i,n(e))},t.prototype.H=function(){if(null!=this.g){for(var e=0;e<this.g.length;++e)i.h(this.g[e]);this.g=null}};var i=new n;return t.prototype.C=function(e){var t=this.j();e.s(t.resolve,t.reject)},t.prototype.D=function(e,t){var n=this.j();try{e.call(t,n.resolve,n.reject)}catch(a){n.reject(a)}},t.prototype.then=function(e,n){function a(e,t){return"function"==typeof e?function(t){try{r(e(t))}catch(n){s(n)}}:t}var r,s,o=new t((function(e,t){r=e,s=t}));return this.s(a(e,r),a(n,s)),o},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.s=function(e,t){function n(){switch(a.h){case 1:e(a.i);break;case 2:t(a.i);break;default:throw Error("Unexpected state: "+a.h)}}var a=this;null==this.g?i.h(n):this.g.push(n),this.o=!0},t.resolve=r,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var a=o(e),s=a.next();!s.done;s=a.next())r(s.value).s(t,n)}))},t.all=function(e){var n=o(e),a=n.next();return a.done?r([]):new t((function(e,t){function s(t){return function(n){o[t]=n,0==--i&&e(o)}}var o=[],i=0;do{o.push(void 0),i++,r(a.value).s(s(o.length-1),t),a=n.next()}while(!a.done)}))},t}));var m="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var a=arguments[n];if(a)for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e};r("Object.assign",(function(e){return e||m}));var g=this||self,y={facingMode:"user",width:640,height:480};function b(e,t){this.video=e,this.i=0,this.h=Object.assign(Object.assign({},y),t)}function v(e){window.requestAnimationFrame((function(){!function(e){var t=null;e.video.paused||e.video.currentTime===e.i||(e.i=e.video.currentTime,t=e.h.onFrame()),t?t.then((function(){v(e)})):v(e)}(e)}))}b.prototype.stop=function(){var e,t,n,a=this;return f(new p(new u((function(r){if(a.g){for(e=a.g.getTracks(),t=o(e),n=t.next();!n.done;n=t.next())n.value.stop();a.g=void 0}r.j=0}))))},b.prototype.start=function(){var e,t=this;return f(new p(new u((function(n){return navigator.mediaDevices&&navigator.mediaDevices.getUserMedia||alert("No navigator.mediaDevices.getUserMedia exists."),e=t.h,n.return(navigator.mediaDevices.getUserMedia({video:{facingMode:e.facingMode,width:e.width,height:e.height}}).then((function(e){!function(e,t){e.g=t,e.video.srcObject=t,e.video.onloadedmetadata=function(){e.video.play(),v(e)}}(t,e)})).catch((function(e){var t="Failed to acquire camera feed: "+e;throw console.error(t),alert(t),e})))}))))};var x,w=["Camera"],k=g;w[0]in k||"undefined"==typeof k.execScript||k.execScript("var "+w[0]);for(;w.length&&(x=w.shift());)w.length||void 0===b?k=k[x]&&k[x]!==Object.prototype[x]?k[x]:k[x]={}:k[x]=b}).call(this)},9809:function(e,t,n){(function(){"use strict";function e(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var t="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e};var a=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var a=e[t];if(a&&a.Math==Math)return a}throw Error("Cannot find global object")}(this);function r(e,n){if(n)e:{var r=a;e=e.split(".");for(var s=0;s<e.length-1;s++){var o=e[s];if(!(o in r))break e;r=r[o]}(n=n(s=r[e=e[e.length-1]]))!=s&&null!=n&&t(r,e,{configurable:!0,writable:!0,value:n})}}function s(t){var n="undefined"!=typeof Symbol&&Symbol.iterator&&t[Symbol.iterator];return n?n.call(t):{next:e(t)}}var o="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var a=arguments[n];if(a)for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e};function i(e){return e||Array.prototype.fill}r("Object.assign",(function(e){return e||o})),r("Array.prototype.fill",(function(e){return e||function(e,t,n){var a=this.length||0;for(0>t&&(t=Math.max(0,a+t)),(null==n||n>a)&&(n=a),0>(n=Number(n))&&(n=Math.max(0,a+n)),t=Number(t||0);t<n;t++)this[t]=e;return this}})),r("Int8Array.prototype.fill",i),r("Uint8Array.prototype.fill",i),r("Uint8ClampedArray.prototype.fill",i),r("Int16Array.prototype.fill",i),r("Uint16Array.prototype.fill",i),r("Int32Array.prototype.fill",i),r("Uint32Array.prototype.fill",i),r("Float32Array.prototype.fill",i),r("Float64Array.prototype.fill",i);var c=this||self;function l(e,t){e=e.split(".");var n,a=c;e[0]in a||"undefined"==typeof a.execScript||a.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?a=a[n]&&a[n]!==Object.prototype[n]?a[n]:a[n]={}:a[n]=t}var u={color:"white",lineWidth:4,radius:6,visibilityMin:.5};function d(e){return e=e||{},Object.assign({},u,{fillColor:e.color},e)}function h(e,t){return e instanceof Function?e(t):e}function p(e,t,n){return Math.max(Math.min(t,n),Math.min(Math.max(t,n),e))}l("clamp",p),l("drawLandmarks",(function(e,t,n){if(t){n=d(n),e.save();for(var a=e.canvas,r=0,o=(t=s(t)).next();!o.done;o=t.next())if(void 0!==(o=o.value)&&(void 0===o.visibility||o.visibility>n.visibilityMin)){e.fillStyle=h(n.fillColor,{index:r,from:o}),e.strokeStyle=h(n.color,{index:r,from:o}),e.lineWidth=h(n.lineWidth,{index:r,from:o});var i=new Path2D;i.arc(o.x*a.width,o.y*a.height,h(n.radius,{index:r,from:o}),0,2*Math.PI),e.fill(i),e.stroke(i),++r}e.restore()}})),l("drawConnectors",(function(e,t,n,a){if(t&&n){a=d(a),e.save();for(var r=e.canvas,o=0,i=(n=s(n)).next();!i.done;i=n.next()){var c=i.value;e.beginPath(),i=t[c[0]],c=t[c[1]],i&&c&&(void 0===i.visibility||i.visibility>a.visibilityMin)&&(void 0===c.visibility||c.visibility>a.visibilityMin)&&(e.strokeStyle=h(a.color,{index:o,from:i,to:c}),e.lineWidth=h(a.lineWidth,{index:o,from:i,to:c}),e.moveTo(i.x*r.width,i.y*r.height),e.lineTo(c.x*r.width,c.y*r.height)),++o,e.stroke()}e.restore()}})),l("drawRectangle",(function(e,t,n){n=d(n),e.save();var a=e.canvas;e.beginPath(),e.lineWidth=h(n.lineWidth,{}),e.strokeStyle=h(n.color,{}),e.fillStyle=h(n.fillColor,{}),e.translate(t.xCenter*a.width,t.yCenter*a.height),e.rotate(t.rotation*Math.PI/180),e.rect(-t.width/2*a.width,-t.height/2*a.height,t.width*a.width,t.height*a.height),e.translate(-t.xCenter*a.width,-t.yCenter*a.height),e.stroke(),e.fill(),e.restore()})),l("lerp",(function(e,t,n,a,r){return p(a*(1-(e-t)/(n-t))+r*(1-(n-e)/(n-t)),a,r)}))}).call(this)},2509:function(e,t,n){(function(){"use strict";var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var a="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e};var r=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var a=e[t];if(a&&a.Math==Math)return a}throw Error("Cannot find global object")}(this);function s(e,t){if(t)e:{var n=r;e=e.split(".");for(var s=0;s<e.length-1;s++){var o=e[s];if(!(o in n))break e;n=n[o]}(t=t(s=n[e=e[e.length-1]]))!=s&&null!=t&&a(n,e,{configurable:!0,writable:!0,value:t})}}function o(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function i(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function c(e){if(!(e instanceof Array)){e=i(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}s("Symbol",(function(e){function t(e,t){this.h=e,a(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.h};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",r=0;return function e(a){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(n+(a||"")+"_"+r++,a)}})),s("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),s=0;s<n.length;s++){var i=r[n[s]];"function"===typeof i&&"function"!=typeof i.prototype[e]&&a(i.prototype,e,{configurable:!0,writable:!0,value:function(){return o(t(this))}})}return e}));var l="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var a=arguments[n];if(a)for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e};s("Object.assign",(function(e){return e||l}));var u,d="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)u=Object.setPrototypeOf;else{var h;e:{var p={};try{p.__proto__={a:!0},h=p.a;break e}catch(xn){}h=!1}u=h?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var f=u;function m(e,t){if(e.prototype=d(t.prototype),e.prototype.constructor=e,f)f(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var a=Object.getOwnPropertyDescriptor(t,n);a&&Object.defineProperty(e,n,a)}else e[n]=t[n];e.za=t.prototype}function g(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function y(e){if(e.m)throw new TypeError("Generator is already running");e.m=!0}function b(e,t){e.l={ma:t,na:!0},e.h=e.s||e.v}function v(e,t,n){return e.h=n,{value:t}}function x(e){this.h=new g,this.i=e}function w(e,t,n,a){try{var r=t.call(e.h.j,n);if(!(r instanceof Object))throw new TypeError("Iterator result "+r+" is not an object");if(!r.done)return e.h.m=!1,r;var s=r.value}catch(o){return e.h.j=null,b(e.h,o),k(e)}return e.h.j=null,a.call(e.h,s),k(e)}function k(e){for(;e.h.h;)try{var t=e.i(e.h);if(t)return e.h.m=!1,{value:t.value,done:!1}}catch(n){e.h.i=void 0,b(e.h,n)}if(e.h.m=!1,e.h.l){if(t=e.h.l,e.h.l=null,t.na)throw t.ma;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function S(e){this.next=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.next,t,e.h.u):(e.h.u(t),t=k(e)),t},this.throw=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.throw,t,e.h.u):(b(e.h,t),t=k(e)),t},this.return=function(t){return function(e,t){y(e.h);var n=e.h.j;return n?w(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.h.return):(e.h.return(t),k(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function I(e){return function(e){function t(t){return e.next(t)}function n(t){return e.throw(t)}return new Promise((function(a,r){!function e(s){s.done?a(s.value):Promise.resolve(s.value).then(t,n).then(e,r)}(e.next())}))}(new S(new x(e)))}function N(e){return e||Array.prototype.fill}g.prototype.u=function(e){this.i=e},g.prototype.return=function(e){this.l={return:e},this.h=this.v},s("Promise",(function(e){function t(e){this.i=0,this.j=void 0,this.h=[],this.u=!1;var t=this.l();try{e(t.resolve,t.reject)}catch(n){t.reject(n)}}function n(){this.h=null}function a(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.i=function(e){if(null==this.h){this.h=[];var t=this;this.j((function(){t.m()}))}this.h.push(e)};var s=r.setTimeout;n.prototype.j=function(e){s(e,0)},n.prototype.m=function(){for(;this.h&&this.h.length;){var e=this.h;this.h=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(a){this.l(a)}}}this.h=null},n.prototype.l=function(e){this.j((function(){throw e}))},t.prototype.l=function(){function e(e){return function(a){n||(n=!0,e.call(t,a))}}var t=this,n=!1;return{resolve:e(this.I),reject:e(this.m)}},t.prototype.I=function(e){if(e===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.L(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.F(e):this.s(e)}},t.prototype.F=function(e){var t=void 0;try{t=e.then}catch(n){return void this.m(n)}"function"==typeof t?this.M(t,e):this.s(e)},t.prototype.m=function(e){this.v(2,e)},t.prototype.s=function(e){this.v(1,e)},t.prototype.v=function(e,t){if(0!=this.i)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.i);this.i=e,this.j=t,2===this.i&&this.K(),this.H()},t.prototype.K=function(){var e=this;s((function(){if(e.D()){var t=r.console;"undefined"!==typeof t&&t.error(e.j)}}),1)},t.prototype.D=function(){if(this.u)return!1;var e=r.CustomEvent,t=r.Event,n=r.dispatchEvent;return"undefined"===typeof n||("function"===typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"===typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=r.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.j,n(e))},t.prototype.H=function(){if(null!=this.h){for(var e=0;e<this.h.length;++e)o.i(this.h[e]);this.h=null}};var o=new n;return t.prototype.L=function(e){var t=this.l();e.T(t.resolve,t.reject)},t.prototype.M=function(e,t){var n=this.l();try{e.call(t,n.resolve,n.reject)}catch(a){n.reject(a)}},t.prototype.then=function(e,n){function a(e,t){return"function"==typeof e?function(t){try{r(e(t))}catch(n){s(n)}}:t}var r,s,o=new t((function(e,t){r=e,s=t}));return this.T(a(e,r),a(n,s)),o},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.T=function(e,t){function n(){switch(a.i){case 1:e(a.j);break;case 2:t(a.j);break;default:throw Error("Unexpected state: "+a.i)}}var a=this;null==this.h?o.i(n):this.h.push(n),this.u=!0},t.resolve=a,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var r=i(e),s=r.next();!s.done;s=r.next())a(s.value).T(t,n)}))},t.all=function(e){var n=i(e),r=n.next();return r.done?a([]):new t((function(e,t){function s(t){return function(n){o[t]=n,0==--i&&e(o)}}var o=[],i=0;do{o.push(void 0),i++,a(r.value).T(s(o.length-1),t),r=n.next()}while(!r.done)}))},t})),s("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,a=!1,r={next:function(){if(!a&&n<e.length){var r=n++;return{value:t(r,e[r]),done:!1}}return a=!0,{done:!0,value:void 0}}};return r[Symbol.iterator]=function(){return r},r}(this,(function(e){return e}))}})),s("Array.prototype.fill",(function(e){return e||function(e,t,n){var a=this.length||0;for(0>t&&(t=Math.max(0,a+t)),(null==n||n>a)&&(n=a),0>(n=Number(n))&&(n=Math.max(0,a+n)),t=Number(t||0);t<n;t++)this[t]=e;return this}})),s("Int8Array.prototype.fill",N),s("Uint8Array.prototype.fill",N),s("Uint8ClampedArray.prototype.fill",N),s("Int16Array.prototype.fill",N),s("Uint16Array.prototype.fill",N),s("Int32Array.prototype.fill",N),s("Uint32Array.prototype.fill",N),s("Float32Array.prototype.fill",N),s("Float64Array.prototype.fill",N),s("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}})),s("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var a=n.length;for(0>(t=t||0)&&(t=Math.max(t+a,0));t<a;t++){var r=n[t];if(r===e||Object.is(r,e))return!0}return!1}})),s("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}}));var T=this||self;function C(e,t){e=e.split(".");var n,a=T;e[0]in a||"undefined"==typeof a.execScript||a.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?a=a[n]&&a[n]!==Object.prototype[n]?a[n]:a[n]={}:a[n]=t}function E(e){var t;return(t=T.navigator)&&(t=t.userAgent)||(t=""),-1!=t.indexOf(e)}var _=Array.prototype.map?function(e,t){return Array.prototype.map.call(e,t,void 0)}:function(e,t){for(var n=e.length,a=Array(n),r="string"===typeof e?e.split(""):e,s=0;s<n;s++)s in r&&(a[s]=t.call(void 0,r[s],s,e));return a},A={},R=null;function F(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var a=new Uint8Array(n),r=0;return function(e,t){function n(t){for(;a<e.length;){var n=e.charAt(a++),r=R[n];if(null!=r)return r;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}D();for(var a=0;;){var r=n(-1),s=n(0),o=n(64),i=n(64);if(64===i&&-1===r)break;t(r<<2|s>>4),64!=o&&(t(s<<4&240|o>>2),64!=i&&t(o<<6&192|i))}}(e,(function(e){a[r++]=e})),r!==n?a.subarray(0,r):a}function D(){if(!R){R={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var a=e.concat(t[n].split(""));A[n]=a;for(var r=0;r<a.length;r++){var s=a[r];void 0===R[s]&&(R[s]=r)}}}}var O="undefined"!==typeof Uint8Array,M=!(E("Trident")||E("MSIE"))&&"function"===typeof T.btoa;function L(e){if(!M){var t;void 0===t&&(t=0),D(),t=A[t];for(var n=Array(Math.floor(e.length/3)),a=t[64]||"",r=0,s=0;r<e.length-2;r+=3){var o=e[r],i=e[r+1],c=e[r+2],l=t[o>>2];o=t[(3&o)<<4|i>>4],i=t[(15&i)<<2|c>>6],c=t[63&c],n[s++]=l+o+i+c}switch(l=0,c=a,e.length-r){case 2:c=t[(15&(l=e[r+1]))<<2]||a;case 1:e=e[r],n[s]=t[e>>2]+t[(3&e)<<4|l>>4]+c+a}return n.join("")}for(t="";10240<e.length;)t+=String.fromCharCode.apply(null,e.subarray(0,10240)),e=e.subarray(10240);return t+=String.fromCharCode.apply(null,e),btoa(t)}var z,B=RegExp("[-_.]","g");function P(e){switch(e){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function V(e){if(!M)return F(e);B.test(e)&&(e=e.replace(B,P)),e=atob(e);for(var t=new Uint8Array(e.length),n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}function W(){return z||(z=new Uint8Array(0))}var U={},G="function"===typeof Uint8Array.prototype.slice,j=0,H=0;function q(e){var t=0>e,n=(e=Math.abs(e))>>>0;e=Math.floor((e-n)/4294967296),t&&(t=(n=i(Y(n,e))).next().value,e=n.next().value,n=t),j=n>>>0,H=e>>>0}var X,K="function"===typeof BigInt;function Y(e,t){return t=~t,e?e=1+~e:t+=1,[e,t]}function Q(e,t){this.i=e>>>0,this.h=t>>>0}function Z(e){if(!e)return X||(X=new Q(0,0));if(!/^-?\d+$/.test(e))return null;if(16>e.length)q(Number(e));else if(K)e=BigInt(e),j=Number(e&BigInt(4294967295))>>>0,H=Number(e>>BigInt(32)&BigInt(4294967295));else{var t=+("-"===e[0]);H=j=0;for(var n=e.length,a=t,r=(n-t)%6+t;r<=n;a=r,r+=6)a=Number(e.slice(a,r)),H*=1e6,4294967296<=(j=1e6*j+a)&&(H+=j/4294967296|0,j%=4294967296);t&&(e=(t=i(Y(j,H))).next().value,t=t.next().value,j=e,H=t)}return new Q(j,H)}function J(e,t){return Error("Invalid wire type: "+e+" (at position "+t+")")}function $(){return Error("Failed to read varint, encoding is invalid.")}function ee(e,t){return Error("Tried to read past the end of the data "+t+" > "+e)}function te(){throw Error("Invalid UTF8")}function ne(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var ae,re,se,oe=void 0,ie="undefined"!==typeof TextDecoder,ce="undefined"!==typeof TextEncoder;function le(e){if(e!==U)throw Error("illegal external caller")}function ue(e,t){if(le(t),this.V=e,null!=e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}function de(){return se||(se=new ue(null,U))}function he(e){le(U);var t=e.V;return null==(t=null==t||O&&null!=t&&t instanceof Uint8Array?t:"string"===typeof t?V(t):null)?t:e.V=t}function pe(e,t){this.i=null,this.m=!1,this.h=this.j=this.l=0,fe(this,e,t)}function fe(e,t,n){n=void 0===n?{}:n,e.S=void 0!==n.S&&n.S,t&&(t=function(e){if("string"===typeof e)return{buffer:V(e),C:!1};if(Array.isArray(e))return{buffer:new Uint8Array(e),C:!1};if(e.constructor===Uint8Array)return{buffer:e,C:!1};if(e.constructor===ArrayBuffer)return{buffer:new Uint8Array(e),C:!1};if(e.constructor===ue)return{buffer:he(e)||W(),C:!0};if(e instanceof Uint8Array)return{buffer:new Uint8Array(e.buffer,e.byteOffset,e.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}(t),e.i=t.buffer,e.m=t.C,e.l=0,e.j=e.i.length,e.h=e.l)}function me(e,t){if(e.h=t,t>e.j)throw ee(e.j,t)}function ge(e){var t=e.i,n=e.h,a=t[n++],r=127&a;if(128&a&&(r|=(127&(a=t[n++]))<<7,128&a&&(r|=(127&(a=t[n++]))<<14,128&a&&(r|=(127&(a=t[n++]))<<21,128&a&&(r|=(a=t[n++])<<28,128&a&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++])))))throw $();return me(e,n),r}function ye(e,t){if(0>t)throw Error("Tried to read a negative byte length: "+t);var n=e.h,a=n+t;if(a>e.j)throw ee(t,e.j-n);return e.h=a,n}pe.prototype.reset=function(){this.h=this.l};var be=[];function ve(){this.h=[]}function xe(e,t,n){for(;0<n||127<t;)e.h.push(127&t|128),t=(t>>>7|n<<25)>>>0,n>>>=7;e.h.push(t)}function we(e,t){for(;127<t;)e.h.push(127&t|128),t>>>=7;e.h.push(t)}function ke(e,t){if(be.length){var n=be.pop();fe(n,e,t),e=n}else e=new pe(e,t);this.h=e,this.j=this.h.h,this.i=this.l=-1,this.setOptions(t)}function Se(e){var t=e.h;if(t.h==t.j)return!1;e.j=e.h.h;var n=ge(e.h)>>>0;if(t=n>>>3,!(0<=(n&=7)&&5>=n))throw J(n,e.j);if(1>t)throw Error("Invalid field number: "+t+" (at position "+e.j+")");return e.l=t,e.i=n,!0}function Ie(e){switch(e.i){case 0:if(0!=e.i)Ie(e);else e:{for(var t=(e=e.h).h,n=t+10,a=e.i;t<n;)if(0===(128&a[t++])){me(e,t);break e}throw $()}break;case 1:me(e=e.h,e.h+8);break;case 2:2!=e.i?Ie(e):(t=ge(e.h)>>>0,me(e=e.h,e.h+t));break;case 5:me(e=e.h,e.h+4);break;case 3:for(t=e.l;;){if(!Se(e))throw Error("Unmatched start-group tag: stream EOF");if(4==e.i){if(e.l!=t)throw Error("Unmatched end-group tag");break}Ie(e)}break;default:throw J(e.i,e.j)}}ve.prototype.length=function(){return this.h.length},ve.prototype.end=function(){var e=this.h;return this.h=[],e},ke.prototype.setOptions=function(e){e=void 0===e?{}:e,this.ca=void 0!==e.ca&&e.ca},ke.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};var Ne=[];function Te(){this.j=[],this.i=0,this.h=new ve}function Ce(e,t){0!==t.length&&(e.j.push(t),e.i+=t.length)}var Ee="function"===typeof Symbol&&"symbol"===typeof Symbol()?Symbol():void 0;function _e(e,t){return Ee?e[Ee]|=t:void 0!==e.A?e.A|=t:(Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}}),t)}function Ae(e,t){Ee?e[Ee]&&(e[Ee]&=~t):void 0!==e.A&&(e.A&=~t)}function Re(e){var t;return null==(t=Ee?e[Ee]:e.A)?0:t}function Fe(e,t){Ee?e[Ee]=t:void 0!==e.A?e.A=t:Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}})}function De(e){return _e(e,1),e}function Oe(e,t){Fe(t,-51&(0|e))}function Me(e,t){Fe(t,-41&(18|e))}var Le={};function ze(e){return null!==e&&"object"===typeof e&&!Array.isArray(e)&&e.constructor===Object}var Be,Pe,Ve=[];function We(e){if(2&Re(e.o))throw Error("Cannot mutate an immutable Message")}function Ue(e){var t=e.length;(t=t?e[t-1]:void 0)&&ze(t)?t.g=1:(t={},e.push((t.g=1,t)))}function Ge(e){var t=e.i+e.G;return e.B||(e.B=e.o[t]={})}function je(e,t){return-1===t?null:t>=e.i?e.B?e.B[t]:void 0:e.o[t+e.G]}function He(e,t,n,a){We(e),qe(e,t,n,a)}function qe(e,t,n,a){e.j&&(e.j=void 0),t>=e.i||a?Ge(e)[t]=n:(e.o[t+e.G]=n,(e=e.B)&&t in e&&delete e[t])}function Xe(e,t,n,a){var r=je(e,t);Array.isArray(r)||(r=Be);var s=Re(r);if(1&s||De(r),a)2&s||_e(r,2),1&n||Object.freeze(r);else{a=!(2&n);var o=2&s;1&n||!o?a&&16&s&&!o&&Ae(r,16):qe(e,t,r=De(Array.prototype.slice.call(r)))}return r}function Ke(e,t){var n=je(e,t),a=null==n?n:"number"===typeof n||"NaN"===n||"Infinity"===n||"-Infinity"===n?Number(n):void 0;return null!=a&&a!==n&&qe(e,t,a),a}function Ye(e,t,n,a,r){e.h||(e.h={});var s=e.h[n],o=Xe(e,n,3,r);if(!s){var i=o;s=[];var c=!!(16&Re(e.o));o=!!(2&Re(i));var l=i;!r&&o&&(i=Array.prototype.slice.call(i));for(var u=o,d=0;d<i.length;d++){var h=i[d],p=t,f=!1;if(f=void 0!==f&&f,void 0!==(h=Array.isArray(h)?new p(h):f?new p:void 0)){var m=f=Re(p=h.o);o&&(m|=2),c&&(m|=16),m!=f&&Fe(p,m),p=m,u=u||!!(2&p),s.push(h)}}return e.h[n]=s,t=33|(c=Re(i)),c!=(t=u?-9&t:8|t)&&(u=i,Object.isFrozen(u)&&(u=Array.prototype.slice.call(u)),Fe(u,t),i=u),l!==i&&qe(e,n,i),(r||a&&o)&&_e(s,2),a&&Object.freeze(s),s}return r||(r=Object.isFrozen(s),a&&!r?Object.freeze(s):!a&&r&&(s=Array.prototype.slice.call(s),e.h[n]=s)),s}function Qe(e,t,n){var a=!!(2&Re(e.o));if(t=Ye(e,t,n,a,a),e=Xe(e,n,3,a),!(a||8&Re(e))){for(a=0;a<t.length;a++){if(2&Re((n=t[a]).o)){var r=ct(n,!1);r.j=n}else r=n;n!==r&&(t[a]=r,e[a]=r.o)}_e(e,8)}return t}function Ze(e,t,n){if(null!=n&&"number"!==typeof n)throw Error("Value of float/double field must be a number|null|undefined, found "+typeof n+": "+n);He(e,t,n)}function Je(e,t,n,a,r){We(e);var s=Ye(e,n,t,!1,!1);return n=null!=a?a:new n,e=Xe(e,t,2,!1),void 0!=r?(s.splice(r,0,n),e.splice(r,0,n.o)):(s.push(n),e.push(n.o)),n.C()&&Ae(e,8),n}function $e(e,t){return null==e?t:e}function et(e,t,n){return n=void 0===n?0:n,$e(Ke(e,t),n)}function tt(e,t,n,a){if(null!=e){if(Array.isArray(e))e=nt(e,t,n,void 0!==a);else if(ze(e)){var r,s={};for(r in e)s[r]=tt(e[r],t,n,a);e=s}else e=t(e,a);return e}}function nt(e,t,n,a){var r=Re(e);a=a?!!(16&r):void 0,e=Array.prototype.slice.call(e);for(var s=0;s<e.length;s++)e[s]=tt(e[s],t,n,a);return n(r,e),e}function at(e){return e.ja===Le?e.toJSON():function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"object":if(e)if(Array.isArray(e)){if(0!==(128&Re(e)))return Ue(e=Array.prototype.slice.call(e)),e}else{if(O&&null!=e&&e instanceof Uint8Array)return L(e);if(e instanceof ue){var t=e.V;return null==t?"":"string"===typeof t?t:e.V=L(t)}}}return e}(e)}function rt(e,t){128&e&&Ue(t)}function st(e,t,n){if(n=void 0===n?Me:n,null!=e){if(O&&e instanceof Uint8Array)return e.length?new ue(new Uint8Array(e),U):de();if(Array.isArray(e)){var a=Re(e);return 2&a?e:!t||32&a||!(16&a||0===a)?(4&(t=Re(e=nt(e,st,4&a?Me:n,!0)))&&2&t&&Object.freeze(e),e):(Fe(e,2|a),e)}return e.ja===Le?it(e):e}}function ot(e,t,n,a,r,s,o){if(e=e.h&&e.h[n]){if(2&(a=Re(e))?a=e:(Me(a,s=_(e,it)),Object.freeze(s),a=s),We(t),o=null==a?Be:De([]),null!=a){for(s=!!a.length,e=0;e<a.length;e++){var i=a[e];s=s&&!(2&Re(i.o)),o[e]=i.o}s=1|(s?8:0),((e=Re(o))&s)!==s&&(Object.isFrozen(o)&&(o=Array.prototype.slice.call(o)),Fe(o,e|s)),t.h||(t.h={}),t.h[n]=a}else t.h&&(t.h[n]=void 0);qe(t,n,o,r)}else He(t,n,st(a,s,o),r)}function it(e){return 2&Re(e.o)||_e((e=ct(e,!0)).o,2),e}function ct(e,t){var n=e.o,a=[];_e(a,16);var r=e.constructor.h;if(r&&a.push(r),r=e.B){a.length=n.length,a.fill(void 0,a.length,n.length);var s={};a[a.length-1]=s}0!==(128&Re(n))&&Ue(a),t=t||e.C()?Me:Oe,s=e.constructor,Pe=a,a=new s(a),Pe=void 0,e.R&&(a.R=e.R.slice()),s=!!(16&Re(n));for(var o=r?n.length-1:n.length,i=0;i<o;i++)ot(e,a,i-e.G,n[i],!1,s,t);if(r)for(var c in r)ot(e,a,+c,r[c],!0,s,t);return a}function lt(e,t,n){null==e&&(e=Pe),Pe=void 0;var a,r=this.constructor.i||0,s=0<r,o=this.constructor.h,i=!1;if(null==e){var c=48,l=!0;s&&(r=0,c|=128),Fe(e=o?[o]:[],c)}else{if(!Array.isArray(e))throw Error();if(o&&o!==e[0])throw Error();var u=c=_e(e,0);if((l=0!==(16&u))&&((i=0!==(32&u))||(u|=32)),s){if(128&u)r=0;else if(0<e.length){var d=e[e.length-1];if(ze(d)&&"g"in d){r=0,u|=128,delete d.g;var h,p=!0;for(h in d){p=!1;break}p&&e.pop()}}}else if(128&u)throw Error();c!==u&&Fe(e,u)}if(this.G=(o?0:-1)-r,this.h=void 0,this.o=e,r=(o=this.o.length)-1,o&&ze(o=this.o[r])?(this.B=o,this.i=r-this.G):void 0!==t&&-1<t?(this.i=Math.max(t,r+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE,!s&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(n)for(t=l&&!i&&!0,s=this.i,l=0;l<n.length;l++)(i=n[l])<s?(r=e[i+=this.G])?ut(r,t):e[i]=Be:(a||(a=Ge(this)),(r=a[i])?ut(r,t):a[i]=Be)}function ut(e,t){if(Array.isArray(e)){var n=Re(e),a=1;!t||2&n||(a|=16),(n&a)!==a&&Fe(e,n|a)}}function dt(e,t,n){if(n){var a,r={};for(a in n){var s=n[a],o=s.ra;o||(r.J=s.xa||s.oa.W,s.ia?(r.aa=vt(s.ia),o=function(e){return function(t,n,a){return e.J(t,n,a,e.aa)}}(r)):s.ka?(r.Z=xt(s.da.P,s.ka),o=function(e){return function(t,n,a){return e.J(t,n,a,e.Z)}}(r)):o=r.J,s.ra=o),o(t,e,s.da),r={J:r.J,aa:r.aa,Z:r.Z}}}!function(e,t){if(t=t.R){Ce(e,e.h.end());for(var n=0;n<t.length;n++)Ce(e,he(t[n])||W())}}(t,e)}Fe(Ve,23),Be=Object.freeze(Ve),lt.prototype.toJSON=function(){return nt(this.o,at,rt)},lt.prototype.C=function(){return!!(2&Re(this.o))},lt.prototype.ja=Le,lt.prototype.toString=function(){return this.o.toString()};var ht=Symbol();function pt(e,t,n){return e[ht]||(e[ht]=function(e,a){return t(e,a,n)})}function ft(e){var t=e[ht];if(!t){var n=Ft(e);t=function(e,t){return Dt(e,t,n)},e[ht]=t}return t}function mt(e){var t=function(e){var t=e.ia;return t?ft(t):(t=e.wa)?pt(e.da.P,t,e.ka):void 0}(e),n=e.da,a=e.oa.U;return t?function(e,r){return a(e,r,n,t)}:function(e,t){return a(e,t,n)}}function gt(e,t){var n=e[t];return"function"==typeof n&&0===n.length&&(n=n(),e[t]=n),Array.isArray(n)&&(Ct in n||wt in n||0<n.length&&"function"==typeof n[0])?n:void 0}function yt(e,t,n,a,r,s){t.P=e[0];var o=1;if(e.length>o&&"number"!==typeof e[o]){var i=e[o++];n(t,i)}for(;o<e.length;){n=e[o++];for(var c=o+1;c<e.length&&"number"!==typeof e[c];)c++;switch(i=e[o++],c-=o){case 0:a(t,n,i);break;case 1:(c=gt(e,o))?(o++,r(t,n,i,c)):a(t,n,i,e[o++]);break;case 2:r(t,n,i,c=gt(e,c=o++),e[o++]);break;case 3:s(t,n,i,e[o++],e[o++],e[o++]);break;case 4:s(t,n,i,e[o++],e[o++],e[o++],e[o++]);break;default:throw Error("unexpected number of binary field arguments: "+c)}}return t}var bt=Symbol();function vt(e){var t=e[bt];if(!t){var n=Tt(e);t=function(e,t){return Ot(e,t,n)},e[bt]=t}return t}function xt(e,t){var n=e[bt];return n||(n=function(e,n){return dt(e,n,t)},e[bt]=n),n}var wt=Symbol();function kt(e,t){e.push(t)}function St(e,t,n){e.push(t,n.W)}function It(e,t,n,a){var r=vt(a),s=Tt(a).P,o=n.W;e.push(t,(function(e,t,n){return o(e,t,n,s,r)}))}function Nt(e,t,n,a,r,s){var o=xt(a,s),i=n.W;e.push(t,(function(e,t,n){return i(e,t,n,a,o)}))}function Tt(e){var t=e[wt];return t||(t=yt(e,e[wt]=[],kt,St,It,Nt),Ct in e&&wt in e&&(e.length=0),t)}var Ct=Symbol();function Et(e,t){e[0]=t}function _t(e,t,n,a){var r=n.U;e[t]=a?function(e,t,n){return r(e,t,n,a)}:r}function At(e,t,n,a,r){var s=n.U,o=ft(a),i=Ft(a).P;e[t]=function(e,t,n){return s(e,t,n,i,o,r)}}function Rt(e,t,n,a,r,s,o){var i=n.U,c=pt(a,r,s);e[t]=function(e,t,n){return i(e,t,n,a,c,o)}}function Ft(e){var t=e[Ct];return t||(t=yt(e,e[Ct]={},Et,_t,At,Rt),Ct in e&&wt in e&&(e.length=0),t)}function Dt(e,t,n){for(;Se(t)&&4!=t.i;){var a=t.l,r=n[a];if(!r){var s=n[0];s&&(s=s[a])&&(r=n[a]=mt(s))}if(!r||!r(t,e,a)){a=e,s=(r=t).j,Ie(r);var o=r;if(!o.ca){if(r=o.h.h-s,o.h.h=s,o=o.h,0==r)r=de();else{if(s=ye(o,r),o.S&&o.m)r=o.i.subarray(s,s+r);else{o=o.i;var i=s;r=i===(r=s+r)?W():G?o.slice(i,r):new Uint8Array(o.subarray(i,r))}r=0==r.length?de():new ue(r,U)}(s=a.R)?s.push(r):a.R=[r]}}}return e}function Ot(e,t,n){for(var a=n.length,r=1==a%2,s=r?1:0;s<a;s+=2)(0,n[s+1])(t,e,n[s]);dt(e,t,r?n[0]:void 0)}function Mt(e,t){return{U:e,W:t}}var Lt=Mt((function(e,t,n){if(5!==e.i)return!1;var a=(e=e.h).i,r=e.h,s=a[r],o=a[r+1],i=a[r+2];return a=a[r+3],me(e,e.h+4),e=2*((o=(s<<0|o<<8|i<<16|a<<24)>>>0)>>31)+1,s=o>>>23&255,o&=8388607,He(t,n,255==s?o?NaN:1/0*e:0==s?e*Math.pow(2,-149)*o:e*Math.pow(2,s-150)*(o+Math.pow(2,23))),!0}),(function(e,t,n){if(null!=(t=Ke(t,n))){we(e.h,8*n+5),e=e.h;var a=+t;0===a?0<1/a?j=H=0:(H=0,j=2147483648):isNaN(a)?(H=0,j=2147483647):34028234663852886e22<(a=(n=0>a?-2147483648:0)?-a:a)?(H=0,j=(2139095040|n)>>>0):11754943508222875e-54>a?(a=Math.round(a/Math.pow(2,-149)),H=0,j=(n|a)>>>0):(t=Math.floor(Math.log(a)/Math.LN2),a*=Math.pow(2,-t),16777216<=(a=Math.round(8388608*a))&&++t,H=0,j=(n|t+127<<23|8388607&a)>>>0),n=j,e.h.push(n>>>0&255),e.h.push(n>>>8&255),e.h.push(n>>>16&255),e.h.push(n>>>24&255)}})),zt=Mt((function(e,t,n){if(0!==e.i)return!1;var a=e.h,r=0,s=e=0,o=a.i,i=a.h;do{var c=o[i++];r|=(127&c)<<s,s+=7}while(32>s&&128&c);for(32<s&&(e|=(127&c)>>4),s=3;32>s&&128&c;s+=7)e|=(127&(c=o[i++]))<<s;if(me(a,i),!(128>c))throw $();return a=r>>>0,(e=2147483648&(c=e>>>0))&&(c=~c>>>0,0==(a=1+~a>>>0)&&(c=c+1>>>0)),a=4294967296*c+(a>>>0),He(t,n,e?-a:a),!0}),(function(e,t,n){null!=(t=je(t,n))&&("string"===typeof t&&Z(t),null!=t&&(we(e.h,8*n),"number"===typeof t?(e=e.h,q(t),xe(e,j,H)):(n=Z(t),xe(e.h,n.i,n.h))))})),Bt=Mt((function(e,t,n){return 0===e.i&&(He(t,n,ge(e.h)),!0)}),(function(e,t,n){if(null!=(t=je(t,n))&&null!=t)if(we(e.h,8*n),e=e.h,0<=(n=t))we(e,n);else{for(t=0;9>t;t++)e.h.push(127&n|128),n>>=7;e.h.push(1)}})),Pt=Mt((function(e,t,n){if(2!==e.i)return!1;var a=ge(e.h)>>>0,r=ye(e=e.h,a);if(e=e.i,ie){var s,o=e;(s=ae)||(s=ae=new TextDecoder("utf-8",{fatal:!0})),e=r+a,o=0===r&&e===o.length?o:o.subarray(r,e);try{var i=s.decode(o)}catch(d){if(void 0===oe){try{s.decode(new Uint8Array([128]))}catch(h){}try{s.decode(new Uint8Array([97])),oe=!0}catch(h){oe=!1}}throw!oe&&(ae=void 0),d}}else{a=(i=r)+a,r=[];for(var c,l,u=null;i<a;)128>(c=e[i++])?r.push(c):224>c?i>=a?te():(l=e[i++],194>c||128!==(192&l)?(i--,te()):r.push((31&c)<<6|63&l)):240>c?i>=a-1?te():128!==(192&(l=e[i++]))||224===c&&160>l||237===c&&160<=l||128!==(192&(o=e[i++]))?(i--,te()):r.push((15&c)<<12|(63&l)<<6|63&o):244>=c?i>=a-2?te():128!==(192&(l=e[i++]))||0!==l-144+(c<<28)>>30||128!==(192&(o=e[i++]))||128!==(192&(s=e[i++]))?(i--,te()):(c=(7&c)<<18|(63&l)<<12|(63&o)<<6|63&s,c-=65536,r.push(55296+(c>>10&1023),56320+(1023&c))):te(),8192<=r.length&&(u=ne(u,r),r.length=0);i=ne(u,r)}return He(t,n,i),!0}),(function(e,t,n){if(null!=(t=je(t,n))){var a=!1;if(a=void 0!==a&&a,ce){if(a&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(t))throw Error("Found an unpaired surrogate");t=(re||(re=new TextEncoder)).encode(t)}else{for(var r=0,s=new Uint8Array(3*t.length),o=0;o<t.length;o++){var i=t.charCodeAt(o);if(128>i)s[r++]=i;else{if(2048>i)s[r++]=i>>6|192;else{if(55296<=i&&57343>=i){if(56319>=i&&o<t.length){var c=t.charCodeAt(++o);if(56320<=c&&57343>=c){i=1024*(i-55296)+c-56320+65536,s[r++]=i>>18|240,s[r++]=i>>12&63|128,s[r++]=i>>6&63|128,s[r++]=63&i|128;continue}o--}if(a)throw Error("Found an unpaired surrogate");i=65533}s[r++]=i>>12|224,s[r++]=i>>6&63|128}s[r++]=63&i|128}}t=r===s.length?s:s.subarray(0,r)}we(e.h,8*n+2),we(e.h,t.length),Ce(e,e.h.end()),Ce(e,t)}})),Vt=Mt((function(e,t,n,a,r){if(2!==e.i)return!1;t=Je(t,n,a),n=e.h.j,a=ge(e.h)>>>0;var s=e.h.h+a,o=s-n;if(0>=o&&(e.h.j=s,r(t,e,void 0,void 0,void 0),o=s-e.h.h),o)throw Error("Message parsing ended unexpectedly. Expected to read "+a+" bytes, instead read "+(a-o)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.h.h=s,e.h.j=n,!0}),(function(e,t,n,a,r){if(null!=(t=Qe(t,a,n)))for(a=0;a<t.length;a++){var s=e;we(s.h,8*n+2);var o=s.h.end();Ce(s,o),o.push(s.i),s=o,r(t[a],e),o=e;var i=s.pop();for(i=o.i+o.h.length()-i;127<i;)s.push(127&i|128),i>>>=7,o.i++;s.push(i),o.i++}}));function Wt(e){return function(t,n){e:{if(Ne.length){var a=Ne.pop();a.setOptions(n),fe(a.h,t,n),t=a}else t=new ke(t,n);try{var r=Ft(e),s=Dt(new r.P,t,r);break e}finally{(r=t.h).i=null,r.m=!1,r.l=0,r.j=0,r.h=0,r.S=!1,t.l=-1,t.i=-1,100>Ne.length&&Ne.push(t)}s=void 0}return s}}function Ut(e){return function(){var t=new Te;Ot(this,t,Tt(e)),Ce(t,t.h.end());for(var n=new Uint8Array(t.i),a=t.j,r=a.length,s=0,o=0;o<r;o++){var i=a[o];n.set(i,s),s+=i.length}return t.j=[n],n}}function Gt(e){lt.call(this,e)}m(Gt,lt);var jt=[Gt,1,Bt,2,Lt,3,Pt,4,Pt];function Ht(e){lt.call(this,e,-1,qt)}Gt.prototype.l=Ut(jt),m(Ht,lt),Ht.prototype.addClassification=function(e,t){return Je(this,1,Gt,e,t),this};var qt=[1],Xt=Wt([Ht,1,Vt,jt]);function Kt(e){lt.call(this,e)}m(Kt,lt);var Yt=[Kt,1,Lt,2,Lt,3,Lt,4,Lt,5,Lt];function Qt(e){lt.call(this,e,-1,Zt)}Kt.prototype.l=Ut(Yt),m(Qt,lt);var Zt=[1],Jt=Wt([Qt,1,Vt,Yt]);function $t(e){lt.call(this,e)}m($t,lt);var en=[$t,1,Lt,2,Lt,3,Lt,4,Lt,5,Lt,6,zt],tn=Wt(en);function nn(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function an(e){return Qe(e,Gt,1).map((function(e){var t=je(e,1);return{index:null==t?0:t,qa:et(e,2),label:null!=je(e,3)?$e(je(e,3),""):void 0,displayName:null!=je(e,4)?$e(je(e,4),""):void 0}}))}function rn(e){return{x:et(e,1),y:et(e,2),z:et(e,3),visibility:null!=Ke(e,4)?et(e,4):void 0}}function sn(e){return Qe(Jt(e),Kt,1).map(rn)}function on(e,t){this.i=e,this.h=t,this.m=0}function cn(e,t,n){return function(e,t){var n=e.h;if(void 0===e.s){var a=nn(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),r=nn(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),s=n.createProgram();if(n.attachShader(s,a),n.attachShader(s,r),n.linkProgram(s),!n.getProgramParameter(s,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(s));a=e.s=s,n.useProgram(a),r=n.getUniformLocation(a,"sampler0"),e.l={O:n.getAttribLocation(a,"aVertex"),N:n.getAttribLocation(a,"aTex"),ya:r},e.v=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.enableVertexAttribArray(e.l.O),n.vertexAttribPointer(e.l.O,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.u=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.enableVertexAttribArray(e.l.N),n.vertexAttribPointer(e.l.N,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(r,0)}a=e.l,n.useProgram(e.s),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.i.bindTexture2d(t.glName),n.enableVertexAttribArray(a.O),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.vertexAttribPointer(a.O,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(a.N),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.vertexAttribPointer(a.N,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(a.O),n.disableVertexAttribArray(a.N),n.bindBuffer(n.ARRAY_BUFFER,null),e.i.bindTexture2d(0)}(e,t),"function"===typeof e.h.canvas.transferToImageBitmap?Promise.resolve(e.h.canvas.transferToImageBitmap()):n?Promise.resolve(e.h.canvas):"function"===typeof createImageBitmap?createImageBitmap(e.h.canvas):(void 0===e.j&&(e.j=document.createElement("canvas")),new Promise((function(t){e.j.height=e.h.canvas.height,e.j.width=e.h.canvas.width,e.j.getContext("2d",{}).drawImage(e.h.canvas,0,0,e.h.canvas.width,e.h.canvas.height),t(e.j)})))}function ln(e){this.h=e}$t.prototype.l=Ut(en);var un=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function dn(e,t){return t+e}function hn(e,t){window[e]=t}function pn(e){if(this.h=e,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=e&&e.locateFile||dn,"object"===typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"===typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.ha=t,e.options)for(var n=(t=i(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var a=e.options[n].default;void 0!==a&&(this.l[n]="function"===typeof a?a():a)}}function fn(e){var t,n,a,r,s,o,i,l,u,d,h;return I((function(p){switch(p.h){case 1:return e.ga?(t=void 0===e.h.files?[]:"function"===typeof e.h.files?e.h.files(e.l):e.h.files,v(p,I((function(e){switch(e.h){case 1:return e.s=2,v(e,WebAssembly.instantiate(un),4);case 4:e.h=3,e.s=0;break;case 2:return e.s=0,e.l=null,e.return(!1);case 3:return e.return(!0)}})),2)):p.return();case 2:if(n=p.i,"object"===typeof window)return hn("createMediapipeSolutionsWasm",{locateFile:e.locateFile}),hn("createMediapipeSolutionsPackedAssets",{locateFile:e.locateFile}),o=t.filter((function(e){return void 0!==e.data})),i=t.filter((function(e){return void 0===e.data})),l=Promise.all(o.map((function(t){var n=mn(e,t.url);if(void 0!==t.path){var a=t.path;n=n.then((function(t){return e.overrideFile(a,t),Promise.resolve(t)}))}return n}))),u=Promise.all(i.map((function(t){return void 0===t.simd||t.simd&&n||!t.simd&&!n?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(e.locateFile(t.url,e.ha)):Promise.resolve()}))).then((function(){var t,n,a;return I((function(r){if(1==r.h)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,a=e,v(r,t(n),2);a.i=r.i,r.h=0}))})),d=I((function(t){return e.h.graph&&e.h.graph.url?t=v(t,mn(e,e.h.graph.url),0):(t.h=0,t=void 0),t})),v(p,Promise.all([u,l,d]),7);if("function"!==typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return a=t.filter((function(e){return void 0===e.simd||e.simd&&n||!e.simd&&!n})).map((function(t){return e.locateFile(t.url,e.ha)})),importScripts.apply(null,c(a)),r=e,v(p,createMediapipeSolutionsWasm(Module),6);case 6:r.i=p.i,e.m=new OffscreenCanvas(1,1),e.i.canvas=e.m,s=e.i.GL.createContext(e.m,{antialias:!1,alpha:!1,va:"undefined"!==typeof WebGL2RenderingContext?2:1}),e.i.GL.makeContextCurrent(s),p.h=4;break;case 7:if(e.m=document.createElement("canvas"),!(h=e.m.getContext("webgl2",{}))&&!(h=e.m.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),p.return();e.K=h,e.i.canvas=e.m,e.i.createContext(e.m,!0,!0,{});case 4:e.j=new e.i.SolutionWasm,e.ga=!1,p.h=0}}))}function mn(e,t){var n,a;return I((function(r){return t in e.L?r.return(e.L[t]):(n=e.locateFile(t,""),a=fetch(n).then((function(e){return e.arrayBuffer()})),e.L[t]=a,r.return(a))}))}function gn(e,t,n){var a,r,s,o,c,l,u,d,h,p,f,m,g,y;return I((function(b){switch(b.h){case 1:if(!n)return b.return(t);for(a={},r=0,s=i(Object.keys(n)),o=s.next();!o.done;o=s.next())c=o.value,"string"!==typeof(l=n[c])&&"texture"===l.type&&void 0!==t[l.stream]&&++r;1<r&&(e.M=!1),u=i(Object.keys(n)),o=u.next();case 2:if(o.done){b.h=4;break}if(d=o.value,"string"===typeof(h=n[d]))return g=a,y=d,v(b,function(e,t,n){var a;return I((function(r){return"number"===typeof n||n instanceof Uint8Array||n instanceof e.i.Uint8BlobList?r.return(n):n instanceof e.i.Texture2dDataOut?((a=e.v[t])||(a=new on(e.i,e.K),e.v[t]=a),r.return(cn(a,n,e.M))):r.return(void 0)}))}(e,d,t[h]),14);if(p=t[h.stream],"detection_list"===h.type){if(p){for(var x=p.getRectList(),w=p.getLandmarksList(),k=p.getClassificationsList(),S=[],N=0;N<x.size();++N){var T=tn(x.get(N)),C=void 0;C=void 0===C?0:C,T={la:{sa:et(T,1),ta:et(T,2),height:et(T,3),width:et(T,4),rotation:et(T,5,0),pa:$e(je(T,6),C)},ea:sn(w.get(N)),ba:an(Xt(k.get(N)))},S.push(T)}x=S}else x=[];a[d]=x,b.h=7;break}if("proto_list"===h.type){if(p){for(x=Array(p.size()),w=0;w<p.size();w++)x[w]=p.get(w);p.delete()}else x=[];a[d]=x,b.h=7;break}if(void 0===p){b.h=3;break}if("float_list"===h.type){a[d]=p,b.h=7;break}if("proto"===h.type){a[d]=p,b.h=7;break}if("texture"!==h.type)throw Error("Unknown output config type: '"+h.type+"'");return(f=e.v[d])||(f=new on(e.i,e.K),e.v[d]=f),v(b,cn(f,p,e.M),13);case 13:m=b.i,a[d]=m;case 7:h.transform&&a[d]&&(a[d]=h.transform(a[d])),b.h=3;break;case 14:g[y]=b.i;case 3:o=u.next(),b.h=2;break;case 4:return b.return(a)}}))}function yn(e,t){for(var n=t.name||"$",a=[].concat(c(t.wants)),r=new e.i.StringList,s=i(t.wants),o=s.next();!o.done;o=s.next())r.push_back(o.value);s=e.i.PacketListener.implement({onResults:function(r){for(var s={},o=0;o<t.wants.length;++o)s[a[o]]=r.get(o);var i=e.listeners[n];i&&(e.I=gn(e,s,t.outs).then((function(n){n=i(n);for(var r=0;r<t.wants.length;++r){var o=s[a[r]];"object"===typeof o&&o.hasOwnProperty&&o.hasOwnProperty("delete")&&o.delete()}n&&(e.I=n)})))}}),e.j.attachMultiListener(r,s),r.delete()}function bn(e){switch(void 0===e&&(e=0),e){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function vn(e){var t=this;e=e||{},this.h=new pn({locateFile:e.locateFile,files:function(e){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:bn(e.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:sn},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:sn},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"===typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(e){var n,a,r;return I((function(s){return 1==s.h?(n=bn(e),a="third_party/mediapipe/modules/pose_landmark/"+n,v(s,mn(t.h,n),2)):(r=s.i,t.h.overrideFile(a,r),s.return(!0))}))}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}(e=pn.prototype).close=function(){return this.j&&this.j.delete(),Promise.resolve()},e.reset=function(){var e=this;return I((function(t){e.j&&(e.j.reset(),e.s={},e.v={}),t.h=0}))},e.setOptions=function(e,t){var n=this;if(t=t||this.h.options){for(var a=[],r=[],s={},o=i(Object.keys(e)),c=o.next();!c.done;s={X:s.X,Y:s.Y},c=o.next())if(!((c=c.value)in this.l)||this.l[c]!==e[c]){this.l[c]=e[c];var l=t[c];void 0!==l&&(l.onChange&&(s.X=l.onChange,s.Y=e[c],a.push(function(e){return function(){return I((function(t){if(1==t.h)return v(t,e.X(e.Y),2);!0===t.i&&(n.u=!0),t.h=0}))}}(s))),l.graphOptionXref&&(c=Object.assign({},{calculatorName:"",calculatorIndex:0},l.graphOptionXref,{valueNumber:1===l.type?e[c]:0,valueBoolean:0===l.type&&e[c],valueString:2===l.type?e[c]:""}),r.push(c)))}0===a.length&&0===r.length||(this.u=!0,this.H=(void 0===this.H?[]:this.H).concat(r),this.F=(void 0===this.F?[]:this.F).concat(a))}},e.initialize=function(){var e=this;return I((function(t){return 1==t.h?v(t,fn(e),2):3!=t.h?v(t,function(e){var t,n,a,r,s,o,c,l;return I((function(u){if(1==u.h)return e.h.graph&&e.h.graph.url&&e.fa===e.h.graph.url?u.return():(e.u=!0,e.h.graph&&e.h.graph.url?(e.fa=e.h.graph.url,v(u,mn(e,e.h.graph.url),3)):void(u.h=2));for(2!=u.h&&(t=u.i,e.j.loadGraph(t)),n=i(Object.keys(e.D)),a=n.next();!a.done;a=n.next())r=a.value,e.j.overrideFile(r,e.D[r]);if(e.D={},e.h.listeners)for(s=i(e.h.listeners),o=s.next();!o.done;o=s.next())c=o.value,yn(e,c);l=e.l,e.l={},e.setOptions(l),u.h=0}))}(e),3):v(t,function(e){var t,n,a,r,s,o;return I((function(c){switch(c.h){case 1:if(!e.u)return c.return();if(!e.F){c.h=2;break}t=i(e.F),n=t.next();case 3:if(n.done){c.h=5;break}return v(c,(0,n.value)(),4);case 4:n=t.next(),c.h=3;break;case 5:e.F=void 0;case 2:if(e.H){for(a=new e.i.GraphOptionChangeRequestList,r=i(e.H),s=r.next();!s.done;s=r.next())o=s.value,a.push_back(o);e.j.changeOptions(a),a.delete(),e.H=void 0}e.u=!1,c.h=0}}))}(e),0)}))},e.overrideFile=function(e,t){this.j?this.j.overrideFile(e,t):this.D[e]=t},e.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},e.send=function(e,t){var n,a,r,s,o,c,l,u,d,h=this;return I((function(p){switch(p.h){case 1:return h.h.inputs?(n=1e3*(void 0===t||null===t?performance.now():t),v(p,h.I,2)):p.return();case 2:return v(p,h.initialize(),3);case 3:for(a=new h.i.PacketDataList,r=i(Object.keys(e)),s=r.next();!s.done;s=r.next())if(o=s.value,c=h.h.inputs[o]){e:{var f=e[o];switch(c.type){case"video":var m=h.s[c.stream];if(m||(m=new on(h.i,h.K),h.s[c.stream]=m),0===m.m&&(m.m=m.i.createTexture()),"undefined"!==typeof HTMLVideoElement&&f instanceof HTMLVideoElement)var g=f.videoWidth,y=f.videoHeight;else"undefined"!==typeof HTMLImageElement&&f instanceof HTMLImageElement?(g=f.naturalWidth,y=f.naturalHeight):(g=f.width,y=f.height);y={glName:m.m,width:g,height:y},(g=m.h).canvas.width=y.width,g.canvas.height=y.height,g.activeTexture(g.TEXTURE0),m.i.bindTexture2d(m.m),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,f),m.i.bindTexture2d(0),m=y;break e;case"detections":for((m=h.s[c.stream])||(m=new ln(h.i),h.s[c.stream]=m),m.data||(m.data=new m.h.DetectionListData),m.data.reset(f.length),y=0;y<f.length;++y){g=f[y];var b=m.data,x=b.setBoundingBox,w=y,k=g.la,S=new $t;if(Ze(S,1,k.sa),Ze(S,2,k.ta),Ze(S,3,k.height),Ze(S,4,k.width),Ze(S,5,k.rotation),He(S,6,k.pa),k=S.l(),x.call(b,w,k),g.ea)for(b=0;b<g.ea.length;++b){S=g.ea[b],w=(x=m.data).addNormalizedLandmark,k=y,S=Object.assign({},S,{visibility:S.visibility?S.visibility:0});var I=new Kt;Ze(I,1,S.x),Ze(I,2,S.y),Ze(I,3,S.z),S.visibility&&Ze(I,4,S.visibility),S=I.l(),w.call(x,k,S)}if(g.ba)for(b=0;b<g.ba.length;++b)w=(x=m.data).addClassification,k=y,S=g.ba[b],Ze(I=new Gt,2,S.qa),S.index&&He(I,1,S.index),S.label&&He(I,3,S.label),S.displayName&&He(I,4,S.displayName),S=I.l(),w.call(x,k,S)}m=m.data;break e;default:m={}}}switch(l=m,u=c.stream,c.type){case"video":a.pushTexture2d(Object.assign({},l,{stream:u,timestamp:n}));break;case"detections":(d=l).stream=u,d.timestamp=n,a.pushDetectionList(d);break;default:throw Error("Unknown input config type: '"+c.type+"'")}}return h.j.send(a),v(p,h.I,4);case 4:a.delete(),p.h=0}}))},e.onResults=function(e,t){this.listeners[t||"$"]=e},C("Solution",pn),C("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(e=vn.prototype).reset=function(){this.h.reset()},e.close=function(){return this.h.close(),Promise.resolve()},e.onResults=function(e){this.h.onResults(e)},e.initialize=function(){var e=this;return I((function(t){return v(t,e.h.initialize(),0)}))},e.send=function(e,t){var n=this;return I((function(a){return v(a,n.h.send(e,t),0)}))},e.setOptions=function(e){this.h.setOptions(e)},C("Pose",vn),C("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),C("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),C("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),C("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),C("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),C("VERSION","0.5.1675469404")}).call(this)},8377:function(e,t,n){!function(e,t,n){"use strict";const a={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class r{constructor(e,t){this.modelPath=t||"https://storage.googleapis.com/tfjs-models/savedmodel/".concat(this.getPrefix(e),"/model.json")}getPrefix(e){return"lite_mobilenet_v2"===e?"ssd".concat(e):"ssd_".concat(e)}async load(){this.model=await t.loadGraphModel(this.modelPath);const e=n.zeros([1,300,300,3],"int32"),a=await this.model.executeAsync(e);await Promise.all(a.map((e=>e.data()))),a.map((e=>e.dispose())),e.dispose()}async infer(e,t,a){const r=n.tidy((()=>(e instanceof n.Tensor||(e=n.browser.fromPixels(e)),n.expandDims(e)))),s=r.shape[1],o=r.shape[2],i=await this.model.executeAsync(r),c=i[0].dataSync(),l=i[1].dataSync();r.dispose(),n.dispose(i);const[u,d]=this.calculateMaxScores(c,i[0].shape[1],i[0].shape[2]),h=n.getBackend();"webgl"===n.getBackend()&&n.setBackend("cpu");const p=n.tidy((()=>{const e=n.tensor2d(l,[i[1].shape[1],i[1].shape[3]]);return n.image.nonMaxSuppression(e,u,t,a,a)})),f=p.dataSync();return p.dispose(),h!==n.getBackend()&&n.setBackend(h),this.buildDetectedObjects(o,s,l,u,f,d)}buildDetectedObjects(e,t,n,r,s,o){const i=s.length,c=[];for(let l=0;l<i;l++){const i=[];for(let e=0;e<4;e++)i[e]=n[4*s[l]+e];const u=i[0]*t,d=i[1]*e,h=i[2]*t,p=i[3]*e;i[0]=d,i[1]=u,i[2]=p-d,i[3]=h-u,c.push({bbox:i,class:a[o[s[l]]+1].displayName,score:r[s[l]]})}return c}calculateMaxScores(e,t,n){const a=[],r=[];for(let s=0;s<t;s++){let t=Number.MIN_VALUE,o=-1;for(let a=0;a<n;a++)e[s*n+a]>t&&(t=e[s*n+a],o=a);a[s]=t,r[s]=o}return[a,r]}async detect(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;return this.infer(e,t,n)}dispose(){null!=this.model&&this.model.dispose()}}e.ObjectDetection=r,e.load=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==n)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const t=e.base||"lite_mobilenet_v2",a=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw new Error("ObjectDetection constructed with invalid base model ".concat(t,". Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'."));const s=new r(t,a);return await s.load(),s},e.version="2.2.3",Object.defineProperty(e,"__esModule",{value:!0})}(t,n(1447),n(3613))},1447:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GraphModel:()=>Xe,deregisterOp:()=>_,loadGraphModel:()=>Ke,loadGraphModelSync:()=>Ye,registerOp:()=>C,version_converter:()=>Qe});var a={};n.r(a),n.d(a,{json:()=>B});var r={};n.r(r),n.d(r,{json:()=>P});var s={};n.r(s),n.d(s,{json:()=>V});var o={};n.r(o),n.d(o,{json:()=>W});var i={};n.r(i),n.d(i,{json:()=>U});var c={};n.r(c),n.d(c,{json:()=>G});var l={};n.r(l),n.d(l,{json:()=>j});var u={};n.r(u),n.d(u,{json:()=>H});var d={};n.r(d),n.d(d,{json:()=>q});var h={};n.r(h),n.d(h,{json:()=>X});var p={};n.r(p),n.d(p,{json:()=>K});var f={};n.r(f),n.d(f,{json:()=>Y});var m={};n.r(m),n.d(m,{json:()=>Q});var g={};n.r(g),n.d(g,{json:()=>Z});var y={};n.r(y),n.d(y,{json:()=>J});var b={};n.r(b),n.d(b,{json:()=>$});var v={};n.r(v),n.d(v,{json:()=>ee});var x={};n.r(x),n.d(x,{json:()=>te});var w={};n.r(w),n.d(w,{json:()=>ne});var k={};n.r(k),n.d(k,{OP_SCOPE_SUFFIX:()=>ve.zvA,abs:()=>ve.WnP,acos:()=>ve.Khb,acosh:()=>ve.__u,add:()=>ve.IHx,addN:()=>ve.QBD,all:()=>ve.$6P,any:()=>ve.YjB,argMax:()=>ve.NqF,argMin:()=>ve.vHJ,asin:()=>ve.ZRM,asinh:()=>ve.VfV,atan:()=>ve.z4N,atan2:()=>ve.fvJ,atanh:()=>ve.C80,avgPool:()=>ve.wS1,avgPool3d:()=>ve.uR5,basicLSTMCell:()=>ve.zEQ,batchNorm:()=>ve.tgs,batchNorm2d:()=>ve.Dxk,batchNorm3d:()=>ve.JY5,batchNorm4d:()=>ve.p3b,batchToSpaceND:()=>ve.E4h,bincount:()=>ve.yE8,bitwiseAnd:()=>ve.ycw,booleanMaskAsync:()=>ve.anm,broadcastArgs:()=>ve.XsQ,broadcastTo:()=>ve.UFq,buffer:()=>ve.f3b,cast:()=>ve.pju,ceil:()=>ve.mDi,clipByValue:()=>ve.iUl,clone:()=>ve.d9v,complex:()=>ve.PYB,concat:()=>ve.zoF,concat1d:()=>ve.gME,concat2d:()=>ve.Izb,concat3d:()=>ve.MNy,concat4d:()=>ve.ZaL,conv1d:()=>ve.PAt,conv2d:()=>ve.Tek,conv2dTranspose:()=>ve.bc,conv3d:()=>ve.pdZ,conv3dTranspose:()=>ve.$QV,cos:()=>ve.mCk,cosh:()=>ve.f9Y,cosineWindow:()=>ve.mew,cumprod:()=>ve.$Gn,cumsum:()=>ve.zbp,denseBincount:()=>ve.ppE,depthToSpace:()=>ve.nTT,depthwiseConv2d:()=>ve.B10,diag:()=>ve.Ka3,dilation2d:()=>ve.WmZ,div:()=>ve.hiC,divNoNan:()=>ve.NTj,dot:()=>ve.AKD,dropout:()=>ve.rvX,einsum:()=>ve.WYO,elu:()=>ve.pyx,enclosingPowerOfTwo:()=>ve.GRh,ensureShape:()=>ve.EDe,equal:()=>ve.DgJ,erf:()=>ve.qNN,euclideanNorm:()=>ve.d2q,exp:()=>ve.Qqt,expandDims:()=>ve.dt4,expm1:()=>ve.t$B,eye:()=>ve.iyy,fft:()=>ve.kp_,fill:()=>ve.hlL,floor:()=>ve.GWj,floorDiv:()=>ve.qPi,fused:()=>ve.imm,gather:()=>ve.Iqj,gatherND:()=>ve.dbB,greater:()=>ve.pjt,greaterEqual:()=>ve.brS,ifft:()=>ve.Sxn,imag:()=>ve.asL,image:()=>ve.BHj,inTopKAsync:()=>ve.V3u,irfft:()=>ve.wx0,isFinite:()=>ve.xVT,isInf:()=>ve.UWc,isNaN:()=>ve.i2d,leakyRelu:()=>ve.hi7,less:()=>ve.d9m,lessEqual:()=>ve.zN1,linalg:()=>ve.$r2,linspace:()=>ve.SX3,localResponseNormalization:()=>ve.G9k,log:()=>ve.cM7,log1p:()=>ve.Krr,logSigmoid:()=>ve.e_t,logSoftmax:()=>ve.CmS,logSumExp:()=>ve.l_t,logicalAnd:()=>ve.HvI,logicalNot:()=>ve.hJK,logicalOr:()=>ve.K5V,logicalXor:()=>ve.egP,losses:()=>ve.MB5,lowerBound:()=>ve.eab,matMul:()=>ve.OI3,max:()=>ve.Fp7,maxPool:()=>ve._sB,maxPool3d:()=>ve.YQQ,maxPoolWithArgmax:()=>ve.Ip$,maximum:()=>ve.gWQ,mean:()=>ve.J69,meshgrid:()=>ve.ry_,min:()=>ve.VV$,minimum:()=>ve.LTh,mirrorPad:()=>ve.VdP,mod:()=>ve.wQq,moments:()=>ve.Gi7,movingAverage:()=>ve.p_,mul:()=>ve.dC7,multiRNNCell:()=>ve.rq4,multinomial:()=>ve.SJ_,neg:()=>ve.W76,norm:()=>ve.KOy,notEqual:()=>ve.Quu,oneHot:()=>ve.lfX,ones:()=>ve.iUs,onesLike:()=>ve.JpU,op:()=>ve.op,outerProduct:()=>ve.N2O,pad:()=>ve.vku,pad1d:()=>ve.pNR,pad2d:()=>ve.koy,pad3d:()=>ve.t1L,pad4d:()=>ve.lGY,pool:()=>ve.d_R,pow:()=>ve.sQ3,prelu:()=>ve.AL3,print:()=>ve.S0v,prod:()=>ve.WVs,raggedGather:()=>ve.$gW,raggedRange:()=>ve.VT$,raggedTensorToTensor:()=>ve.N89,rand:()=>ve.TN_,randomGamma:()=>ve.wzB,randomNormal:()=>ve.nGf,randomStandardNormal:()=>ve.ruB,randomUniform:()=>ve.LGj,randomUniformInt:()=>ve.pe5,range:()=>ve.w6H,real:()=>ve.kwC,reciprocal:()=>ve.M25,relu:()=>ve.UYe,relu6:()=>ve.btT,reshape:()=>ve.XLQ,reverse:()=>ve.GYS,reverse1d:()=>ve.SDf,reverse2d:()=>ve.diP,reverse3d:()=>ve.sx7,reverse4d:()=>ve.mG2,rfft:()=>ve.QEs,round:()=>ve.NMM,rsqrt:()=>ve.bp0,scalar:()=>ve.iD$,scatterND:()=>ve.snQ,searchSorted:()=>ve.zcT,selu:()=>ve.U8D,separableConv2d:()=>ve.U_I,setdiff1dAsync:()=>ve.ODp,sigmoid:()=>ve.XD2,sign:()=>ve.Xxe,signal:()=>ve.tdS,sin:()=>ve.O$l,sinh:()=>ve.R_K,slice:()=>ve.tPi,slice1d:()=>ve.jZU,slice2d:()=>ve.SmN,slice3d:()=>ve.CnO,slice4d:()=>ve.p0P,softmax:()=>ve.XAC,softplus:()=>ve.Wvh,spaceToBatchND:()=>ve.fBT,sparse:()=>ve.rVs,sparseToDense:()=>ve.ers,spectral:()=>ve.uN7,split:()=>ve.Vl2,sqrt:()=>ve._b3,square:()=>ve.h62,squaredDifference:()=>ve.$i,squeeze:()=>ve.L9e,stack:()=>ve.knu,step:()=>ve.Nbs,stridedSlice:()=>ve.NXj,string:()=>ve.Z_8,sub:()=>ve.luU,sum:()=>ve.Smz,tan:()=>ve.ORZ,tanh:()=>ve.AEp,tensor:()=>ve.XeE,tensor1d:()=>ve.RRF,tensor2d:()=>ve.odF,tensor3d:()=>ve.wOQ,tensor4d:()=>ve.yXz,tensor5d:()=>ve.Bfx,tensor6d:()=>ve.xZs,tensorScatterUpdate:()=>ve.Pg0,tile:()=>ve.Gg6,topk:()=>ve.hg7,transpose:()=>ve.p4s,truncatedNormal:()=>ve.Xu6,unique:()=>ve.Two,unsortedSegmentSum:()=>ve.pUJ,unstack:()=>ve.HHK,upperBound:()=>ve.GaM,variable:()=>ve.VD$,where:()=>ve.arb,whereAsync:()=>ve.itS,zeros:()=>ve.lls,zerosLike:()=>ve.P84});var S=n(3613);var I,N;(0,S.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(I||(I={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(N||(N={}));const T={};function C(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};T[e]=n}function E(e){return T[e]}function _(e){delete T[e]}function A(e,t,n,a,r){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return R(t.inputNames[i],n,a,r);if("tensors"===s.type){const s=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>R(e,n,a,r)))}const c=R(t.inputNames[i],n,a,r),l=c.dataSync();return"number"===s.type?l[0]:S.util.toNestedArray(c.shape,l)}const o=t.attrParams[e];return o&&o.value}function R(e,t,n,a){const[r,s]=M(e,n);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[O(r,e)]));return void 0!==o?t[O(r,o)][s]:void 0}function F(e,t,n){return t[O(e,n.currentContextId)]}function D(e,t){const[n,a,r]=M(e,t);return[O(n,t&&t.currentContextId),a,r]}function O(e,t){return t?"".concat(e,"-").concat(t):e}function M(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const a=e.split(":");let r;if(1===a.length)r=[e,0,void 0];else{const e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function L(e,t,n){let a=A("pad",e,t,n);if("explicit"===a){a=A("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function z(e){return e.kept?e:(0,S.clone)(e)}const B=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],P=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],V=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],W=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],U=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],G=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],j=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],H=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],q=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],X=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],K=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Y=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Q=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Z=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],J=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],$=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],ee=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],te=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ne=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class ae{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[a,r,s,o,i,c,l,u,d,h,p,f,m,g,y,b,v,x,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,a=[],r=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const c=[];let l={},u={};null!=t&&(l=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));const d=Object.keys(o);d.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=D(e),s=o[a];if(null!=s.outputs){const e=s.outputs.indexOf(r);if(-1!==e){const r="".concat(a,":").concat(e);t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(u).length?d.forEach((e=>{const t=o[e];0===t.children.length&&c.push(t)})):Object.keys(u).forEach((e=>{const[t]=D(e),n=o[t];null!=n&&(n.signatureKey=u[e],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=D(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=a;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:o,inputs:i,outputs:c,weights:r,placeholders:a,signature:t,functions:h};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=E(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=se(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=me(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=ie(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=fe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=oe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=ye(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ye(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=pe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=ge(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ge(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=ue(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=de(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=le(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(e.op))}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=D(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ce(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}));Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=D(e),o=a[r];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const a="".concat(r,":").concat(e);t.inputNames[n]=a}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=D(o[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))}));const i=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function re(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,S.env)().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function se(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return null!=r?re(r.s,a):n}function oe(e,t,n){const a=e[t];return a?a.b:n}function ie(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function ce(e){switch("string"===typeof e&&(e=I[e]),e){case I.DT_FLOAT:case I.DT_HALF:return"float32";case I.DT_INT32:case I.DT_INT64:case I.DT_INT8:case I.DT_UINT8:return"int32";case I.DT_BOOL:return"bool";case I.DT_DOUBLE:return"float32";case I.DT_STRING:return"string";case I.DT_COMPLEX64:case I.DT_COMPLEX128:return"complex64";default:return null}}function le(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function ue(e,t,n){const a=e[t];return a&&a.type?ce(a.type):n}function de(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>ce(e))):n}function he(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function pe(e,t,n){const a=e[t];return a&&a.shape?he(a.shape):n}function fe(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function me(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>re(e,a))):n}function ge(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>he(e))):n}function ye(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class be{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return R(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return R(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ie(this.node.rawAttrs,e,t);if(null!=n.s)return se(this.node.rawAttrs,e,t);if(null!=n.b)return oe(this.node.rawAttrs,e,t);if(null!=n.shape)return pe(this.node.rawAttrs,e,t);if(null!=n.type)return ue(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return fe(this.node.rawAttrs,e,t);if(null!=n.list.s)return me(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ge(this.node.rawAttrs,e,t);if(null!=n.list.b)return ye(this.node.rawAttrs,e,t);if(null!=n.list.type)return de(this.node.rawAttrs,e,t)}return t}}var ve=n(9503);function xe(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){S.util.assert(e.length===t.length,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")));for(let a=0;a<e.length;a++){const r=e[a],s=t[a];S.util.assert(r<0||s<0||r===s,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}}}function we(e){return"number"!==typeof e&&!e.some((e=>e<0))}function ke(e,t,n){let a=Se(e,n);const r=!we(a);if(r&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(a));if(r&&t.forEach((e=>{a=Se(e.shape,a)})),!we(a))throw new Error("Non-fully-defined elementShape: ".concat(a));return a}function Se(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error("Incompatible ranks during merge: ".concat(e," vs. ").concat(t));const n=[];for(let a=0;a<e.length;++a){const r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error("Incompatible shape during merge: ".concat(e," vs. ").concat(t));n[a]=r>=0?r:s}return n}class Ie{constructor(e,t,n,a,r,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,S.scalar)(0),(0,S.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||e>=this.size())throw new Error("Tried to read from index ".concat(e,", but array size is: ").concat(this.size()));const t=this.tensors[e];if(t.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(e," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index ".concat(e,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,",\n          because the value dtype is ").concat(t.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),xe(this.elementShape,t.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been written."));n.tensor=t,(0,S.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(e.length," is not the same as tensors size: ").concat(t.length,"."));e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(t));if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,S.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return xe(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,S.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(e));if(0===this.size())return(0,S.tensor)([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return xe(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),(0,S.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(e,(0,S.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(t.shape));if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(e.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:t.size/n,s=[];(0,S.tidy)((()=>{t=(0,S.reshape)(t,[1,n,r]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:a[n-1],0],i=[1,e[n],r];s[n]=(0,S.reshape)((0,S.slice)(t,o,i),this.elementShape)}return s}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,s)}}class Ne{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(e.dtype));xe(t,e.shape,"TensorList shape mismatch: "),(0,S.keep)(e)})),this.idTensor=(0,S.scalar)(0),this.maxNumElements=a,(0,S.keep)(this.idTensor)}copy(){return new Ne([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));xe(e,this.elementShape,"TensorList shape mismatch: ");const a=ke(this.elementShape,this.tensors,e);return(0,S.tidy)((()=>{const e=this.tensors.map((e=>(0,S.reshape)(e,a)));return(0,S.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=ke(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,xe(a.shape,e,"TensorList shape mismatch: "),(0,S.reshape)(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(xe(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,S.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error("TensorListResize input size ".concat(e," is greater maxNumElement ").concat(this.maxNumElements,"."));const t=new Ne([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(e<0||e>this.tensors.length)throw new Error("Trying to access element ".concat(e," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[e])throw new Error("element at index ".concat(e," is null."));xe(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=ke(this.elementShape,this.tensors,t);return(0,S.reshape)(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error("Trying to set element ".concat(e," in a list with max ").concat(this.maxNumElements," elements."));xe(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,S.keep)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));xe(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=ke(this.elementShape,this.tensors,n);return 0===e.length?(0,S.tensor)([],[0].concat(a)):(0,S.tidy)((()=>{const t=e.map((e=>(0,S.reshape)(this.tensors[e],a)));return(0,S.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(e));xe(this.elementShape,t,"TensorList shape mismatch: ");const n=ke(this.elementShape,this.tensors,t);return 0===this.size()?(0,S.tensor)([],[0].concat(n)):(0,S.tidy)((()=>{const e=this.tensors.map((e=>(0,S.reshape)(e,n)));return(0,S.concat)(e,0)}))}}const Te=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=A("thenBranch",e,t,n),r=A("elseBranch",e,t,n),s=A("cond",e,t,n),o=A("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=A("body",e,t,n),r=A("cond",e,t,n),s=A("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let c=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=s;for(;c[0];){const e=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[z(A("pred",e,t,n))];case"Switch":{const a=A("pred",e,t,n);let r=A("data",e,t,n);return r.kept||(r=z(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==R(e,t,n)));if(a){return[z(R(a,t,n))]}return}case"Enter":{const a=A("frameName",e,t,n),r=A("tensor",e,t,n);return n.enterFrame(a),[z(r)]}case"Exit":{const a=A("tensor",e,t,n);return n.exitFrame(),[z(a)]}case"NextIteration":{const a=A("tensor",e,t,n);return n.nextIteration(),[z(a)]}case"TensorArrayV3":{const a=A("size",e,t,n),r=A("dtype",e,t,n),s=A("elementShape",e,t,n),o=A("dynamicSize",e,t,n),i=A("clearAfterRead",e,t,n),c=A("identicalElementShapes",e,t,n),l=A("name",e,t,n),u=new Ie(l,r,a,s,c,o,i);return n.addTensorArray(u),[u.idTensor,(0,S.scalar)(1)]}case"TensorArrayWriteV3":{const a=A("tensorArrayId",e,t,n),r=A("index",e,t,n),s=A("tensor",e,t,n),o=n.getTensorArray(a.id);return o.write(r,s),[o.idTensor]}case"TensorArrayReadV3":{const a=A("tensorArrayId",e,t,n),r=A("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=A("tensorArrayId",e,t,n),r=A("indices",e,t,n),s=A("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=A("tensorArrayId",e,t,n),r=A("indices",e,t,n),s=A("tensor",e,t,n),o=n.getTensorArray(a.id);return o.scatter(r,s),[o.idTensor]}case"TensorArrayConcatV3":{const a=A("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=A("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=A("tensorArrayId",e,t,n),r=A("tensor",e,t,n),s=A("lengths",e,t,n),o=n.getTensorArray(a.id);return o.split(s,r),[o.idTensor]}case"TensorArraySizeV3":{const a=A("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return[(0,S.scalar)(r.size(),"int32")]}case"TensorArrayCloseV3":{const a=A("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=A("tensorListId",e,t,n),r=A("index",e,t,n),s=A("tensor",e,t,n),o=n.getTensorList(a.id);return o.setItem(r,s),[o.idTensor]}case"TensorListGetItem":{const a=A("tensorListId",e,t,n),r=A("index",e,t,n),s=A("elementShape",e,t,n),o=A("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=A("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const s=new Ne([],n,e.dtype,a),o=(0,S.unstack)(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(A("tensor",e,t,n),a,A("elementShape",e,t,n),A("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=A("elementShape",e,t,n),r=A("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=A(s,e,t,n),i=function(e,t,n,a){return new Ne([],e,t,a)}(a,r,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=A("tensorListId",e,t,n),r=A("indices",e,t,n),s=A("elementShape",e,t,n),o=A("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,o,s)]}case"TensorListStack":{const a=A("tensorListId",e,t,n),r=A("elementShape",e,t,n),s=A("elementDType",e,t,n),o=A("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,o)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));if(e.dtype!==n)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(n));xe(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=(0,S.unstack)(e);return new Ne(r,t,a)}(A("tensor",e,t,n),A("elementShape",e,t,n),A("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=A("tensorListId",e,t,n),r=n.getTensorList(a.id),s=A("dtype",e,t,n),o=A("elementShape",e,t,n);return[r.concat(s,o)]}case"TensorListPushBack":{const a=A("tensorListId",e,t,n),r=A("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=A("tensorListId",e,t,n),r=A("elementShape",e,t,n),s=A("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=A("tensor",e,t,n),r=A("elementShape",e,t,n),s=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(e.shape));const s=Se(e.shape.slice(1),n),o=0===a?0:e.size/a,i=(0,S.tidy)((()=>{const n=[];e=(0,S.reshape)(e,[1,a,o]);for(let a=0;a<t.length;++a){const i=[0,0===a?0:r[a-1],0],c=[1,t[a],o];n[a]=(0,S.reshape)((0,S.slice)(e,i,c),s)}return e.dispose(),n})),c=new Ne([],n,e.dtype,t.length);for(let l=0;l<i.length;l++)c.setItem(l,i[l]);return c}(a,A("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const a=A("tensorListId",e,t,n),r=n.getTensorList(a.id);return[(0,S.scalar)(r.size(),"int32")]}case"TensorListResize":{const a=A("tensorListId",e,t,n),r=A("size",e,t,n),s=n.getTensorList(a.id).resize(r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function Ce(e,t,n){const[a,r]=A("fusedOps",e,t,n),s="biasadd"===a,o=!s,i="prelu"===r,c="fusedbatchnorm"===a,l=A("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=A("strides",e,t,n),d=L(e,t,n),h=A("dataFormat",e,t,n).toUpperCase(),p=A("dilations",e,t,n);let[f,m]=A("args",e,t,n);o&&(m=f,f=void 0);return{stride:u,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:A("leakyreluAlpha",e,t,n)}}function Ee(e,t,n){return{boxes:A("boxes",e,t,n),scores:A("scores",e,t,n),maxOutputSize:A("maxOutputSize",e,t,n),iouThreshold:A("iouThreshold",e,t,n),scoreThreshold:A("scoreThreshold",e,t,n),softNmsSigma:A("softNmsSigma",e,t,n)}}var _e=n(7067);class Ae{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,S.scalar)(0),this.tensorMap=new Map,(0,S.keep)(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return _e.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,S.tidy)((()=>{const e=(0,S.unstack)(t),a=n.length,r=e.length;S.util.assert(a===r,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements."));for(let t=0;t<a;t++){const a=n[t],r=e[t];(0,S.keep)(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,S.tidy)((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,t);e.push(s)}return(0,S.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(e.dtype));if(t.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(t.dtype))}}function Re(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:S.tidy;const s=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(A("a",e,t,n),A("b",e,t,n))];case"AddN":return[a.addN(A("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(A("a",e,t,n),A("b",e,t,n))];case"Mul":return[a.mul(A("a",e,t,n),A("b",e,t,n))];case"RealDiv":case"Div":return[a.div(A("a",e,t,n),A("b",e,t,n))];case"DivNoNan":return[a.divNoNan(A("a",e,t,n),A("b",e,t,n))];case"FloorDiv":return[a.floorDiv(A("a",e,t,n),A("b",e,t,n))];case"Sub":return[a.sub(A("a",e,t,n),A("b",e,t,n))];case"Minimum":return[a.minimum(A("a",e,t,n),A("b",e,t,n))];case"Maximum":return[a.maximum(A("a",e,t,n),A("b",e,t,n))];case"Pow":return[a.pow(A("a",e,t,n),A("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(A("a",e,t,n),A("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"basic_math":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(A("x",e,t,n))];case"Acos":return[a.acos(A("x",e,t,n))];case"Acosh":return[a.acosh(A("x",e,t,n))];case"Asin":return[a.asin(A("x",e,t,n))];case"Asinh":return[a.asinh(A("x",e,t,n))];case"Atan":return[a.atan(A("x",e,t,n))];case"Atan2":return[a.atan2(A("x",e,t,n),A("y",e,t,n))];case"Atanh":return[a.atanh(A("x",e,t,n))];case"Ceil":return[a.ceil(A("x",e,t,n))];case"Complex":return[a.complex(A("real",e,t,n),A("imag",e,t,n))];case"Cos":return[a.cos(A("x",e,t,n))];case"Cosh":return[a.cosh(A("x",e,t,n))];case"Elu":return[a.elu(A("x",e,t,n))];case"Erf":return[a.erf(A("x",e,t,n))];case"Exp":return[a.exp(A("x",e,t,n))];case"Expm1":return[a.expm1(A("x",e,t,n))];case"Floor":return[a.floor(A("x",e,t,n))];case"Log":return[a.log(A("x",e,t,n))];case"Log1p":return[a.log1p(A("x",e,t,n))];case"Imag":return[a.imag(A("x",e,t,n))];case"Neg":return[a.neg(A("x",e,t,n))];case"Reciprocal":return[a.reciprocal(A("x",e,t,n))];case"Real":return[a.real(A("x",e,t,n))];case"Relu":return[a.relu(A("x",e,t,n))];case"Round":return[a.round(A("x",e,t,n))];case"Selu":return[a.selu(A("x",e,t,n))];case"Sigmoid":return[a.sigmoid(A("x",e,t,n))];case"Sin":return[a.sin(A("x",e,t,n))];case"Sign":return[a.sign(A("x",e,t,n))];case"Sinh":return[a.sinh(A("x",e,t,n))];case"Softplus":return[a.softplus(A("x",e,t,n))];case"Sqrt":return[a.sqrt(A("x",e,t,n))];case"Square":return[a.square(A("x",e,t,n))];case"Tanh":return[a.tanh(A("x",e,t,n))];case"Tan":return[a.tan(A("x",e,t,n))];case"ClipByValue":return[a.clipByValue(A("x",e,t,n),A("clipValueMin",e,t,n),A("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(A("x",e,t,n))];case"Rsqrt":return[a.rsqrt(R(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(A("x",e,t,n),A("alpha",e,t,n))];case"Prelu":return[a.prelu(A("x",e,t,n),A("alpha",e,t,n))];case"IsNan":return[a.isNaN(R(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(R(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(R(e.inputNames[0],t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"control":return Te(e,t,n);case"convolution":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Conv1D":{const r=A("stride",e,t,n),s=A("pad",e,t,n),o=A("dataFormat",e,t,n).toUpperCase(),i=A("dilation",e,t,n);return[a.conv1d(A("x",e,t,n),A("filter",e,t,n),r,s,o,i)]}case"Conv2D":{const r=A("strides",e,t,n),s=L(e,t,n),o=A("dataFormat",e,t,n).toUpperCase(),i=A("dilations",e,t,n);return[a.conv2d(A("x",e,t,n),A("filter",e,t,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:d}=Ce(e,t,n);return[a.fused.conv2d({x:A("x",e,t,n),filter:A("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:d}=Ce(e,t,n);return[a.fused.depthwiseConv2d({x:A("x",e,t,n),filter:A("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=A("outputShape",e,t,n),s=A("strides",e,t,n),o=L(e,t,n);return[a.conv2dTranspose(A("x",e,t,n),A("filter",e,t,n),r,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=A("strides",e,t,n),s=L(e,t,n),o=A("dilations",e,t,n),i=A("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(A("input",e,t,n),A("filter",e,t,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const r=A("strides",e,t,n),s=A("pad",e,t,n),o=A("dataFormat",e,t,n).toUpperCase(),i=A("dilations",e,t,n);return[a.conv3d(A("x",e,t,n),A("filter",e,t,n),[r[1],r[2],r[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const r=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n);return[a.avgPool(A("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n);return[a.maxPool(A("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n),i=A("includeBatchInIndex",e,t,n),{result:c,indexes:l}=a.maxPoolWithArgmax(A("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s,i);return[c,l]}case"AvgPool3D":{const r=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n);return[a.avgPool3d(A("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n);return[a.maxPool3d(A("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=A("strides",e,t,n),s=A("pad",e,t,n),o=A("dilations",e,t,n),i=r[1],c=r[2],l=o[1],u=o[2];return[a.dilation2d(A("x",e,t,n),A("filter",e,t,n),[i,c],s,[l,u],"NHWC")]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"creation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Fill":{const r=A("shape",e,t,n),s=A("dtype",e,t,n),o=A("value",e,t,n);return[a.fill(r,o,s)]}case"LinSpace":{const r=A("start",e,t,n),s=A("stop",e,t,n),o=A("num",e,t,n);return[a.linspace(r,s,o)]}case"Multinomial":{const r=A("logits",e,t,n),s=A("numSamples",e,t,n),o=A("seed",e,t,n);return[a.multinomial(r,s,o)]}case"OneHot":{const r=A("indices",e,t,n),s=A("depth",e,t,n),o=A("onValue",e,t,n),i=A("offValue",e,t,n),c=A("dtype",e,t,n);return[a.oneHot(r,s,o,i,c)]}case"Ones":return[a.ones(A("shape",e,t,n),A("dtype",e,t,n))];case"OnesLike":return[a.onesLike(A("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(A("shape",e,t,n),A("dtype",e,t,n),A("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(A("shape",e,t,n),A("minval",e,t,n),A("maxval",e,t,n),A("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(A("shape",e,t,n),A("minval",e,t,n),A("maxval",e,t,n),A("seed",e,t,n))];case"Range":{const r=A("start",e,t,n),s=A("stop",e,t,n),o=A("step",e,t,n);return[a.range(r,s,o,A("dtype",e,t,n))]}case"TruncatedNormal":{const r=A("shape",e,t,n),s=A("mean",e,t,n),o=A("stdDev",e,t,n),i=A("seed",e,t,n);return[a.truncatedNormal(r,s,o,A("dtype",e,t,n),i)]}case"Zeros":return[a.zeros(A("shape",e,t,n),A("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(A("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"dynamic":return async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:k;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=Ee(e,t,n),u=await r.image.nonMaxSuppressionWithScoreAsync(a,s,o,i,c,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Ee(e,t,n),l=A("padToMaxOutputSize",e,t,n),u=await r.image.nonMaxSuppressionPaddedAsync(a,s,o,i,c,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Ee(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,s,o,i,c)]}case"Where":{const a=r.cast(A("condition",e,t,n),"bool"),s=[await r.whereAsync(a)];return a.dispose(),s}case"ListDiff":return r.setdiff1dAsync(A("x",e,t,n),A("y",e,t,n));default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n);case"evaluation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"LowerBound":{const r=A("sortedSequence",e,t,n),s=A("values",e,t,n);return[a.lowerBound(r,s)]}case"TopKV2":{const r=A("x",e,t,n),s=A("k",e,t,n),o=A("sorted",e,t,n),i=a.topk(r,s,o);return[i.values,i.indices]}case"UpperBound":{const r=A("sortedSequence",e,t,n),s=A("values",e,t,n);return[a.upperBound(r,s)]}case"Unique":{const r=A("x",e,t,n),s=a.unique(r);return[s.values,s.indices]}case"UniqueV2":{const r=A("x",e,t,n),s=A("axis",e,t,n),o=a.unique(r,s);return[o.values,o.indices]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"image":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ResizeBilinear":{const r=A("images",e,t,n),s=A("size",e,t,n),o=A("alignCorners",e,t,n),i=A("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const r=A("images",e,t,n),s=A("size",e,t,n),o=A("alignCorners",e,t,n),i=A("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[s[0],s[1]],o,i)]}case"CropAndResize":{const r=A("image",e,t,n),s=A("boxes",e,t,n),o=A("boxInd",e,t,n),i=A("cropSize",e,t,n),c=A("method",e,t,n),l=A("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,s,o,i,c,l)]}case"ImageProjectiveTransformV3":{const r=A("images",e,t,n),s=A("transforms",e,t,n),o=A("outputShape",e,t,n),i=A("fillValue",e,t,n),c=A("interpolation",e,t,n),l=A("fillMode",e,t,n);return[a.image.transform(r,s,c.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"graph":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=A("default",e,t,n);return[R(e.name,t,n)||r];case"Placeholder":return[R(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[z(A("x",e,t,n))];case"IdentityN":return A("x",e,t,n).map((e=>z(e)));case"Shape":return[a.tensor1d(A("x",e,t,n).shape,"int32")];case"ShapeN":return A("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(A("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(A("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const s=A("x",e,t,n),o=A("data",e,t,n),i=A("message",e,t,n),c=A("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,c));return[s];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"logical":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Equal":return[a.equal(A("a",e,t,n),A("b",e,t,n))];case"NotEqual":return[a.notEqual(A("a",e,t,n),A("b",e,t,n))];case"Greater":return[a.greater(A("a",e,t,n),A("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(A("a",e,t,n),A("b",e,t,n))];case"Less":return[a.less(A("a",e,t,n),A("b",e,t,n))];case"LessEqual":return[a.lessEqual(A("a",e,t,n),A("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(A("a",e,t,n),A("b",e,t,n))];case"LogicalNot":return[a.logicalNot(A("a",e,t,n))];case"LogicalOr":return[a.logicalOr(A("a",e,t,n),A("b",e,t,n))];case"Select":case"SelectV2":return[a.where(A("condition",e,t,n),A("a",e,t,n),A("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(A("a",e,t,n),A("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"matrices":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(A("a",e,t,n),A("b",e,t,n),A("transposeA",e,t,n),A("transposeB",e,t,n))];case"Einsum":return[a.einsum(A("equation",e,t,n),...A("tensors",e,t,n))];case"Transpose":return[a.transpose(A("x",e,t,n),A("perm",e,t,n))];case"_FusedMatMul":const[r,s]=A("fusedOps",e,t,n),o="biasadd"===r,i="prelu"===s,c=A("numArgs",e,t,n),l=A("leakyreluAlpha",e,t,n);if(o){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,d]=A("args",e,t,n);return[a.fused.matMul({a:A("a",e,t,n),b:A("b",e,t,n),transposeA:A("transposeA",e,t,n),transposeB:A("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:d,leakyreluAlpha:l})];case"MatrixBandPart":return[a.linalg.bandPart(A("a",e,t,n),A("numLower",e,t,n),A("numUpper",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"normalization":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(A("x",e,t,n),A("axis",e,t,n),A("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(A("x",e,t,n),A("mean",e,t,n),A("variance",e,t,n),A("offset",e,t,n),A("scale",e,t,n),A("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(A("x",e,t,n),A("radius",e,t,n),A("bias",e,t,n),A("alpha",e,t,n),A("beta",e,t,n))];case"Softmax":return[a.softmax(A("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(A("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"ragged":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:s}=a.raggedGather(A("paramsNestedSplits",e,t,n),A("paramsDenseValues",e,t,n),A("indices",e,t,n),A("outputRaggedRank",e,t,n));return r.concat(s)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:s}=a.raggedRange(A("starts",e,t,n),A("limits",e,t,n),A("splits",e,t,n));return[r,s]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(A("shape",e,t,n),A("values",e,t,n),A("defaultValue",e,t,n),A("rowPartitionTensors",e,t,n),A("rowPartitionTypes",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"reduction":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Max":{const r=A("axis",e,t,n),s=A("keepDims",e,t,n);return[a.max(A("x",e,t,n),r,s)]}case"Mean":{const r=A("axis",e,t,n),s=A("keepDims",e,t,n);return[a.mean(A("x",e,t,n),r,s)]}case"Min":{const r=A("axis",e,t,n),s=A("keepDims",e,t,n);return[a.min(A("x",e,t,n),r,s)]}case"Sum":{const r=A("axis",e,t,n),s=A("keepDims",e,t,n);return[a.sum(A("x",e,t,n),r,s)]}case"All":{const r=A("axis",e,t,n),s=A("keepDims",e,t,n);return[a.all(A("x",e,t,n),r,s)]}case"Any":{const r=A("axis",e,t,n),s=A("keepDims",e,t,n);return[a.any(A("x",e,t,n),r,s)]}case"ArgMax":{const r=A("axis",e,t,n);return[a.argMax(A("x",e,t,n),r)]}case"ArgMin":{const r=A("axis",e,t,n);return[a.argMin(A("x",e,t,n),r)]}case"Prod":{const r=A("axis",e,t,n),s=A("keepDims",e,t,n);return[a.prod(A("x",e,t,n),r,s)]}case"Cumprod":{const r=A("axis",e,t,n),s=A("exclusive",e,t,n),o=A("reverse",e,t,n);return[a.cumprod(A("x",e,t,n),r,s,o)]}case"Cumsum":{const r=A("axis",e,t,n),s=A("exclusive",e,t,n),o=A("reverse",e,t,n);return[a.cumsum(A("x",e,t,n),r,s,o)]}case"Bincount":const r=A("x",e,t,n),s=A("weights",e,t,n),o=A("size",e,t,n);return[a.bincount(r,s,o)];case"DenseBincount":{const r=A("x",e,t,n),s=A("weights",e,t,n),o=A("size",e,t,n),i=A("binaryOutput",e,t,n);return[a.denseBincount(r,s,o,i)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"slice_join":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ConcatV2":case"Concat":{const r=A("n",e,t,n),s=A("axis",e,t,n);let o=A("tensors",e,t,n);return o=o.slice(0,r),[a.concat(o,s)]}case"Gather":{const r=A("x",e,t,n),s=A("indices",e,t,n);return[a.gather(r,a.cast(s,"int32"),0)]}case"GatherV2":{const r=A("axis",e,t,n),s=A("batchDims",e,t,n),o=A("x",e,t,n),i=A("indices",e,t,n);return[a.gather(o,a.cast(i,"int32"),r,s)]}case"Reverse":{const r=A("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const o=A("x",e,t,n);return[a.reverse(o,s)]}case"ReverseV2":{const r=A("axis",e,t,n),s=A("x",e,t,n);return[a.reverse(s,r)]}case"Slice":{const r=A("begin",e,t,n),s=A("size",e,t,n);return[a.slice(A("x",e,t,n),r,s)]}case"StridedSlice":{const r=A("begin",e,t,n),s=A("end",e,t,n),o=A("strides",e,t,n),i=A("beginMask",e,t,n),c=A("endMask",e,t,n),l=A("ellipsisMask",e,t,n),u=A("newAxisMask",e,t,n),d=A("shrinkAxisMask",e,t,n),h=A("x",e,t,n);return[a.stridedSlice(h,r,s,o,i,c,l,u,d)]}case"Pack":return(0,S.tidy)((()=>{const r=A("axis",e,t,n),s=A("tensors",e,t,n),o=s[0].shape,i=a.squeeze(s[0]).shape,c=s.map((e=>{const t=S.util.arraysEqual(e.shape,o);if(!t&&!S.util.arraysEqual(a.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,o)}));return[a.stack(c,r)]}));case"Unpack":{const r=A("axis",e,t,n),s=A("tensor",e,t,n);return a.unstack(s,r)}case"Tile":{const r=A("reps",e,t,n);return[a.tile(A("x",e,t,n),r)]}case"Split":case"SplitV":{const r=A("axis",e,t,n),s=A("numOrSizeSplits",e,t,n),o=A("x",e,t,n);return a.split(o,s,r)}case"ScatterNd":{const r=A("indices",e,t,n),s=A("values",e,t,n),o=A("shape",e,t,n);return[a.scatterND(r,s,o)]}case"GatherNd":{const r=A("x",e,t,n),s=A("indices",e,t,n);return[a.gatherND(r,s)]}case"SparseToDense":{const r=A("sparseIndices",e,t,n),s=A("outputShape",e,t,n),o=A("sparseValues",e,t,n),i=A("defaultValue",e,t,n);return[a.sparseToDense(r,o,s,o.dtype===i.dtype?i:a.cast(i,o.dtype))]}case"TensorScatterUpdate":{const r=A("indices",e,t,n),s=A("values",e,t,n),o=A("tensor",e,t,n);return[a.tensorScatterUpdate(o,r,s)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"sparse":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=a.sparse.sparseFillEmptyRows(A("indices",e,t,n),A("values",e,t,n),A("denseShape",e,t,n),A("defaultValue",e,t,n));return[r,s,o,i]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=a.sparse.sparseReshape(A("inputIndices",e,t,n),A("inputShape",e,t,n),A("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(A("data",e,t,n),A("indices",e,t,n),A("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(A("data",e,t,n),A("indices",e,t,n),A("segmentIds",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"spectral":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"FFT":return[a.fft(A("x",e,t,n))];case"IFFT":return[a.ifft(A("x",e,t,n))];case"RFFT":return[a.rfft(A("x",e,t,n))];case"IRFFT":return[a.irfft(A("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"string":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(A("input",e,t,n),A("pattern",e,t,n),A("rewrite",e,t,n),A("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=a.string.stringNGrams(A("data",e,t,n),A("dataSplits",e,t,n),A("separator",e,t,n),A("nGramWidths",e,t,n),A("leftPad",e,t,n),A("rightPad",e,t,n),A("padWidth",e,t,n),A("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:o}=a.string.stringSplit(A("input",e,t,n),A("delimiter",e,t,n),A("skipEmpty",e,t,n));return[r,s,o]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(A("input",e,t,n),A("numBuckets",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"transformation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Cast":return[a.cast(A("x",e,t,n),A("dtype",e,t,n))];case"ExpandDims":{const r=A("axis",e,t,n);return[a.expandDims(A("x",e,t,n),r)]}case"Squeeze":{const r=A("axis",e,t,n);return[a.squeeze(A("x",e,t,n),r)]}case"Reshape":return[a.reshape(A("x",e,t,n),A("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(A("x",e,t,n),A("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(A("x",e,t,n),A("padding",e,t,n),A("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(A("x",e,t,n),A("padding",e,t,n),A("constantValue",e,t,n))];case"SpaceToBatchND":{const r=A("blockShape",e,t,n),s=A("paddings",e,t,n);return[a.spaceToBatchND(A("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=A("blockShape",e,t,n),s=A("crops",e,t,n);return[a.batchToSpaceND(A("x",e,t,n),r,s)]}case"DepthToSpace":{const r=A("blockSize",e,t,n),s=A("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(A("x",e,t,n),r,s)]}case"BroadcastTo":return[a.broadcastTo(A("x",e,t,n),A("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(A("s0",e,t,n),A("s1",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=A("keyDType",e,t,n),s=A("valueDType",e,t,n),o=new Ae(r,s);return a.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=A("tableHandle",e,t,n,a),s=A("keys",e,t,n),o=A("values",e,t,n),i=a.getHashTableById(r.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=A("tableHandle",e,t,n,a),s=A("keys",e,t,n),o=A("defaultValue",e,t,n),i=a.getHashTableById(r.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=A("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}})(e,t,n,a);case"custom":const s=E(e.op);if(s&&s.customExecutor)return s.customExecutor(new be(e,t,n));throw TypeError("Custom op ".concat(e.op," is not registered."));default:throw TypeError("Unknown op '".concat(e.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return S.util.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}class Fe{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":"".concat(e.frameName,"-").concat(e.iterationId))).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function De(e,t,n,a){const r=new Set,s=[];let o=null,i=null;const c=new Set,l=new Set(Object.keys(e).map((e=>M(e)[0])));a=a||[];const u=new Set(a.map((e=>M(e.name)[0]))),d=[...t];for(;d.length>0;){const e=d.pop();(Pe(e)||Ve(e)||We(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(l.has(e.name)||u.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{c.has(e.name)||(c.add(e.name),d.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:i}}function Oe(e,t){const{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>M(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],o=e=>n.has("string"===typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const c=i([...r,...e.weights,...s]).filter(o),l=i([...c,...Object.values(e.nodes)]).filter(o),u=new Map(l.map((e=>[e.name,e]))),d={};for(const m of l){d[m.name]=d[m.name]||0;for(const e of m.children)o(e)||(d[e.name]=Number.POSITIVE_INFINITY),d[e.name]=(d[e.name]||0)+1}const h=Object.entries(d).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...h];for(;h.length>0;){const e=h.pop(),t=u.get(e);for(const n of t.children.filter(o))0===--d[n.name]&&(p.push(n.name),h.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){const e=a.pop(),t=n.get(e);for(const s of t.children)n.has(s.name)&&!r.has(s.name)&&(r.add(s.name),a.push(s.name))}const s=e.filter((e=>r.has(e.name)));return s}(p.map((e=>u.get(e))),c);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"===typeof e?e:e.name),s=new Set(e.map((e=>e.name))),o=e=>s.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(o)){if(!n.has(e.name))throw new Me("Child ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(e.name))throw new Me("Node ".concat(i.name," is scheduled to run after its child ").concat(e.name,"."))}if(!r(i))for(const e of i.inputs){if(!n.has(e.name))throw new Me("Input ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(e.name)>n.get(i.name))throw new Me("Node ".concat(i.name," is scheduled to run before its input ").concat(e.name,"."))}}}(f,c),f}class Me extends Error{constructor(e){super("NodesExecutionOrderError: ".concat(e))}}const Le=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),ze=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Be=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Pe(e){return Le.has(e.op)}function Ve(e){return ze.has(e.op)}function We(e){return Be.has(e.op)}class Ue{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?"".concat(t,":").concat(e.defaultOutput):t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Ue(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const n=De(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(s,"]"));if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}const o=Oe(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>Pe(e)?n:t)),r=e=>{const n=a[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),o=new Map;for(let i=0;i<e.length;++i){const t=s[i];if(t===n)continue;const a=e[i],r=e[t];o.has(r.name)||o.set(r.name,[]),o.get(r.name).push(a)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,S.keep)(t),t}cloneTensorList(e){if(!e)return null;return e.map((e=>this.cloneAndKeepTensor(e)))}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[M(e)[0]])),r=t.map((e=>M(e)[0])),s=new Set(r);let o=r.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(a,o);let c=this.compiledMap.get(i);null==c&&(c=this.compile(e,o),this.compiledMap.set(i,c));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const l={},u={};return(0,S.tidy)((()=>{const n=new Fe(this.weightMap,l,u,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,s]=M(t,n),o=[];o[s]=e[t],a[r]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(o))}));const r=this.getFrozenTensorIds(a),{orderedNodes:o,nodeLiveUntilMap:i}=c;for(const e of o){if(a[e.name])continue;const t=Re(e,a,n,this._resourceManager);if(S.util.isPromise(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,s,i.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>R(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,o){if(!Pe(t)&&!s.has(e)){for(const a of n[e])null!=a&&(o[a.id]=(o[a.id]||0)+t.children.length);for(const e of t.inputs){if(Pe(e))continue;const t=F(e.name,n,a);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,s){function o(e){return Pe(e)||r.has(e.name)}if(!Pe(e)&&null!=s)for(const i of s){if(o(i))continue;const e=F(i.name,t,n);for(const t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const s=new Fe(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>R(e,o,s))),c=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),u=new Set([...c,...l,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||u.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(u),i}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),s=r.map((e=>this.graph.nodes[M(e)[0]])),o=n.map((e=>M(e)[0])),i=new Set(o);let c=o.map((e=>this.graph.nodes[e]));0===c.length&&(c=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:d,syncInputs:h}=De(e,c,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=M(t),r=[];r[a]=e[t],f[n]=r}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(s,p,t,f,y,g,i,m,l);await Promise.all(e)}null!=d||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=c.filter((e=>!Pe(e)&&!R(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=d&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(h,"]")),new Error("Cannot compute the outputs [".concat(b,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(u,"]. ").concat(e))}return f}processStack(e,t,n,a,r,s,o,i,c){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let u="";if("Enter"===e.node.op&&A("isConstant",e.node,a,n)&&([u]=D(e.node.name,n)),null==a[e.node.name]){const d=Re(e.node,a,n,this._resourceManager);u||([u]=D(e.node.name,n));const h=n.currentContext;S.util.isPromise(d)?l.push(d.then((l=>(a[u]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(l)),n.currentContext=h,this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c),l)))):(a[u]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(d)),this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c))}else this.processChildNodes(e.node,t,n,a,r,c)}return l}processChildNodes(e,t,n,a,r,s){e.children.forEach((e=>{const[o]=D(e.name,n);!r[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!R(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!R(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=M(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));S.util.assert(t,(()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(e,"], but was ")+"[".concat(n.shape,"]")))}r.attrParams.dtype&&r.attrParams.dtype.value&&S.util.assert(n.dtype===r.attrParams.dtype.value,(()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(e){var t,n;const a={};for(const r in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=s?a[s.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=M(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(t,"] that are not part of graph"))}mapOutputs(e){return e.map((e=>{var t,n;const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=M(e);if(!this.graph.nodes[t])throw new Error("The output '".concat(e,"' is not found in the graph"))}))}}class Ge{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var je=n(1434);const He="?tfjs-format=file",qe="model.json";class Xe{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Ge}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one (".concat(t.length,") load handlers for ")+"URL '".concat([e],"'"));this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return S.util.isPromise(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await(0,je.r)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new Ue(ae.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=ae.Instance.transformGraph(e.modelInitializer);this.initializer=new Ue(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Error("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof S.Tensor?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof S.Tensor)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(e.length," input tensors provided."));let a=0;return this.inputNodes.reduce(((t,n)=>{var r,s,o;const i=null===(o=null===(s=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){const r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,S.dispose)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Ke(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"===typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return"".concat(e).concat(qe).concat(He)}(e));const a=new Xe(e,t,n);return await a.load(),a}function Ye(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,a]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");const r=S.io.getWeightSpecs(n.weightsManifest),s=S.io.getModelArtifactsForJSONSync(n,r,a);t=S.io.fromMemorySync(s)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=S.io.fromMemorySync(e)}const n=new Xe(t);return n.load(),n}const Qe="4.16.0"},4679:(e,t,n)=>{"use strict";n.d(t,{JL:()=>a,Zu:()=>r});class a{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class r{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,a,r){return s("move")}createTensorFromGPUData(e,t,n){return s("createTensorFromGPUData")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},745:(e,t,n)=>{"use strict";function a(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,o=!1;for(;a<r;){s=a+(r-a>>>1);const i=n(t,e[s]);i>0?a=s+1:(r=s,o=!i)}return o?a:-a-1}(e,t,n||r)}(e,t,n),s=a<0?-(a+1):a;e.splice(s,0,t)}function r(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,a,r){return c(e,t,n,a,r,0)}function o(e,t,n,a,r,s){return c(e,t,n,a,r,0,!1,s,!0)}function i(e,t,n,a,r,s){return c(e,t,n,a,r,s,!0)}function c(e,t,n,r,s,o){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],h=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const p=[];for(let a=0;a<t.length;a++)t[a]>s&&p.push({score:t[a],boxIndex:a,suppressBeginIndex:0});p.sort(d);const f=o>0?-.5/o:0,m=[],g=[];for(;m.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=t;if(n<s)break;let c=!1;for(let a=m.length-1;a>=i;--a){const n=l(e,o,m[a]);if(n>=r){c=!0;break}if(t.score=t.score*u(r,f,n),t.score<=s)break}t.suppressBeginIndex=m.length,c||(t.score===n?(m.push(o),g.push(t.score)):t.score>s&&a(p,t,d))}const y=m.length,b=n-y;c&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const v={selectedIndices:m};return i&&(v.selectedScores=g),h&&(v.validOutputs=y),v}function l(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),p=(i-s)*(c-o),f=(d-l)*(h-u);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(o,u),y=Math.min(i,d),b=Math.min(c,h),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(p+f-v)}function u(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>s,qP:()=>o,pA:()=>i})},4189:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});var a=n(7039);function r(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=(0,a.f)(e,"int32"),s=(0,a.f)([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=r.indexToLoc(n[a]),o=a*e.length;s.values.set(t,o)}return s.toTensor()}},318:(e,t,n)=>{"use strict";n.d(t,{BV:()=>x,wv:()=>v});var a=n(4679),r=n(5050),s=n(6581),o=n(2145),i=n(8864),c=n(7269),l=n(115),u=n(6147);class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let a;const s=()=>{a=n()};let o;const i=l.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of a)e.dataSync();o=Promise.resolve({kernelMs:l.now()-i})}if((0,r.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let r=0;r<a.length;r++){const t=a[r];t.data().then((n=>{h(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class p{logKernelProfile(e,t,n,a,r,s){const o="number"===typeof a?u.oj("".concat(a,"ms"),9):a.error,i=u.oj(e,25),c=t.rank,l=t.size,d=u.oj(t.shape.toString(),14);let h="";for(const u in r){const e=r[u];if(null!=e){const n=e.shape||t.shape,a=n.length;h+="".concat(u,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(d,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(4376),m=n(9064);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(c.Z("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){(0,i.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof a.Zu||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,c.Z("Initialization of backend ".concat(e," failed")),c.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return c.Z("Initialization of backend ".concat(e," failed")),c.Z(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=x.runKernel(o.iJz,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return x.runKernel(o.RFZ,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,i.pI)(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-t-r-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let o,c;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:r,attrs:s}=e;null==this.backendName&&this.backend;const l=(0,i.pI)(t,this.backendName);u.hu(null!=l,(()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'"))),o=()=>{const e=this.backend.numDataIds();c=l.kernelFunc({inputs:r,attrs:s,backend:this.backend});const o=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,r,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();c=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:h}=e,p=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()})),a&&this.addTapeNode(l,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const a=(0,i.uk)(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(u.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>r[t]));return s.concat(o)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&u.HD(e[0])&&(r=e.map((e=>l.encodeString(e))));const s=a.write(r,t,n),o=new f.es(t,n,s,this.nextTensorId());if(this.trackTensor(o,a),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,u.Ub)(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,s=new f.es(a,r,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new f._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*u.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*u.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},c=(0,i.uk)(e);null!=c&&(a=c.gradFunc),null!=a&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=u.wT(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(u.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));u.hu(r instanceof f.es,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const a={},r={};for(let c=0;c<t.length;c++)a[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(a[o.id]){n.outputs.forEach((e=>a[e.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(r[t.id]&&o[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=(0,u.p8)((0,u.NA)(e),"float32");return x.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const s=t[r],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[t]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const o=s.inputs[t];if(!u.cO(r.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==e[o.id])e[o.id]=r;else{const t=e[o.id];e[o.id]=a(t,r),t.dispose()}}}}(e,s,(e=>this.tidy(e)),w);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){var t=this;return u.hu(u.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let s;u.hu(a.every((e=>e instanceof f.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};a.forEach(((e,t)=>{o[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(s=e(...a,n),u.hu(s.value instanceof f.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u.hu(u.mf(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),backwardsFunc:(e,t)=>{const n=s.gradFunc(e,t),r=Array.isArray(n)?n:[n];u.hu(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u.hu(r.every((e=>e instanceof f.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return r.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function v(){const e=(0,s.D)();if(null==e._tfengine){const t=new r.qA(e);e._tfengine=new b(t)}return(0,r.iG)(e._tfengine.ENV),(0,f.Vi)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const x=v();function w(e,t){const n={a:e,b:t};return x.runKernel(o.mm_,n)}},5050:(e,t,n)=>{"use strict";n.d(t,{OB:()=>i,Vi:()=>c,iG:()=>l,qA:()=>s});var a=n(6147);const r="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,a.tI)(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(r in e){e[r].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)}))}}}function o(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")})),t}function i(){return c}let c=null;function l(e){c=e}},6581:(e,t,n)=>{"use strict";let a;function r(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function s(e,t){const n=function(){const e=r();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}n.d(t,{D:()=>r,R:()=>s})},5875:(e,t,n)=>{"use strict";n.d(t,{B9:()=>g,CQ:()=>v,Cd:()=>x,Cn:()=>y,G4:()=>i,MX:()=>u,N5:()=>f,N8:()=>d,N_:()=>w,R:()=>c,SR:()=>h,VY:()=>C,XV:()=>b,cF:()=>l,cj:()=>k,jq:()=>N,lu:()=>m,sq:()=>p,x3:()=>S,y3:()=>T,ze:()=>I});var a=n(318),r=n(5050),s=n(4376),o=n(9064);function i(){(0,r.OB)().set("PROD",!0)}function c(){(0,r.OB)().set("DEBUG",!0)}function l(){(0,r.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function u(e){(0,r.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){a.BV.disposeVariables()}function h(){return a.BV}function p(){return a.BV.memory()}function f(e){return a.BV.profile(e)}function m(e,t){return a.BV.tidy(e,t)}function g(e){(0,o.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return a.BV.keep(e)}function b(e){return a.BV.time(e)}function v(e){return a.BV.setBackend(e)}function x(){return a.BV.ready()}function w(){return a.BV.backendName}function k(e){a.BV.removeBackend(e)}function S(e){return a.BV.findBackend(e)}function I(e){return a.BV.findBackendFactory(e)}function N(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return a.BV.registerBackend(e,t,n)}function T(){return a.BV.backend}function C(e,t){(0,r.OB)().setPlatform(e,t)}(0,s.FZ)(u)},6450:(e,t,n)=>{"use strict";n.d(t,{UQ:()=>i,cb:()=>h,fN:()=>u,h7:()=>l,pn:()=>d,ti:()=>c});var a=n(318),r=n(4376),s=n(8354),o=n(6147);function i(e){return o.hu(o.mf(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=(0,s._1)(t,"x","tf.grad","string_or_numeric"),i=null!=n?(0,s._1)(n,"dy","tf.grad"):null;return a.BV.tidy((()=>{const{value:t,grads:n}=a.BV.gradients((()=>e(r)),[r],i);return null!=i&&o.k5(t.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]}))}}function c(e){return o.hu(o.mf(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{o.hu(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=(0,s.sI)(t,"args","tf.grads","string_or_numeric"),i=null!=n?(0,s._1)(n,"dy","tf.grads"):null;return a.BV.tidy((()=>{const{value:t,grads:n}=a.BV.gradients((()=>e(...r)),r,i);return null!=i&&o.k5(t.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n}))}}function l(e){return o.hu(o.mf(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{o.hu(t instanceof r.es,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),o.hu(null==n||n instanceof r.es,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:i}=a.BV.gradients((()=>e(t)),[t],n);return p(s),{grad:s[0],value:i}}}function u(e){return o.hu(o.mf(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{o.hu(Array.isArray(t)&&t.every((e=>e instanceof r.es)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),o.hu(null==n||n instanceof r.es,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=a.BV.gradients((()=>e(...t)),t,n);return null!=n&&o.k5(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(s.grads),s}}function d(e,t){o.hu(o.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),o.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof r._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in a.BV.registeredVariables)t.push(a.BV.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,i=t.length;t=t.filter((e=>e.trainable)),o.hu(t.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(i," variables is ")+"trainable."));const{value:c,grads:l}=a.BV.gradients(e,t,null,!0);o.hu(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),o.hu(0===c.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor")));const u={};return t.forEach(((e,t)=>{null!=l[t]&&(u[e.name]=l[t])})),null!=s&&s.forEach((e=>u[e.name]=null)),{value:c,grads:u}}function h(e){return a.BV.customGrad(e)}function p(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},3613:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>yt.SYM,Acos:()=>yt.VGw,Acosh:()=>yt.SpW,AdadeltaOptimizer:()=>Ae,AdagradOptimizer:()=>Fe,AdamOptimizer:()=>Me,AdamaxOptimizer:()=>Be,Add:()=>yt.mm_,AddN:()=>yt.Xze,All:()=>yt.oT6,Any:()=>yt.IKK,ArgMax:()=>yt.sJF,ArgMin:()=>yt.aJk,Asin:()=>yt.M2y,Asinh:()=>yt.qw7,Atan:()=>yt.jMg,Atan2:()=>yt.QCc,Atanh:()=>yt.Oyi,AvgPool:()=>yt.JhU,AvgPool3D:()=>yt._k9,AvgPool3DGrad:()=>yt.IMb,AvgPoolGrad:()=>yt.ROF,BatchMatMul:()=>yt.XLW,BatchToSpaceND:()=>yt.zws,Bincount:()=>yt.zvY,BitwiseAnd:()=>yt.hCO,BroadcastArgs:()=>yt.eEB,BroadcastTo:()=>yt.Ly9,Cast:()=>yt.RFZ,Ceil:()=>yt.gJX,ClipByValue:()=>yt.xnO,Complex:()=>yt.Zz9,ComplexAbs:()=>yt.yj2,Concat:()=>yt.Eh3,Conv2D:()=>yt.mhS,Conv2DBackpropFilter:()=>yt.wUP,Conv2DBackpropInput:()=>yt.wm,Conv3D:()=>yt.x12,Conv3DBackpropFilterV2:()=>yt.o2y,Conv3DBackpropInputV2:()=>yt.ik2,Cos:()=>yt.mc4,Cosh:()=>yt.TR1,CropAndResize:()=>yt.VcC,Cumprod:()=>yt.Byc,Cumsum:()=>yt.iHb,DataStorage:()=>pa.JL,DenseBincount:()=>yt.QRR,DepthToSpace:()=>yt.T0n,DepthwiseConv2dNative:()=>yt.cie,DepthwiseConv2dNativeBackpropFilter:()=>yt.sL$,DepthwiseConv2dNativeBackpropInput:()=>yt.y7R,Diag:()=>yt.$w,Dilation2D:()=>yt.p4S,Dilation2DBackpropFilter:()=>yt.Vn9,Dilation2DBackpropInput:()=>yt.ekb,Draw:()=>yt.hGc,ENV:()=>b.Vi,Einsum:()=>yt.$g6,Elu:()=>yt.SX0,EluGrad:()=>yt.HEU,Environment:()=>b.qA,Equal:()=>yt.hdR,Erf:()=>yt.Omj,Exp:()=>yt.NEP,ExpandDims:()=>yt.YFo,Expm1:()=>yt.Y0y,FFT:()=>yt.vwp,Fill:()=>yt.deh,FlipLeftRight:()=>yt.Uyb,Floor:()=>yt.OR,FloorDiv:()=>yt.jeX,FromPixels:()=>yt.eBW,FusedBatchNorm:()=>yt.sHE,FusedConv2D:()=>yt._V0,FusedDepthwiseConv2D:()=>yt.luS,GatherNd:()=>yt.q1x,GatherV2:()=>yt.qi_,Greater:()=>yt.iZT,GreaterEqual:()=>yt.Acj,IFFT:()=>yt.Qg5,Identity:()=>yt.iJz,Imag:()=>yt.J_u,IsFinite:()=>yt.avt,IsInf:()=>yt.iWB,IsNan:()=>yt.r7n,KernelBackend:()=>pa.Zu,LRN:()=>yt.eZ0,LRNGrad:()=>yt.Hhh,LeakyRelu:()=>yt.J$2,Less:()=>yt.vtC,LessEqual:()=>yt.CAk,LinSpace:()=>yt.e7N,Log:()=>yt.ZbH,Log1p:()=>yt.kU,LogSoftmax:()=>yt.qCd,LogicalAnd:()=>yt.PYm,LogicalNot:()=>yt.VfG,LogicalOr:()=>yt.MZg,LogicalXor:()=>yt.w6g,LowerBound:()=>yt.qIC,MatrixBandPart:()=>yt.J7O,Max:()=>yt.YoZ,MaxPool:()=>yt.mTV,MaxPool3D:()=>yt.OAf,MaxPool3DGrad:()=>yt.OU7,MaxPoolGrad:()=>yt.OV7,MaxPoolWithArgmax:()=>yt.vFR,Maximum:()=>yt.BMI,Mean:()=>yt.q2K,Min:()=>yt.c17,Minimum:()=>yt.q8u,MirrorPad:()=>yt.jQs,Mod:()=>yt.Vbg,MomentumOptimizer:()=>Ve,Multinomial:()=>yt.NZg,Multiply:()=>yt.wYn,Neg:()=>yt.kuV,NonMaxSuppressionV3:()=>yt.uv1,NonMaxSuppressionV4:()=>yt.cye,NonMaxSuppressionV5:()=>yt.W0H,NotEqual:()=>yt.yQU,OP_SCOPE_SUFFIX:()=>Zt.zvA,OneHot:()=>yt.we_,OnesLike:()=>yt.qWM,Optimizer:()=>_e,OptimizerConstructors:()=>Yt,Pack:()=>yt.QiL,PadV2:()=>yt.lyA,Pool:()=>yt.Kgp,Pow:()=>yt.pe_,Prelu:()=>yt.o0g,Prod:()=>yt.DlI,RMSPropOptimizer:()=>We,RaggedGather:()=>yt.dDz,RaggedRange:()=>yt.CQl,RaggedTensorToTensor:()=>yt.BiW,Range:()=>yt.e6w,Rank:()=>Qt.yw,Real:()=>yt.xJR,RealDiv:()=>yt.oHH,Reciprocal:()=>yt.$HU,Reduction:()=>Jt.I,Relu:()=>yt.qkr,Relu6:()=>yt.SbG,Reshape:()=>yt.HZH,ResizeBilinear:()=>yt._Yw,ResizeBilinearGrad:()=>yt.zbQ,ResizeNearestNeighbor:()=>yt.dpD,ResizeNearestNeighborGrad:()=>yt.Hmb,Reverse:()=>yt.mKl,RotateWithOffset:()=>yt.b9H,Round:()=>yt.e07,Rsqrt:()=>yt.bV0,SGDOptimizer:()=>Pe,ScatterNd:()=>yt.xQA,SearchSorted:()=>yt.nr8,Select:()=>yt.PhF,Selu:()=>yt.oFR,Sigmoid:()=>yt.a5O,Sign:()=>yt.i5y,Sin:()=>yt.RQH,Sinh:()=>yt.wYB,Slice:()=>yt.p2w,Softmax:()=>yt.Gcp,Softplus:()=>yt.MRv,SpaceToBatchND:()=>yt.TQc,SparseFillEmptyRows:()=>yt.O3z,SparseReshape:()=>yt.nhH,SparseSegmentMean:()=>yt.w3H,SparseSegmentSum:()=>yt.ZjV,SparseToDense:()=>yt.D2d,SplitV:()=>yt.L8s,Sqrt:()=>yt.FKq,Square:()=>yt.bK0,SquaredDifference:()=>yt._tC,StaticRegexReplace:()=>yt.e0R,Step:()=>yt.h8e,StridedSlice:()=>yt.jQk,StringNGrams:()=>yt._JP,StringSplit:()=>yt.s1s,StringToHashBucketFast:()=>yt.XkS,Sub:()=>yt.Tr8,Sum:()=>yt.GBy,Tan:()=>yt.sEM,Tanh:()=>yt.MIZ,Tensor:()=>he.es,TensorBuffer:()=>he.YD,TensorScatterUpdate:()=>yt.SIB,Tile:()=>yt.n9L,TopK:()=>yt.cWu,Transform:()=>yt.wx7,Transpose:()=>yt.G3Y,Unique:()=>yt.kpP,Unpack:()=>yt.ToN,UnsortedSegmentSum:()=>yt.Qvg,UpperBound:()=>yt.XDQ,Variable:()=>he._w,ZerosLike:()=>yt.RuY,_FusedMatMul:()=>yt.usg,abs:()=>Zt.WnP,acos:()=>Zt.Khb,acosh:()=>Zt.__u,add:()=>Zt.IHx,addN:()=>Zt.QBD,all:()=>Zt.$6P,any:()=>Zt.YjB,argMax:()=>Zt.NqF,argMin:()=>Zt.vHJ,asin:()=>Zt.ZRM,asinh:()=>Zt.VfV,atan:()=>Zt.z4N,atan2:()=>Zt.fvJ,atanh:()=>Zt.C80,avgPool:()=>Zt.wS1,avgPool3d:()=>Zt.uR5,backend:()=>fe.y3,backend_util:()=>d,basicLSTMCell:()=>Zt.zEQ,batchNorm:()=>Zt.tgs,batchNorm2d:()=>Zt.Dxk,batchNorm3d:()=>Zt.JY5,batchNorm4d:()=>Zt.p3b,batchToSpaceND:()=>Zt.E4h,bincount:()=>Zt.yE8,bitwiseAnd:()=>Zt.ycw,booleanMaskAsync:()=>Zt.anm,broadcastArgs:()=>Zt.XsQ,broadcastTo:()=>Zt.UFq,broadcast_util:()=>gt,browser:()=>i,buffer:()=>Zt.f3b,cast:()=>Zt.pju,ceil:()=>Zt.mDi,clipByValue:()=>Zt.iUl,clone:()=>Zt.d9v,complex:()=>Zt.PYB,concat:()=>Zt.zoF,concat1d:()=>Zt.gME,concat2d:()=>Zt.Izb,concat3d:()=>Zt.MNy,concat4d:()=>Zt.ZaL,conv1d:()=>Zt.PAt,conv2d:()=>Zt.Tek,conv2dTranspose:()=>Zt.bc,conv3d:()=>Zt.pdZ,conv3dTranspose:()=>Zt.$QV,copyRegisteredKernels:()=>bt.T3,cos:()=>Zt.mCk,cosh:()=>Zt.f9Y,cosineWindow:()=>Zt.mew,cumprod:()=>Zt.$Gn,cumsum:()=>Zt.zbp,customGrad:()=>we.cb,denseBincount:()=>Zt.ppE,deprecationWarn:()=>fe.MX,depthToSpace:()=>Zt.nTT,depthwiseConv2d:()=>Zt.B10,device_util:()=>a,diag:()=>Zt.Ka3,dilation2d:()=>Zt.WmZ,disableDeprecationWarnings:()=>fe.cF,dispose:()=>fe.B9,disposeVariables:()=>fe.N8,div:()=>Zt.hiC,divNoNan:()=>Zt.NTj,dot:()=>Zt.AKD,dropout:()=>Zt.rvX,einsum:()=>Zt.WYO,elu:()=>Zt.pyx,enableDebugMode:()=>fe.R,enableProdMode:()=>fe.G4,enclosingPowerOfTwo:()=>Zt.GRh,engine:()=>fe.SR,ensureShape:()=>Zt.EDe,env:()=>b.OB,equal:()=>Zt.DgJ,erf:()=>Zt.qNN,euclideanNorm:()=>Zt.d2q,exp:()=>Zt.Qqt,expandDims:()=>Zt.dt4,expm1:()=>Zt.t$B,eye:()=>Zt.iyy,fft:()=>Zt.kp_,fill:()=>Zt.hlL,findBackend:()=>fe.x3,findBackendFactory:()=>fe.ze,floor:()=>Zt.GWj,floorDiv:()=>Zt.qPi,fused:()=>Zt.imm,gather:()=>Zt.Iqj,gatherND:()=>Zt.dbB,gather_util:()=>c,getBackend:()=>fe.N_,getGradient:()=>bt.uk,getKernel:()=>bt.pI,getKernelsForBackend:()=>bt.tr,grad:()=>we.UQ,grads:()=>we.ti,greater:()=>Zt.pjt,greaterEqual:()=>Zt.brS,ifft:()=>Zt.Sxn,imag:()=>Zt.asL,image:()=>Zt.BHj,inTopKAsync:()=>Zt.V3u,io:()=>s,irfft:()=>Zt.wx0,isFinite:()=>Zt.xVT,isInf:()=>Zt.UWc,isNaN:()=>Zt.i2d,keep:()=>fe.Cn,kernel_impls:()=>h,leakyRelu:()=>Zt.hi7,less:()=>Zt.d9m,lessEqual:()=>Zt.zN1,linalg:()=>Zt.$r2,linspace:()=>Zt.SX3,localResponseNormalization:()=>Zt.G9k,log:()=>Zt.cM7,log1p:()=>Zt.Krr,logSigmoid:()=>Zt.e_t,logSoftmax:()=>Zt.CmS,logSumExp:()=>Zt.l_t,logicalAnd:()=>Zt.HvI,logicalNot:()=>Zt.hJK,logicalOr:()=>Zt.K5V,logicalXor:()=>Zt.egP,losses:()=>Zt.MB5,lowerBound:()=>Zt.eab,matMul:()=>Zt.OI3,math:()=>o,max:()=>Zt.Fp7,maxPool:()=>Zt._sB,maxPool3d:()=>Zt.YQQ,maxPoolWithArgmax:()=>Zt.Ip$,maximum:()=>Zt.gWQ,mean:()=>Zt.J69,memory:()=>fe.sq,meshgrid:()=>Zt.ry_,min:()=>Zt.VV$,minimum:()=>Zt.LTh,mirrorPad:()=>Zt.VdP,mod:()=>Zt.wQq,moments:()=>Zt.Gi7,movingAverage:()=>Zt.p_,mul:()=>Zt.dC7,multiRNNCell:()=>Zt.rq4,multinomial:()=>Zt.SJ_,neg:()=>Zt.W76,nextFrame:()=>tn,norm:()=>Zt.KOy,notEqual:()=>Zt.Quu,oneHot:()=>Zt.lfX,ones:()=>Zt.iUs,onesLike:()=>Zt.JpU,op:()=>Zt.op,outerProduct:()=>Zt.N2O,pad:()=>Zt.vku,pad1d:()=>Zt.pNR,pad2d:()=>Zt.koy,pad3d:()=>Zt.t1L,pad4d:()=>Zt.lGY,pool:()=>Zt.d_R,pow:()=>Zt.sQ3,prelu:()=>Zt.AL3,print:()=>Zt.S0v,prod:()=>Zt.WVs,profile:()=>fe.N5,raggedGather:()=>Zt.$gW,raggedRange:()=>Zt.VT$,raggedTensorToTensor:()=>Zt.N89,rand:()=>Zt.TN_,randomGamma:()=>Zt.wzB,randomNormal:()=>Zt.nGf,randomStandardNormal:()=>Zt.ruB,randomUniform:()=>Zt.LGj,randomUniformInt:()=>Zt.pe5,range:()=>Zt.w6H,ready:()=>fe.Cd,real:()=>Zt.kwC,reciprocal:()=>Zt.M25,registerBackend:()=>fe.jq,registerGradient:()=>bt.Li,registerKernel:()=>bt.wC,relu:()=>Zt.UYe,relu6:()=>Zt.btT,removeBackend:()=>fe.cj,reshape:()=>Zt.XLQ,reverse:()=>Zt.GYS,reverse1d:()=>Zt.SDf,reverse2d:()=>Zt.diP,reverse3d:()=>Zt.sx7,reverse4d:()=>Zt.mG2,rfft:()=>Zt.QEs,round:()=>Zt.NMM,rsqrt:()=>Zt.bp0,scalar:()=>Zt.iD$,scatterND:()=>Zt.snQ,scatter_util:()=>At,searchSorted:()=>Zt.zcT,selu:()=>Zt.U8D,separableConv2d:()=>Zt.U_I,serialization:()=>r,setBackend:()=>fe.CQ,setPlatform:()=>fe.VY,setdiff1dAsync:()=>Zt.ODp,sigmoid:()=>Zt.XD2,sign:()=>Zt.Xxe,signal:()=>Zt.tdS,sin:()=>Zt.O$l,sinh:()=>Zt.R_K,slice:()=>Zt.tPi,slice1d:()=>Zt.jZU,slice2d:()=>Zt.SmN,slice3d:()=>Zt.CnO,slice4d:()=>Zt.p0P,slice_util:()=>Rt,softmax:()=>Zt.XAC,softplus:()=>Zt.Wvh,spaceToBatchND:()=>Zt.fBT,sparse:()=>Zt.rVs,sparseToDense:()=>Zt.ers,spectral:()=>Zt.uN7,split:()=>Zt.Vl2,sqrt:()=>Zt._b3,square:()=>Zt.h62,squaredDifference:()=>Zt.$i,squeeze:()=>Zt.L9e,stack:()=>Zt.knu,step:()=>Zt.Nbs,stridedSlice:()=>Zt.NXj,string:()=>Zt.Z_8,sub:()=>Zt.luU,sum:()=>Zt.Smz,sumOutType:()=>Qt.z4,tan:()=>Zt.ORZ,tanh:()=>Zt.AEp,tensor:()=>Zt.XeE,tensor1d:()=>Zt.RRF,tensor2d:()=>Zt.odF,tensor3d:()=>Zt.wOQ,tensor4d:()=>Zt.yXz,tensor5d:()=>Zt.Bfx,tensor6d:()=>Zt.xZs,tensorScatterUpdate:()=>Zt.Pg0,tensor_util:()=>Ft,test_util:()=>l,tidy:()=>fe.lu,tile:()=>Zt.Gg6,time:()=>fe.XV,topk:()=>Zt.hg7,train:()=>$t,transpose:()=>Zt.p4s,truncatedNormal:()=>Zt.Xu6,unique:()=>Zt.Two,unregisterGradient:()=>bt.bt,unregisterKernel:()=>bt.nE,unsortedSegmentSum:()=>Zt.pUJ,unstack:()=>Zt.HHK,upcastType:()=>Qt.x8,upperBound:()=>Zt.GaM,util:()=>Dt,valueAndGrad:()=>we.h7,valueAndGrads:()=>we.fN,variable:()=>Zt.VD$,variableGrads:()=>we.pn,version_core:()=>Kt,where:()=>Zt.arb,whereAsync:()=>Zt.itS,zeros:()=>Zt.lls,zerosLike:()=>Zt.P84});var a={};n.r(a),n.d(a,{isBrowser:()=>y,isMobile:()=>g,mockIsMobile:()=>m});var r={};n.r(r),n.d(r,{Serializable:()=>Ne,SerializationMap:()=>Te,getRegisteredName:()=>Ee,registerClass:()=>Ce});var s={};n.r(s),n.d(s,{CompositeArrayBuffer:()=>T.w,browserFiles:()=>qe,browserHTTPRequest:()=>nt,concatenateArrayBuffers:()=>x.JY,copyModel:()=>te,decodeWeights:()=>x.dI,decodeWeightsStream:()=>x.r,encodeWeights:()=>x.yz,fromMemory:()=>ot,fromMemorySync:()=>it,getLoadHandlers:()=>N,getModelArtifactsForJSON:()=>x.jN,getModelArtifactsForJSONSync:()=>x.ji,getModelArtifactsInfoForJSON:()=>x.Q,getSaveHandlers:()=>I,getWeightSpecs:()=>x.hu,http:()=>tt,isHTTPScheme:()=>$e,listModels:()=>$,loadWeights:()=>Qe,moveModel:()=>ne,registerLoadRouter:()=>S,registerSaveRouter:()=>k,removeModel:()=>ee,weightsLoaderFactory:()=>Ze,withSaveHandler:()=>ct,withSaveHandlerSync:()=>lt});var o={};n.r(o),n.d(o,{confusionMatrix:()=>mt});var i={};n.r(i),n.d(i,{draw:()=>Ct,fromPixels:()=>Et,fromPixelsAsync:()=>It,toPixels:()=>Tt});var c={};n.r(c),n.d(c,{prepareAndValidate:()=>_t});var l={};n.r(l),n.d(l,{TEST_EPSILON_FLOAT16:()=>Mt,createVideoElement:()=>qt,encodeStrings:()=>Ht,expectArrayBuffersEqual:()=>jt,expectArraysClose:()=>Lt,expectArraysEqual:()=>Vt,expectNumbersClose:()=>Wt,expectPromiseToFail:()=>Pt,expectValuesInRange:()=>Gt,play:()=>Xt,testEpsilon:()=>zt});var u={};n.r(u),n.d(u,{collectGatherOpShapeInfo:()=>ca,computeOutShape:()=>ia,segOpComputeOptimalWindowSize:()=>oa});var d={};n.r(d),n.d(d,{ERF_A1:()=>Sn,ERF_A2:()=>In,ERF_A3:()=>Nn,ERF_A4:()=>Tn,ERF_A5:()=>Cn,ERF_P:()=>kn,PARALLELIZE_THRESHOLD:()=>pn,RowPartitionType:()=>sn,SELU_SCALE:()=>wn.$,SELU_SCALEALPHA:()=>wn.y,applyActivation:()=>cn.QH,assertAndGetBroadcastShape:()=>gt.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>nn.lB,assertParamsConsistent:()=>an,assignToTypedArray:()=>On,axesAreInnerMostDims:()=>nn.YB,calculateShapes:()=>At.calculateShapes,checkEinsumDimSizes:()=>Gn,checkPadOnDimRoundingMode:()=>on.m,combineLocations:()=>nn.Vh,combineRaggedTensorToTensorShapes:()=>ln,complexWithEvenIndex:()=>Rn,complexWithOddIndex:()=>Fn,computeConv2DInfo:()=>on.Ix,computeConv3DInfo:()=>on.jw,computeDefaultPad:()=>on.aO,computeDilation2DInfo:()=>on.Rf,computeOptimalWindowSize:()=>fn,computeOutAndReduceShapes:()=>nn.kz,computeOutShape:()=>rn,computePool2DInfo:()=>on.Xw,computePool3DInfo:()=>on.pl,convertConv2DDataFormat:()=>on.sl,decodeEinsumEquation:()=>Wn,eitherStridesOrDilationsAreOne:()=>on.jT,expandShapeToKeepDim:()=>nn.rv,exponent:()=>Ln,exponents:()=>Mn,fromStringArrayToUint8:()=>ua,fromUint8ToStringArray:()=>la,getAxesPermutation:()=>nn.Q3,getBroadcastDims:()=>gt.getBroadcastDims,getComplexWithIndex:()=>Dn,getEinsumComputePath:()=>jn,getEinsumPermutation:()=>Un,getFusedBiasGradient:()=>cn.pf,getFusedDyActivation:()=>cn.Fr,getImageCenter:()=>mn,getInnerMostAxes:()=>nn.sY,getPermuted:()=>yn,getRaggedRank:()=>dn,getReductionAxes:()=>gt.getReductionAxes,getReshaped:()=>gn,getReshapedPermuted:()=>bn,getRowPartitionTypesHelper:()=>un,getSliceBeginCoords:()=>vn,getSliceSize:()=>xn,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Kn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Yn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Qn,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>$n,getSparseReshapeInputOutputMismatchErrorMessage:()=>ta,getSparseReshapeInputOutputMultipleErrorMessage:()=>ea,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Zn,getSparseReshapeNegativeOutputDimErrorMessage:()=>Jn,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>sa,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>na,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>aa,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>ra,getUndoAxesPermutation:()=>nn.LJ,isIdentityPermutation:()=>Hn,log:()=>En.c,mergeRealAndImagArrays:()=>_n,prepareAndValidate:()=>_t,prepareSplitSize:()=>Xn,segment_util:()=>u,shouldFuse:()=>cn.uy,slice_util:()=>Rt,splitRealAndImagArrays:()=>An,stridesOrDilationsArePositive:()=>on.U3,tupleValuesAreOne:()=>on.I0,upcastType:()=>Qt.x8,validateDefaultValueShape:()=>hn,validateInput:()=>At.validateInput,validateUpdateShape:()=>At.validateUpdateShape,warn:()=>En.Z});var h={};n.r(h),n.d(h,{nonMaxSuppressionV3Impl:()=>da.GP,nonMaxSuppressionV4Impl:()=>da.qP,nonMaxSuppressionV5Impl:()=>da.pA,whereImpl:()=>ha.Z});var p=n(318);let f;function m(e){f=e}function g(e){if(void 0!==f)return f;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function y(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var b=n(5050);const v=(0,b.OB)();v.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),v.registerFlag("IS_BROWSER",(()=>y())),v.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),v.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),v.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),v.registerFlag("PROD",(()=>!1)),v.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>v.getBool("DEBUG"))),v.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),v.registerFlag("IS_TEST",(()=>!1)),v.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>v.getBool("DEBUG"))),v.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),v.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),v.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var x=n(1434);class w{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==w.instance&&(w.instance=new w),w.instance}static registerSaveRouter(e){w.getInstance().saveRouters.push(e)}static registerLoadRouter(e){w.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return w.getHandlers(e,"save")}static getLoadHandlers(e,t){return w.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?w.getInstance().loadRouters:w.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const k=e=>w.registerSaveRouter(e),S=e=>w.registerLoadRouter(e),I=e=>w.getSaveHandlers(e),N=(e,t)=>w.getLoadHandlers(e,t);var T=n(5714);const C="tensorflowjs",E="models_store",_="model_info_store";function A(){if(!(0,b.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function R(e){const t=e.result;t.createObjectStore(E,{keyPath:"modelPath"}),t.createObjectStore(_,{keyPath:"modelPath"})}class F{constructor(e){if(this.indexedDB=A(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(C,1);a.onupgradeneeded=()=>R(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(E,"readonly"),a=t.objectStore(E).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=T.w.join(t.weightData);const a=(0,x.Q)(t),o=r.transaction(_,"readwrite");let i,c,l=o.objectStore(_);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(s){return n(s)}i.onsuccess=()=>{c=r.transaction(E,"readwrite");const i=c.objectStore(E);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(s){return n(s)}u.onsuccess=()=>e({modelArtifactsInfo:a}),u.onerror=e=>{l=o.objectStore(_);const t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(u.error)),t.onerror=e=>(r.close(),n(u.error))}},i.onerror=e=>(r.close(),n(i.error)),o.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}F.URL_SCHEME="indexeddb://";const D=e=>{return(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(F.URL_SCHEME)?(t=e.slice(F.URL_SCHEME.length),new F(t)):null;var t};w.registerSaveRouter(D),w.registerLoadRouter(D);class O{constructor(){this.indexedDB=A()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(C,1);n.onupgradeneeded=()=>R(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(_,"readonly"),s=r.objectStore(_).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(F.URL_SCHEME)?t.slice(F.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(C,1);a.onupgradeneeded=()=>R(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(_,"readwrite"),o=s.objectStore(_),i=o.get(e);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const a=o.delete(e),s=()=>{c=r.transaction(E,"readwrite");const a=c.objectStore(E).delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};a.onsuccess=s,a.onerror=e=>(s(),r.close(),n(i.error))}},i.onerror=e=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}var M=n(6147);const L="/",z="tensorflowjs_models",B="info",P="model_topology",V="weight_specs",W="weight_data",U="model_metadata";function G(e){return{info:[z,e,B].join(L),topology:[z,e,P].join(L),weightSpecs:[z,e,V].join(L),weightData:[z,e,W].join(L),modelMetadata:[z,e,U].join(L)}}function j(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function H(e){const t=e.split(L);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(L)}class q{constructor(e){if(!(0,b.OB)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=G(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=(0,x.Q)(e),s=T.w.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,(0,x._n)(s));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw j(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=(0,x.n7)(s),t}}q.URL_SCHEME="localstorage://";const X=e=>{return(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(q.URL_SCHEME)?(t=e.slice(q.URL_SCHEME.length),new q(t)):null;var t};w.registerSaveRouter(X),w.registerLoadRouter(X);class K{constructor(){(0,M.hu)((0,b.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,M.hu)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=z+L,n=L+B;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){e[H(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=G(e=(t=e).startsWith(q.URL_SCHEME)?t.slice(q.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const a=JSON.parse(this.LS.getItem(n.info));return j(n),a}}const Y="://";class Q{constructor(){this.managers={}}static getInstance(){return null==Q.instance&&(Q.instance=new Q),Q.instance}static registerManager(e,t){(0,M.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Y)&&(e=e.slice(0,e.indexOf(Y))),(0,M.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=Q.getInstance();(0,M.hu)(null==n.managers[e],(()=>"A model store manager is already registered for scheme '".concat(e,"'."))),n.managers[e]=t}static getManager(e){const t=Q.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(Q.getInstance().managers)}}function Z(e){if(-1===e.indexOf(Y))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(Q.getSchemes().join(",")));return{scheme:e.split(Y)[0],path:e.split(Y)[1]}}async function J(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];(0,M.hu)(e!==t,(()=>"Old path and new path are the same: '".concat(e,"'")));const a=w.getLoadHandlers(e);(0,M.hu)(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(e,"."))),(0,M.hu)(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,".")));const r=a[0],s=w.getSaveHandlers(t);(0,M.hu)(s.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,"."))),(0,M.hu)(s.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(t,".")));const o=s[0],i=Z(e).scheme,c=Z(e).path,l=i===Z(e).scheme,u=await r.load();n&&l&&await Q.getManager(i).removeModel(c);const d=await o.save(u);return n&&!l&&await Q.getManager(i).removeModel(c),d.modelArtifactsInfo}async function $(){const e=Q.getSchemes(),t={};for(const n of e){const e=await Q.getManager(n).listModels();for(const a in e){t[n+Y+a]=e[a]}}return t}async function ee(e){const t=Z(e);return Q.getManager(t.scheme).removeModel(t.path)}async function te(e,t){return J(e,t,!1)}async function ne(e,t){return J(e,t,!0)}var ae=n(1539);class re{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&(0,b.OB)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,ae.j)(e)}}if((0,b.OB)().get("IS_BROWSER")){(0,b.OB)().setPlatform("browser",new re);try{Q.registerManager(q.URL_SCHEME,new K)}catch(fa){}try{Q.registerManager(F.URL_SCHEME,new O)}catch(fa){}}const se=()=>n(5410);let oe;class ie{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,b.OB)().global.fetch?(0,b.OB)().global.fetch(e,t):(null==oe&&(oe=se()),oe(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,b.OB)().get("IS_NODE")&&!(0,b.OB)().get("IS_BROWSER")&&(0,b.OB)().setPlatform("node",new ie);var ce=n(7039),le=n(9118),ue=n(672),de=n(4600),he=n(4376);(0,p.wv)();const pe={buffer:ce.f,cast:le.p,clone:ue.d,print:de.S};(0,he.Vp)(pe);var fe=n(5875),me=n(3312),ge=n(5750),ye=n(651),be=n(6902),ve=n(7391),xe=n(7293),we=n(6450),ke=n(7067);const Se=new Map,Ie=new Map;class Ne{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Te{constructor(){this.classNameMap={}}static getMap(){return null==Te.instance&&(Te.instance=new Te),Te.instance}static register(e){Te.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ce(e,t,n){(0,M.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,M.hu)("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,M.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return Te.register(e),Se.set(a,e),Ie.set(e,a),e}function Ee(e){return Ie.has(e)?Ie.get(e):e.className}class _e extends Ne{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return(0,fe.B9)(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,we.pn)(e,t)}dispose(){null!=this.iterations_&&(0,fe.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,ke.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(_e,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ae extends _e{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=p.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=p.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:(0,fe.lu)((()=>(0,xe.P)(a).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:(0,fe.lu)((()=>(0,xe.P)(a).variable(false)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;(0,fe.lu)((()=>{const e=(0,me.I)((0,ye.d)(s,this.rho),(0,ye.d)((0,ve.h)(r),1-this.rho)),t=(0,ye.d)((0,ge.h)((0,be._)((0,me.I)(o,this.epsilon)),(0,be._)((0,me.I)(s,this.epsilon))),r),n=(0,me.I)((0,ye.d)(o,this.rho),(0,ye.d)((0,ve.h)(t),1-this.rho));s.assign(e),o.assign(n);const i=(0,me.I)((0,ye.d)(t,-this.learningRate),a);a.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,fe.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,fe.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var Re=n(8582);class Fe extends _e{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=p.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:(0,fe.lu)((()=>(0,Re.h)(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable;(0,fe.lu)((()=>{const e=(0,me.I)(s,(0,ve.h)(r));s.assign(e);const t=(0,me.I)((0,ye.d)((0,ge.h)(r,(0,be._)((0,me.I)(e,p.BV.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,fe.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var De=n(4334),Oe=n(4774);class Me extends _e{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,fe.lu)((()=>{this.accBeta1=(0,ke.i)(t).variable(),this.accBeta2=(0,ke.i)(n).variable()})),null==a&&(this.epsilon=p.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,fe.lu)((()=>{const n=(0,Oe.l)(1,this.accBeta1),a=(0,Oe.l)(1,this.accBeta2);t.forEach(((t,r)=>{const s=p.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:(0,fe.lu)((()=>(0,xe.P)(s).variable(false)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(t,"/v"),variable:(0,fe.lu)((()=>(0,xe.P)(s).variable(false)))});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[r].variable,c=this.accumulatedSecondMoment[r].variable,l=(0,me.I)((0,ye.d)(i,this.beta1),(0,ye.d)(o,1-this.beta1)),u=(0,me.I)((0,ye.d)(c,this.beta2),(0,ye.d)((0,ve.h)(o),1-this.beta2)),d=(0,ge.h)(l,n),h=(0,ge.h)(u,a);i.assign(l),c.assign(u);const f=(0,me.I)((0,ye.d)((0,ge.h)(d,(0,me.I)((0,be._)(h),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign((0,ye.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,ye.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,fe.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,fe.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,fe.lu)((()=>{this.accBeta1.assign((0,De.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,De.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var Le=n(7613),ze=n(705);class Be extends _e{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,fe.lu)((()=>{this.iteration=(0,ke.i)(0).variable(),this.accBeta1=(0,ke.i)(t).variable()})),null==a&&(this.epsilon=p.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,fe.lu)((()=>{const n=(0,Oe.l)(1,this.accBeta1),a=(0,ge.h)(-this.learningRate,(0,me.I)((0,ye.d)(this.iteration,this.decay),1));t.forEach(((t,r)=>{const s=p.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:(0,xe.P)(s).variable(false)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(t,"/v"),variable:(0,xe.P)(s).variable(false)});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[r].variable,c=this.accumulatedWeightedInfNorm[r].variable,l=(0,me.I)((0,ye.d)(i,this.beta1),(0,ye.d)(o,1-this.beta1)),u=(0,ye.d)(c,this.beta2),d=(0,Le.W)(o),h=(0,ze.g)(u,d);i.assign(l),c.assign(h);const f=(0,me.I)((0,ye.d)((0,ge.h)(a,n),(0,ge.h)(l,(0,me.I)(h,this.epsilon))),s);s.assign(f)})),this.iteration.assign((0,me.I)(this.iteration,1)),this.accBeta1.assign((0,ye.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,fe.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,fe.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Pe extends _e{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=p.BV.registeredVariables[t];(0,fe.lu)((()=>{const e=(0,me.I)((0,ye.d)(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,fe.Cn)((0,ke.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Ve extends Pe{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,ke.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=p.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:(0,fe.lu)((()=>(0,xe.P)(a).variable(e)))}}const r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&(0,fe.lu)((()=>{let e;const t=(0,me.I)((0,ye.d)(this.m,r),s);e=this.useNesterov?(0,me.I)((0,ye.d)(this.c,(0,me.I)(s,(0,ye.d)(t,this.m))),a):(0,me.I)((0,ye.d)(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,fe.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class We extends _e{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=p.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=p.BV.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:(0,fe.lu)((()=>(0,xe.P)(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:(0,fe.lu)((()=>(0,xe.P)(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:(0,fe.lu)((()=>(0,xe.P)(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,fe.lu)((()=>{const e=(0,me.I)((0,ye.d)(o,this.decay),(0,ye.d)((0,ve.h)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=(0,me.I)((0,ye.d)(t,this.decay),(0,ye.d)(s,1-this.decay)),c=(0,ge.h)((0,ye.d)(s,this.learningRate),(0,be._)((0,Oe.l)(e,(0,me.I)((0,ve.h)(r),this.epsilon)))),l=(0,me.I)((0,ye.d)(i,this.momentum),c);o.assign(e),t.assign(r),i.assign(l);const u=(0,Oe.l)(a,l);a.assign(u)}else{const e=(0,me.I)((0,ye.d)(o,this.decay),(0,ye.d)((0,ve.h)(s),1-this.decay)),t=(0,me.I)((0,ye.d)(i,this.momentum),(0,ge.h)((0,ye.d)(s,this.learningRate),(0,be._)((0,me.I)(e,this.epsilon))));o.assign(e),i.assign(t);const n=(0,Oe.l)(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,fe.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,fe.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,fe.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Ue=[Ae,Fe,Me,Be,Ve,We,Pe];function Ge(e){return new Promise((e=>setTimeout(e))).then(e)}class je{constructor(e){if(!(0,b.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(je.URL_SCHEME)&&(e=e.slice(je.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=T.w.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a=(0,x.Yd)(e,t),r=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Ge((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Ge((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,x.Q)(e)}}}}je.URL_SCHEME="downloads://";class He{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:r});const s=(0,x.jN)(a,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a("Failed to weights data from file of path '".concat(e,"'.")),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>(0,x.EZ)(e.name))),a={};for(const r of e)r.paths.forEach((e=>{const r=(0,x.EZ)(e);if(-1!==t.indexOf(r))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(r,"'"));if(t.push(r),-1===n.indexOf(r))throw new Error("Weight file with basename '".concat(r,"' is not provided."));a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function qe(e){return new He(e)}function Xe(e,t,n,a){!function(e){(0,M.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,M.hu)(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e))),(0,M.hu)(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t))),(0,M.hu)(t>=e,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++r/e.length*(a-n);return t(o),s})),s))))}w.registerSaveRouter((e=>(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(je.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new je(e)}(e.slice(je.URL_SCHEME.length)):null));var Ke=n(1988);async function Ye(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,b.OB)().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await Xe(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Xe(r,t.onProgress,.5,1)}async function Qe(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Ze((e=>Ye(e,{requestInit:a})))(e,t,n)}function Ze(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const r=t.map((()=>!1)),s={},o=null!=a?a.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const c="quantization"in e?e.quantization.dtype:e.dtype,l=Ke.J[c]*M.NA(e.shape),u=()=>{r[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=a?a.forEach(((t,n)=>{t===e.name&&(u(),o[n]=!0)})):u(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=a.filter(((e,t)=>!o[t]));throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];c.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const u=await e(l),d={};let h=0;return c.forEach((e=>{const n=t[e].paths.length,a=new T.w(u.slice(h,h+n));s[e].forEach((e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,x.dI)(t,[e.manifestEntry]);for(const a in n)d[a]=n[a]})),h+=n})),d}}class Je{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,M.hu)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,b.OB)().platform.fetch,(0,M.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,M.hu)(2===e.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,")."))),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],a=(0,x.Yd)(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=T.w.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:(0,x.Q)(e),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(r.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(r){let e="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return(0,x.jN)(e,(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=(0,x.hu)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?(0,b.OB)().platform.fetch:t.fetchFunc;let r,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var o;s<e.length;){if(!r){const n=(await a(e[s],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:i,value:c}=await r.read();if(!i)return void n.enqueue(c);s++,r=void 0,null===(o=t.onProgress)||void 0===o||o.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,s=[],o=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(r+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(o)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[(0,x.hu)(e),await Ye(t,this.loadOptions)]}}function $e(e){return null!=e.match(Je.URL_SCHEME_REGEX)}Je.URL_SCHEME_REGEX=/^https?:\/\//;const et=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>$e(e))):$e(e),n)return tt(e,t)}return null};function tt(e,t){return new Je(e,t)}function nt(e,t){return tt(e,t)}w.registerSaveRouter(et),w.registerLoadRouter(et);class at{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class rt{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class st{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function ot(e,t,n,a){return new st(it(...arguments))}function it(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new at(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new at({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new at({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function ct(e){return new rt(e)}function lt(e){return new rt(e)}var ut=n(8354),dt=n(7221),ht=n(4326),pt=n(8640),ft=n(1240);const mt=(0,pt.op)({confusionMatrix_:function(e,t,n){const a=(0,ut._1)(e,"labels","confusionMatrix"),r=(0,ut._1)(t,"predictions","confusionMatrix");M.hu(null==n||n>0&&Number.isInteger(n),(()=>"If provided, numClasses must be a positive integer, "+"but got ".concat(n))),M.hu(1===a.rank,(()=>"Expected the rank of labels to be 1, but got ".concat(a.rank))),M.hu(1===r.rank,(()=>"Expected the rank of predictions to be 1, "+"but got ".concat(r.rank))),M.hu(a.shape[0]===r.shape[0],(()=>"Mismatch in the number of examples: "+"".concat(a.shape[0]," vs. ").concat(r.shape[0],". ")+"Labels and predictions should have the same number of elements.")),M.hu(n>0&&Number.isInteger(n),(()=>"numClasses is required to be a positive integer, but got "+"".concat(n)));const s=(0,ht.l)((0,le.p)(a,"int32"),n),o=(0,ht.l)((0,le.p)(r,"int32"),n),i=(0,ft.p)(s),c=(0,dt.O)(i,o);return(0,le.p)(c,"int32")}});var gt=n(5774),yt=n(2145),bt=n(8864),vt=n(3123);let xt,wt=!1;function kt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(e.constructor.name));i=!0}if(null!=(0,bt.pI)(yt.eBW,p.BV.backendName)){const n={pixels:e},a={numChannels:t};return p.BV.runKernel(yt.eBW,n,a)}const[c,l]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let u,d;if(o)u=e.getContext("2d").getImageData(0,0,c,l).data;else if(a||n)u=e.data;else if(s||r||i){if(null==xt)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");xt=new OffscreenCanvas(1,1).getContext("2d")}else xt=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});xt.canvas.width=c,xt.canvas.height=l,xt.drawImage(e,0,0,c,l),u=xt.getImageData(0,0,c,l).data}if(4===t)d=new Int32Array(u);else{const e=c*l;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=u[4*n+e]}const h=[l,c,t];return(0,vt.w)(d,h,"int32")}function St(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function It(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if((0,b.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&St(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(a){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return kt(n,t)}function Nt(e){if(2!==e.rank&&3!==e.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(e.rank,"."));const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(t));if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error("Unsupported type for toPixels: ".concat(e.dtype,".")+" Please use float32 or int32 tensors.")}async function Tt(e,t){let n=(0,ut._1)(e,"img","toPixels");if(!(e instanceof he.es)){const e=n;n=(0,le.p)(e,"int32"),e.dispose()}Nt(n);const[a,r]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],o=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(r*a*4);for(let l=0;l<a*r;++l){const e=[0,0,0,255];for(let a=0;a<s;a++){const t=o[l*s+a];if("float32"===n.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===n.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===s?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[a]=t*i}const t=4*l;c[t+0]=Math.round(e[0]),c[t+1]=Math.round(e[1]),c[t+2]=Math.round(e[2]),c[t+3]=Math.round(e[3])}if(null!=t){if(!wt){null!=(0,bt.pI)(yt.hGc,p.BV.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),wt=!0)}t.width=r,t.height=a;const e=t.getContext("2d"),n=new ImageData(c,r,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),c}function Ct(e,t,n){let a=(0,ut._1)(e,"img","draw");if(!(e instanceof he.es)){const e=a;a=(0,le.p)(e,"int32"),e.dispose()}Nt(a),function(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error("Alpha value ".concat(t," is suppoed to be in range [0 - 1]."))}(null===n||void 0===n?void 0:n.imageOptions);const r={image:a},s={canvas:t,options:n};p.BV.runKernel(yt.hGc,r,s)}const Et=(0,pt.op)({fromPixels_:kt});function _t(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[a-1]," vs. ").concat(n));if(0===(0,M.NA)(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const r=t.shape,s=r[r.length-1];let o=1;for(let d=0;d<r.length-1;++d)o*=r[d];const i=e.shape,c=r.slice();c.pop();let l=1;for(let d=s;d<n;++d)l*=i[d],c.push(i[d]);const u=[...(0,M.e3)(e.shape).map((e=>e/l)),1].slice(0,s);return[c,o,l,u]}var At=n(8604),Rt=n(2875),Ft=n(9064),Dt=n(115);const Ot=.001,Mt=.1;function Lt(e,t,n){return null==n&&(n=zt()),Bt(e,t,((e,t)=>Ut(e,t,n)))}function zt(){return 32===p.BV.backend.floatPrecision()?Ot:Mt}function Bt(e,t,n){let a=!0;if(((0,Dt.isTypedArray)(e)||(0,Dt.isTypedArray)(t))&&(a=!1),(0,Dt.isTypedArray)(e)&&(0,Dt.isTypedArray)(t)&&(a=!0),a){const n=e.constructor.name,a=t.constructor.name;if(n!==a)throw new Error("Arrays are of different type. Actual: ".concat(n,". ")+"Expected: ".concat(a))}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,ut.C)(e),a=(0,ut.C)(t);if(!(0,M.cO)(n,a))throw new Error("Arrays have different shapes. "+"Actual: [".concat(n,"]. Expected: [").concat(a,"]"))}const r=(0,Dt.isTypedArray)(e)?e:(0,Dt.flatten)(e),s=(0,Dt.isTypedArray)(t)?t:(0,Dt.flatten)(t);if(r.length!==s.length)throw new Error("Arrays have different lengths actual: ".concat(r.length," vs ")+"expected: ".concat(s.length,".\n")+"Actual:   ".concat(r,".\n")+"Expected: ".concat(s,"."));for(let o=0;o<s.length;++o){const e=r[o],t=s[o];if(!n(e,t))throw new Error("Arrays differ: actual[".concat(o,"] = ").concat(e,", expected[").concat(o,"] = ").concat(t,".\n")+"Actual:   ".concat(r,".\n")+"Expected: ".concat(s,"."))}"undefined"!==typeof expect&&expect().nothing()}function Pt(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!==typeof expect&&expect().nothing()}function Vt(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return(0,M.HD)(e)||(0,M.HD)(e[0])||(0,M.HD)(t)||(0,M.HD)(t[0])?Bt(e,n,((e,t)=>e==t)):Bt(e,t,((e,t)=>Ut(e,t,0)))}function Wt(e,t,n){if(null==n&&(n=zt()),!Ut(e,t,n))throw new Error("Numbers differ: actual === ".concat(e,", expected === ").concat(t));"undefined"!==typeof expect&&expect().nothing()}function Ut(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Gt(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error("Value out of range:".concat(e[a]," low: ").concat(t,", high: ").concat(n))}function jt(e,t){const n=new Float32Array(e),a=new Float32Array(t);if(n.length!==a.length)throw new Error("Expected ArrayBuffer to be of length "+"".concat(a.length,", but it was ").concat(n.length));for(let r=0;r<a.length;r++)if(n[r]!==a[r])throw new Error("Expected ArrayBuffer value at ".concat(r," to be ")+"".concat(a[r]," but got ").concat(n[r]," instead"))}function Ht(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Ht(n):e[t]=(0,Dt.encodeString)(n)}return e}function qt(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function Xt(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}const Kt="4.16.0";class Yt{static sgd(e){return new Pe(e)}static momentum(e,t){return new Ve(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new We(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Me(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Ae(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Be(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Fe(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}var Qt=n(3525),Zt=n(9503),Jt=n(7627);const $t=Yt,en="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function tn(){return new Promise((e=>en((()=>e()))))}var nn=n(8473);function an(e,t){const n=e[0].length;e.forEach(((e,t)=>{M.hu(e.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),M.hu(t>=0&&t<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)M.hu(s===t||e[s]===a[s],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,".")))}))}function rn(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var sn,on=n(9151),cn=n(5171);function ln(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(a.length));for(let r=1;r<n.length;++r){const s=n[r],o=a[a.length-n.length+r],i=a[o];if(s>=0)if(i>=0){if(i!==s)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(r+e,"] = ").concat(s," but shape[").concat(r+e,"] = ").concat(i))}else a[o]=s}return a}function un(e){const t={FIRST_DIM_SIZE:sn.FIRST_DIM_SIZE,VALUE_ROWIDS:sn.VALUE_ROWIDS,ROW_LENGTHS:sn.ROW_LENGTHS,ROW_SPLITS:sn.ROW_SPLITS,ROW_LIMITS:sn.ROW_LIMITS,ROW_STARTS:sn.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function dn(e){return 0===e.length?0:e[0]===sn.FIRST_DIM_SIZE?e.length-1:e.length}function hn(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(r-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(r-e.length,"] = ").concat(a))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(sn||(sn={}));const pn=30;function fn(e){return e<=pn?e:(0,M.jP)(e,Math.floor(Math.sqrt(e)))}function mn(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function gn(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function yn(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function bn(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function vn(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function xn(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}var wn=n(349);const kn=.3275911,Sn=.254829592,In=-.284496736,Nn=1.421413741,Tn=-1.453152027,Cn=1.061405429;var En=n(7269);function _n(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function An(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function Rn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Fn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Dn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function On(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function Mn(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function Ln(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const zn="->",Bn=/->/g,Pn=",",Vn="...";function Wn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Bn,"").length)/zn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(zn,'").'));const[a,r]=e.split(zn);(0,M.hu)(-1===a.indexOf(Vn),(()=>'The ellipsis notation ("'.concat(Vn,'") is not supported yet.')));const s=a.split(Pn),o=s.length;if(t!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(t));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<r.length;++d){const e=r[d];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let d=0;d<a.length;++d){const e=a[d];-1===i.indexOf(e)&&e!==Pn&&i.push(e)}const c=new Array(s.length);for(let d=0;d<o;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error("Found duplicate axes in input component ".concat(s[d],". ")+"Support for duplicate axes in input is not implemented yet.");c[d]=[];for(let e=0;e<s[d].length;++e)c[d].push(i.indexOf(s[d][e]))}const l=i.length,u=[];for(let d=r.length;d<l;++d)u.push(d);return{allDims:i,summedDims:u,idDims:c}}function Un(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function Gn(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:(0,M.hu)(a[t[r][n]]===e[n],(()=>"Expected dimension ".concat(a[t[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n])))}}function jn(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)a.push([]);const s=[];for(let o=0;o<n.length;++o){const e=qn(t,n[o]);for(const t of e)-1===s.indexOf(t)&&(a[o].push(t),s.push(t))}return{path:n,steps:a}}function Hn(e){return e.every(((e,t)=>e===t))}function qn(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function Xn(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)(0,M.hu)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,M.hu)(r<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const a=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-a}(0,M.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function Kn(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function Yn(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function Qn(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function Zn(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function Jn(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function $n(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ea(e,t){const n=(0,M.NA)(e),a=(0,M.NA)(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(e," outputShape= ").concat(t)}function ta(e,t){const n=(0,M.NA)(e),a=(0,M.NA)(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(e," outputShape=").concat(t)}function na(){return"segment ids must be >= 0"}function aa(){return"segment ids are not increasing"}function ra(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function sa(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function oa(e,t){let n,a=!1;for(e<=pn?(n=e,a=!0):n=(0,M.jP)(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=(0,M.jP)(e,n+1);return n}function ia(e,t,n){const a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function ca(e,t,n,a){const r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>s)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(s,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let d=0;d<a;++d)if(e.shape[d]!==t.shape[d])throw new Error("x.shape[".concat(d,"]: ").concat(e.shape[d]," should be equal to indices.shape[").concat(d,"]: ").concat(t.shape[d],"."));const o=e.shape[n],i=[];let c=1,l=1,u=1;for(let d=0;d<a;++d)i.push(e.shape[d]),c*=e.shape[d];for(let d=a;d<n;d++)i.push(e.shape[d]),l*=e.shape[d];for(let d=a;d<r;d++)i.push(t.shape[d]);for(let d=n+1;d<s;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:o,outputShape:i}}function la(e){try{return e.map((e=>(0,Dt.decodeString)(e)))}catch(fa){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(fa))}}function ua(e){return e.map((e=>(0,Dt.encodeString)(e)))}var da=n(745),ha=n(4189),pa=n(4679);!function(){for(const e of Ue)Ce(e)}()},5714:(e,t,n)=>{"use strict";n.d(t,{w:()=>r});var a=n(115);class r{static join(e){return new r(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>a.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let s=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],a=e+s-n.start,i=s,c=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(r.set(l,i),s+=l.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,s=t(e[r]);if(0===s)return r;s<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},1434:(e,t,n)=>{"use strict";n.d(t,{EZ:()=>I,JY:()=>S,Q:()=>E,Yd:()=>N,_n:()=>w,dI:()=>h,hu:()=>_,jN:()=>C,ji:()=>T,n7:()=>k,r:()=>y,yz:()=>d});var a=n(9253),r=n(2442),s=n(6147),o=n(1988),i=n(5714),c=n(5875),l=n(5050);const u=4;async function d(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){const o=r[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+u*t.length,a=new Uint8Array(n);let r=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=u,a.set(e,r),r+=e.length}e(a)}));a.push(e)}else a.push(i.data());null!=t&&(c.group=t),n.push(c)}return{data:b(await Promise.all(a)),specs:n}}function h(e,t){const n=new i.w(e),a={};let r=0;for(const s of t){const e=p(s,((e,t)=>n.slice(r+e,r+t)));a[s.name]=m(s,n.slice(r,r+e)),r+=e}return a}function p(e,t){const n=(0,s.NA)(e.shape);let a;if("quantization"in e){const t=e.quantization;a=o.J[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=u+new Uint32Array(t(e,e+u))[0];return e}a=o.J[e.dtype]}return n*a}async function f(e,t){const n=(0,s.NA)(e.shape);let a;if("quantization"in e){const t=e.quantization;a=o.J[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=u+new Uint32Array(await t(e,e+u))[0];return e}a=o.J[e.dtype]}return n*a}function m(e,t){const n=e.name,i=e.dtype,c=e.shape,l=(0,s.NA)(c);let d,h=0;if("quantization"in e){const a=e.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a)||!("scale"in a))throw new Error("Weight ".concat(e.name," with quantization ").concat(a.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==a.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(a.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==i)throw new Error("Weight ".concat(e.name," is quantized with ").concat(a.dtype," ")+"which only supports weights of type float32 not ".concat(i,"."))}const r=o.J[a.dtype],s="uint8"===a.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===i)if("uint8"===a.dtype||"uint16"===a.dtype){d=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];d[e]=t*a.scale+a.min}}else{if("float16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let o=0;o<a.length;o++){const r=a[o],i=e[n[r>>10]+(1023&r)]+t[r>>10];s[o]=i}return new Float32Array(r)}}();d=e(s)}}else{if("int32"!==i)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i));if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type int32.");d=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];d[e]=Math.round(t*a.scale+a.min)}}h+=l*r}else if("string"===i){const n=(0,s.NA)(e.shape);d=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(h,h+u))[0];h+=u;const n=new Uint8Array(t.slice(h,h+e));d.push(n),h+=e}}else{const e=o.J[i];if("float32"===i)d=new Float32Array(t);else if("int32"===i)d=new Int32Array(t);else{if("bool"!==i){if("complex64"===i){d=new Float32Array(t);const e=new Float32Array(d.length/2),n=new Float32Array(d.length/2);for(let t=0;t<e.length;t++)e[t]=d[2*t],n[t]=d[2*t+1];const s=(0,r.X)(e,c,"float32"),o=(0,r.X)(n,c,"float32"),i=(0,a.P)(s,o);return s.dispose(),o.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i))}d=new Uint8Array(t)}h+=l*e}return(0,r.X)(d,c,i)}async function g(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-a.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const s=new Uint8Array(a.length+r.byteLength);s.set(a,0),s.set(new Uint8Array(r),a.length),a=s}return a.buffer}async function y(e,t){const n={},a=e.getReader();let r=new ArrayBuffer(0);for(const o of t){const e=await f(o,(async(e,t)=>(r=await g(a,r,t),r.slice(e,t))));r=await g(a,r,e);const t=r.slice(0,e);r=r.slice(e);const i=m(o,t);if(n[o.name]=i,"webgpu"===(0,c.N_)()){const e=(0,c.y3)();"uploadToGPU"in e&&(0,s.NA)(i.shape)>=(0,l.OB)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function b(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const v="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function x(e){return v?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function w(e){if(v)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}function k(e){if(v){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}function S(e){return i.w.join(e)}function I(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function N(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function T(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function C(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),T(e,n,a)}function E(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:x(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:x(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new i.w(e.weightData).byteLength}}function _(e){const t=[];for(const n of e)t.push(...n.weights);return t}},1988:(e,t,n)=>{"use strict";n.d(t,{J:()=>a});const a={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},2145:(e,t,n)=>{"use strict";n.d(t,{$HU:()=>bt,$g6:()=>te,$w:()=>Y,Acj:()=>be,BMI:()=>We,BiW:()=>mt,Byc:()=>W,CAk:()=>Ce,CQl:()=>ft,D2d:()=>Yt,DlI:()=>ht,Eh3:()=>F,FKq:()=>Vt,G3Y:()=>un,GBy:()=>Wt,Gcp:()=>jt,HEU:()=>ae,HZH:()=>xt,Hhh:()=>Be,Hmb:()=>kt,IKK:()=>l,IMb:()=>x,J$2:()=>Ne,J7O:()=>Pe,J_u:()=>we,JhU:()=>y,Kgp:()=>lt,L8s:()=>Gt,Ly9:()=>N,M2y:()=>h,MIZ:()=>sn,MRv:()=>Pt,MZg:()=>De,NEP:()=>oe,NZg:()=>Je,O3z:()=>Ht,OAf:()=>je,OR:()=>he,OU7:()=>He,OV7:()=>Ge,Omj:()=>re,Oyi:()=>m,PYm:()=>Re,PhF:()=>Ft,QCc:()=>g,QRR:()=>j,Qg5:()=>xe,QiL:()=>it,Qvg:()=>pn,RFZ:()=>C,ROF:()=>b,RQH:()=>Mt,RuY:()=>mn,SIB:()=>At,SX0:()=>ne,SYM:()=>a,SbG:()=>Nt,SpW:()=>s,T0n:()=>H,TQc:()=>Ut,TR1:()=>V,ToN:()=>hn,Tr8:()=>an,Uyb:()=>de,VGw:()=>r,Vbg:()=>Ze,VcC:()=>G,VfG:()=>Fe,Vn9:()=>J,W0H:()=>rt,XDQ:()=>fn,XLW:()=>w,XkS:()=>nn,Xze:()=>i,Y0y:()=>ce,YFo:()=>ie,YoZ:()=>Ve,ZbH:()=>_e,ZjV:()=>Kt,Zz9:()=>A,_JP:()=>en,_V0:()=>xn,_Yw:()=>St,_k9:()=>v,_tC:()=>Qt,a5O:()=>Bt,aJk:()=>d,avt:()=>ke,b9H:()=>bn,bK0:()=>Zt,bV0:()=>Et,c17:()=>Ke,cWu:()=>cn,cie:()=>q,cye:()=>at,dDz:()=>pt,deh:()=>ue,dpD:()=>wt,e07:()=>Ct,e0R:()=>Jt,e6w:()=>gt,e7N:()=>Ee,eBW:()=>yn,eEB:()=>T,eZ0:()=>ze,ekb:()=>Z,gJX:()=>E,h8e:()=>gn,hCO:()=>I,hGc:()=>$,hdR:()=>se,i5y:()=>zt,iHb:()=>U,iJz:()=>ve,iWB:()=>Se,iZT:()=>ye,ik2:()=>B,jMg:()=>f,jQk:()=>$t,jQs:()=>Qe,jeX:()=>pe,kU:()=>Ae,kpP:()=>dn,kuV:()=>et,luS:()=>wn,lyA:()=>ct,mKl:()=>Tt,mTV:()=>Ue,mc4:()=>P,mhS:()=>D,mm_:()=>o,n9L:()=>on,nhH:()=>qt,nr8:()=>Rt,o0g:()=>dt,o2y:()=>z,oFR:()=>Dt,oHH:()=>ee,oT6:()=>c,p2w:()=>Ot,p4S:()=>Q,pe_:()=>ut,q1x:()=>ge,q2K:()=>Xe,q8u:()=>Ye,qCd:()=>Me,qIC:()=>Le,qWM:()=>st,qi_:()=>me,qkr:()=>vt,qw7:()=>p,r7n:()=>Ie,s1s:()=>tn,sEM:()=>rn,sHE:()=>fe,sJF:()=>u,sL$:()=>X,usg:()=>vn,uv1:()=>nt,vFR:()=>qe,vtC:()=>Te,vwp:()=>le,w3H:()=>Xt,w6g:()=>Oe,wUP:()=>O,wYB:()=>Lt,wYn:()=>$e,we_:()=>ot,wm:()=>M,wx7:()=>ln,x12:()=>L,xJR:()=>yt,xQA:()=>_t,xnO:()=>_,y7R:()=>K,yQU:()=>tt,yj2:()=>R,zbQ:()=>It,zvY:()=>S,zws:()=>k});const a="Abs",r="Acos",s="Acosh",o="Add",i="AddN",c="All",l="Any",u="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",v="AvgPool3D",x="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",S="Bincount",I="BitwiseAnd",N="BroadcastTo",T="BroadcastArgs",C="Cast",E="Ceil",_="ClipByValue",A="Complex",R="ComplexAbs",F="Concat",D="Conv2D",O="Conv2DBackpropFilter",M="Conv2DBackpropInput",L="Conv3D",z="Conv3DBackpropFilterV2",B="Conv3DBackpropInputV2",P="Cos",V="Cosh",W="Cumprod",U="Cumsum",G="CropAndResize",j="DenseBincount",H="DepthToSpace",q="DepthwiseConv2dNative",X="DepthwiseConv2dNativeBackpropFilter",K="DepthwiseConv2dNativeBackpropInput",Y="Diag",Q="Dilation2D",Z="Dilation2DBackpropInput",J="Dilation2DBackpropFilter",$="Draw",ee="RealDiv",te="Einsum",ne="Elu",ae="EluGrad",re="Erf",se="Equal",oe="Exp",ie="ExpandDims",ce="Expm1",le="FFT",ue="Fill",de="FlipLeftRight",he="Floor",pe="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",ye="Greater",be="GreaterEqual",ve="Identity",xe="IFFT",we="Imag",ke="IsFinite",Se="IsInf",Ie="IsNan",Ne="LeakyRelu",Te="Less",Ce="LessEqual",Ee="LinSpace",_e="Log",Ae="Log1p",Re="LogicalAnd",Fe="LogicalNot",De="LogicalOr",Oe="LogicalXor",Me="LogSoftmax",Le="LowerBound",ze="LRN",Be="LRNGrad",Pe="MatrixBandPart",Ve="Max",We="Maximum",Ue="MaxPool",Ge="MaxPoolGrad",je="MaxPool3D",He="MaxPool3DGrad",qe="MaxPoolWithArgmax",Xe="Mean",Ke="Min",Ye="Minimum",Qe="MirrorPad",Ze="Mod",Je="Multinomial",$e="Multiply",et="Neg",tt="NotEqual",nt="NonMaxSuppressionV3",at="NonMaxSuppressionV4",rt="NonMaxSuppressionV5",st="OnesLike",ot="OneHot",it="Pack",ct="PadV2",lt="Pool",ut="Pow",dt="Prelu",ht="Prod",pt="RaggedGather",ft="RaggedRange",mt="RaggedTensorToTensor",gt="Range",yt="Real",bt="Reciprocal",vt="Relu",xt="Reshape",wt="ResizeNearestNeighbor",kt="ResizeNearestNeighborGrad",St="ResizeBilinear",It="ResizeBilinearGrad",Nt="Relu6",Tt="Reverse",Ct="Round",Et="Rsqrt",_t="ScatterNd",At="TensorScatterUpdate",Rt="SearchSorted",Ft="Select",Dt="Selu",Ot="Slice",Mt="Sin",Lt="Sinh",zt="Sign",Bt="Sigmoid",Pt="Softplus",Vt="Sqrt",Wt="Sum",Ut="SpaceToBatchND",Gt="SplitV",jt="Softmax",Ht="SparseFillEmptyRows",qt="SparseReshape",Xt="SparseSegmentMean",Kt="SparseSegmentSum",Yt="SparseToDense",Qt="SquaredDifference",Zt="Square",Jt="StaticRegexReplace",$t="StridedSlice",en="StringNGrams",tn="StringSplit",nn="StringToHashBucketFast",an="Sub",rn="Tan",sn="Tanh",on="Tile",cn="TopK",ln="Transform",un="Transpose",dn="Unique",hn="Unpack",pn="UnsortedSegmentSum",fn="UpperBound",mn="ZerosLike",gn="Step",yn="FromPixels",bn="RotateWithOffset",vn="_FusedMatMul",xn="FusedConv2D",wn="FusedDepthwiseConv2D"},8864:(e,t,n)=>{"use strict";n.d(t,{Li:()=>h,T3:()=>m,bt:()=>f,nE:()=>p,pI:()=>c,tr:()=>u,uk:()=>l,wC:()=>d});var a=n(5050),r=n(6581),s=n(7269);const o=(0,r.R)("kernelRegistry",(()=>new Map)),i=(0,r.R)("gradRegistry",(()=>new Map));function c(e,t){const n=g(e,t);return o.get(n)}function l(e){return i.get(e)}function u(e){const t=o.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[s,o]=r,[i]=s.split("_");i===e&&n.push(o)}return n}function d(e){const{kernelName:t,backendName:n}=e,a=g(t,n);o.has(a)&&s.Z("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),o.set(a,e)}function h(e){const{kernelName:t}=e;i.has(t)&&(0,a.OB)().getBool("DEBUG")&&s.Z("Overriding the gradient for '".concat(t,"'")),i.set(t,e)}function p(e,t){const n=g(e,t);if(!o.has(n))throw new Error("The kernel '".concat(e,"' for backend ")+"'".concat(t,"' is not registered"));o.delete(n)}function f(e){if(!i.has(e))throw new Error("The gradient '".concat(e,"' for backend is not registered"));i.delete(e)}function m(e,t){u(e).forEach((e=>{d(Object.assign({},e,{backendName:t}))}))}function g(e,t){return"".concat(t,"_").concat(e)}},7269:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r,c:()=>s});var a=n(5050);function r(){(0,a.OB)().getBool("IS_TEST")||(0,a.OB)().getBool("PROD")||console.warn(...arguments)}function s(){(0,a.OB)().getBool("IS_TEST")||(0,a.OB)().getBool("PROD")||console.log(...arguments)}},7613:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({abs_:function(e){const t=(0,s._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return a.BV.runKernel(r.yj2,e)}{const e={x:t};return a.BV.runKernel(r.SYM,e)}}})},1719:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({acos_:function(e){const t={x:(0,s._1)(e,"x","acos")};return a.BV.runKernel(r.VGw,t)}})},4502:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({acosh_:function(e){const t={x:(0,s._1)(e,"x","acosh")};return a.BV.runKernel(r.SpW,t)}})},3312:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({add_:function(e,t){let n=(0,o._1)(e,"a","add"),i=(0,o._1)(t,"b","add");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(r.mm_,c)}})},4108:(e,t,n)=>{"use strict";n.d(t,{$:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s._1)(e,"x","all","bool")},i={axis:t,keepDims:n};return a.BV.runKernel(r.oT6,o,i)}})},8543:(e,t,n)=>{"use strict";n.d(t,{Y:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s._1)(e,"x","any","bool")},i={axis:t,keepDims:n};return a.BV.runKernel(r.IKK,o,i)}})},9995:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s._1)(e,"x","argMax")},o={axis:t};return a.BV.runKernel(r.sJF,n,o)}})},5157:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s._1)(e,"x","argMin")},o={axis:t};return a.BV.runKernel(r.aJk,n,o)}})},3053:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({asin_:function(e){const t={x:(0,s._1)(e,"x","asin")};return a.BV.runKernel(r.M2y,t)}})},54:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({asinh_:function(e){const t={x:(0,s._1)(e,"x","asinh")};return a.BV.runKernel(r.qw7,t)}})},4778:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({atan_:function(e){const t={x:(0,s._1)(e,"x","atan")};return a.BV.runKernel(r.jMg,t)}})},2227:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({atan2_:function(e,t){let n=(0,o._1)(e,"a","atan2"),i=(0,o._1)(t,"b","atan2");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(r.QCc,c)}})},7897:(e,t,n)=>{"use strict";n.d(t,{C:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({atanh_:function(e){const t={x:(0,s._1)(e,"x","atanh")};return a.BV.runKernel(r.Oyi,t)}})},9204:(e,t,n)=>{"use strict";n.d(t,{w:()=>d});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(9118),c=n(9151),l=n(8640),u=n(5561);const d=(0,l.op)({avgPool_:function(e,t,n,l,d){const h=(0,s._1)(e,"x","avgPool","float32");o.hu(c.jT(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let p=h,f=!1;3===h.rank&&(f=!0,p=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.hu(4===p.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(p.rank,"."))),c.m("avgPool",l,d);const m={x:p},g={filterSize:t,strides:n,pad:l,dimRoundingMode:d};let y=a.BV.runKernel(r.JhU,m,g);return y=(0,i.p)(y,h.dtype),f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},8473:(e,t,n)=>{"use strict";n.d(t,{LJ:()=>u,Q3:()=>l,Vh:()=>s,YB:()=>r,kz:()=>o,lB:()=>c,rv:()=>i,sY:()=>d});var a=n(6147);function r(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const a=e.length+t.length,r=[];let s=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(e[s++]):r.push(t[o++]);return r}function o(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function i(e,t){return s(e,t.map((e=>1)),t)}function c(e,t,n){a.hu(r(t,n),(()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input.")))}function l(e,t){if(r(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function u(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}},6994:(e,t,n)=>{"use strict";n.d(t,{E:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({batchToSpaceND_:function(e,t,n){const i=(0,s._1)(e,"x","batchToSpaceND"),c=t.reduce(((e,t)=>e*t));o.hu(i.rank>=1+t.length,(()=>"input rank is ".concat(i.rank," but should be > than blockShape.length ").concat(t.length))),o.hu(n.length===t.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length))),o.hu(i.shape[0]%c===0,(()=>"input tensor batch is ".concat(i.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(c)));const l={x:i},u={blockShape:t,crops:n};return a.BV.runKernel(r.zws,l,u)}})},3700:(e,t,n)=>{"use strict";n.d(t,{t:()=>c});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(5561);const c=(0,n(8640).op)({batchNorm_:function(e,t,n,c,l,u){null==u&&(u=.001);const d=(0,s._1)(e,"x","batchNorm"),h=(0,s._1)(t,"mean","batchNorm"),p=(0,s._1)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,s._1)(l,"scale","batchNorm")),null!=c&&(m=(0,s._1)(c,"offset","batchNorm")),o.hu(h.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.hu(null==m||h.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.hu(null==f||h.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,i.X)(e,[1,1,1,e.size]):2===e.rank?(0,i.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:h,variance:p},y={varianceEpsilon:u},b=a.BV.runKernel(r.sHE,g,y);return(0,i.X)(b,d.shape)}})},9742:(e,t,n)=>{"use strict";n.d(t,{U:()=>u});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(672),c=n(8640),l=n(5561);const u=(0,c.op)({broadcastTo_:function(e,t){let n=(0,s._1)(e,"broadcastTo","x");const c=n.shape;if((0,o.Mu)(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,l.X)(n,e)}const u=n.shape,d=Array.from(t);for(let a=t.length-1;a>=0;a--)if(u[a]===t[a])d[a]=1;else if(1!==n.shape[a])throw new Error("broadcastTo(): [".concat(c,"] cannot be broadcast to [").concat(t,"]."));if(0===d.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.d)(n);const h={x:n},p={reps:d};return a.BV.runKernel(r.n9L,h,p)}})},5774:(e,t,n)=>{"use strict";function a(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,o=e[s]||1;(t[t.length-1-r]||1)>1&&1===o&&a.unshift(s)}return a}function r(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],s=t.length-a-1,o=t[s];(null==r||1===r&&o>1)&&n.unshift(s)}return n}function s(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let s=e[e.length-r-1];null==s&&(s=1);let o=t[t.length-r-1];if(null==o&&(o=1),1===s)a[n-r-1]=o;else if(1===o)a[n-r-1]=s;else{if(s!==o){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}a[n-r-1]=s}}return a}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>s,getBroadcastDims:()=>a,getReductionAxes:()=>r})},7039:(e,t,n)=>{"use strict";n.d(t,{f:()=>s});var a=n(4376),r=n(6147);function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",r.Mu(e),new a.YD(e,t,n)}},9118:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({cast_:function(e,t){const n=(0,s._1)(e,"x","cast");if(!o.LP(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:t};return a.BV.runKernel(r.RFZ,i,c)}})},1396:(e,t,n)=>{"use strict";n.d(t,{m:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({ceil_:function(e){const t={x:(0,s._1)(e,"x","ceil","float32")};return a.BV.runKernel(r.gJX,t)}})},9836:(e,t,n)=>{"use strict";n.d(t,{i:()=>c});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(8582);const c=(0,n(8640).op)({clipByValue_:function(e,t,n){const c=(0,s._1)(e,"x","clipByValue");if(o.hu(t<=n,(()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,")."))),t===n)return(0,i.h)(c.shape,t,c.dtype);const l={x:c},u={clipValueMin:t,clipValueMax:n};return a.BV.runKernel(r.xnO,l,u)}})},672:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({clone_:function(e){const t={x:(0,s._1)(e,"x","clone","string_or_numeric")};return a.BV.runKernel(r.iJz,t)}})},9253:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({complex_:function(e,t){const n=(0,s._1)(e,"real","complex"),i=(0,s._1)(t,"imag","complex");o.k5(n.shape,i.shape,"real and imag shapes, ".concat(n.shape," and ").concat(i.shape,", ")+"must match in call to tf.complex().");const c={real:n,imag:i};return a.BV.runKernel(r.Zz9,c)}})},4836:(e,t,n)=>{"use strict";n.d(t,{z:()=>c});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(672);const c=(0,n(8640).op)({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,o.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,s.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))})),1===n.length)return(0,i.d)(n[0]);const c=n,l={axis:t};return a.BV.runKernel(r.Eh3,c,l)}})},4918:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var a=n(8354),r=n(6147),s=n(3457),o=n(9151),i=n(8640),c=n(5561);const l=(0,i.op)({conv1d_:function(e,t,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0;const h=(0,a._1)(e,"x","conv1d"),p=(0,a._1)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=(0,c.X)(h,[1,h.shape[0],h.shape[1]])),r.hu(3===f.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(f.rank,"."))),r.hu(3===p.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(p.rank,"."))),o.m("conv1d",i,d),r.hu(f.shape[2]===p.shape[1],(()=>"Error in conv1d: depth of input (".concat(f.shape[2],") must match ")+"input depth for filter ".concat(p.shape[1],"."))),r.hu(o.jT(n,u),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(u,"'"))),r.hu(o.U3(u),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),r.hu(o.U3(n),(()=>"Error in conv1D: Stride should be larger than 0.")),r.hu("NWC"===l,(()=>"Error in conv1d: got dataFormat of ".concat(l," but only NWC is currently supported.")));const g=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),y=(0,c.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],v=[1,u],x=(0,s.T)(y,g,b,i,"NHWC",v,d);return m?(0,c.X)(x,[x.shape[2],x.shape[3]]):(0,c.X)(x,[x.shape[0],x.shape[2],x.shape[3]])}})},3457:(e,t,n)=>{"use strict";n.d(t,{T:()=>u});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(9151),c=n(8640),l=n(5561);const u=(0,c.op)({conv2d_:function(e,t,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,s._1)(e,"x","conv2d","float32"),f=(0,s._1)(t,"filter","conv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.hu(4===m.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(m.rank,"."))),o.hu(4===f.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,"."))),i.m("conv2d",c,h);const y="NHWC"===u?m.shape[3]:m.shape[1];o.hu(y===f.shape[2],(()=>"Error in conv2d: depth of input (".concat(y,") must match ")+"input depth for filter ".concat(f.shape[2],"."))),o.hu(i.jT(n,d),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(d,"'"))),o.hu(i.U3(d),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),o.hu(i.U3(n),(()=>"Error in conv2D: Strides should be larger than 0."));const b={x:m,filter:f},v={strides:n,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h},x=a.BV.runKernel(r.mhS,b,v);return g?(0,l.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},8744:(e,t,n)=>{"use strict";n.d(t,{p:()=>l});var a=n(318),r=n(2145),s=n(6147),o=n(9151),i=n(8640),c=n(5561);const l=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0,h=e;3===e.rank&&(h=(0,c.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,c.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.hu(4===h.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(h.shape,"."))),s.hu(4===p.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(p.shape,"."))),s.hu(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const f="NHWC"===u?h.shape[3]:h.shape[1],m="NHWC"===u?p.shape[3]:p.shape[1];s.hu(f===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(f,") must ")+"match input depth in filter (".concat(n[2],"."))),s.hu(m===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(m,") must ")+"match output depth for filter (".concat(n[3],")."))),o.m("conv2dDerFilter",l,d);const g={x:h,dy:p},y={strides:i,pad:l,dataFormat:u,dimRoundingMode:d,filterShape:n};return a.BV.runKernel(r.wUP,g,y)}})},1045:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var a=n(318),r=n(2145),s=n(6147),o=n(9151),i=n(8640),c=n(5561);const l=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0;s.hu(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let h=e,p=t,f=!1;3===t.rank&&(f=!0,p=(0,c.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),s.hu(4===h.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(h.length,"."))),s.hu(4===p.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(p.rank))),s.hu(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const m="NHWC"===u?h[3]:h[1],g="NHWC"===u?p.shape[3]:p.shape[1];s.hu(m===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(m,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),s.hu(g===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(g,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),o.m("conv2dDerInput",l,d);const y={dy:p,filter:n},b={strides:i,pad:l,dataFormat:u,dimRoundingMode:d,inputShape:h},v=a.BV.runKernel(r.wm,y,b);return f?(0,c.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1732:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var a=n(8354),r=n(1045);const s=(0,n(8640).op)({conv2dTranspose_:function(e,t,n,s,o,i){const c=(0,a._1)(e,"x","conv2dTranspose"),l=(0,a._1)(t,"filter","conv2dTranspose");return(0,r._)(n,c,l,s,o,"NHWC",i)}})},1873:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var a=n(318),r=n(2145),s=n(6147),o=n(8640),i=n(5561);const c=(0,o.op)({conv3DBackpropInput_:function(e,t,n,o,c){s.hu(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let l=e,u=t,d=!1;4===t.rank&&(d=!0,u=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const h=l[4],p=u.shape[4];s.hu(5===l.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(l.length,"."))),s.hu(5===u.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(u.rank))),s.hu(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),s.hu(h===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(h,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),s.hu(p===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(p,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const f={dy:u,filter:n},m={pad:c,strides:o,inputShape:l},g=a.BV.runKernel(r.ik2,f,m);return d?(0,i.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},9151:(e,t,n)=>{"use strict";n.d(t,{I0:()=>f,Ix:()=>i,Rf:()=>r,U3:()=>g,Xw:()=>s,aO:()=>l,jT:()=>m,jw:()=>c,m:()=>b,pl:()=>o,sl:()=>y});var a=n(6147);function r(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return i(e,[...t,e[3]],n,s,a,null,null,y(r))}function s(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[c,l]=u(t);let d;if("channelsLast"===o)d=[c,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));d=[c,l,e[1],e[1]]}return i(e,d,n,a,r,s,!1,o)}function o(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,l,u]=d(t);let h,p;if("NDHWC"===o)p="channelsLast",h=[i,l,u,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));p="channelsFirst",h=[i,l,u,e[1],e[1]]}return c(e,h,n,a,r,!1,p,s)}function i(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===i)[c,d,f,m]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,m,d,f]=e}const[g,y,,b]=t,[v,x]=u(n),[w,k]=u(a),S=h(g,w),I=h(y,k),{padInfo:N,outHeight:T,outWidth:C}=function(e,t,n,a,r,s,o,i,c){let u,d,h;if("number"===typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=l(e,t,n));const s=e[0],o=e[1],i=p((s-t+2*a)/n+1,r),c=p((o-t+2*a)/n+1,r);return[i,c]}([t,n],s,a,e,i);d=r[0],h=r[1]}else if("same"===e){d=Math.ceil(t/a),h=Math.ceil(n/r);const e=Math.max(0,(d-1)*a+s-t),i=Math.max(0,(h-1)*r+o-n),c=Math.floor(e/2),l=e-c,p=Math.floor(i/2);u={top:c,bottom:l,left:p,right:i-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/a),h=Math.ceil((n-o+1)/r);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const l="channelsLast"===c?e[1][0]:e[2][0],f="channelsLast"===c?e[1][1]:e[2][1],m="channelsLast"===c?e[2][0]:e[3][0],g="channelsLast"===c?e[2][1]:e[3][1];u={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},d=p((t-s+l+f)/a+1,i),h=p((n-o+m+g)/r+1,i)}}return{padInfo:u,outHeight:d,outWidth:h}}(r,d,f,v,x,S,I,s,i),E=o?b*m:b;let _;return"channelsFirst"===i?_=[c,E,T,C]:"channelsLast"===i&&(_=[c,T,C,E]),{batchSize:c,dataFormat:i,inHeight:d,inWidth:f,inChannels:m,outHeight:T,outWidth:C,outChannels:E,padInfo:N,strideHeight:v,strideWidth:x,filterHeight:g,filterWidth:y,effectiveFilterHeight:S,effectiveFilterWidth:I,dilationHeight:w,dilationWidth:k,inShape:e,outShape:_,filterShape:t}}function c(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,u,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,u,f,m,g]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[c,g,u,f,m]=e}const[y,b,v,,x]=t,[w,k,S]=d(n),[I,N,T]=d(a),C=h(y,I),E=h(b,N),_=h(v,T),{padInfo:A,outDepth:R,outHeight:F,outWidth:D}=function(e,t,n,a,r,s,o,i,c,u,d){let h,f,m,g;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const y=function(e,t,n,a,r,s){null==r&&(r=l(e,t[0],a[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*r>=t[i]&&(o[i]=p((e[i]-t[i]+2*r)/a[i]+1,s));return o}([t,n,a,1],[i,c,u],1,[r,s,o],e,d);f=y[0],m=y[1],g=y[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{f=Math.ceil(t/r),m=Math.ceil(n/s),g=Math.ceil(a/o);const e=(f-1)*r+i-t,l=(m-1)*s+c-n,d=(g-1)*o+u-a,p=Math.floor(e/2),y=e-p,b=Math.floor(l/2),v=l-b,x=Math.floor(d/2);h={top:b,bottom:v,left:x,right:d-x,front:p,back:y,type:"SAME"}}}return{padInfo:h,outDepth:f,outHeight:m,outWidth:g}}(r,u,f,m,w,k,S,C,E,_,i),O=s?x*g:x;let M;return"channelsFirst"===o?M=[c,O,R,F,D]:"channelsLast"===o&&(M=[c,R,F,D,O]),{batchSize:c,dataFormat:o,inDepth:u,inHeight:f,inWidth:m,inChannels:g,outDepth:R,outHeight:F,outWidth:D,outChannels:O,padInfo:A,strideDepth:w,strideHeight:k,strideWidth:S,filterDepth:y,filterHeight:b,filterWidth:v,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:_,dilationDepth:I,dilationHeight:N,dilationWidth:T,inShape:e,outShape:M,filterShape:t}}function l(e,t,n){const a=h(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function u(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"===typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function f(e){const[t,n,a]=u(e);return 1===t&&1===n&&1===a}function m(e,t){return f(e)||f(t)}function g(e){return u(e).every((e=>e>0))}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function b(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)a.hu(a.GN(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach((t=>{t.forEach((t=>{a.hu(a.GN(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")))}))}))}}}},1227:(e,t,n)=>{"use strict";n.d(t,{m:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({cos_:function(e){const t={x:(0,s._1)(e,"x","cos","float32")};return a.BV.runKernel(r.mc4,t)}})},6679:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({cosh_:function(e){const t={x:(0,s._1)(e,"x","cosh","float32")};return a.BV.runKernel(r.TR1,t)}})},9457:(e,t,n)=>{"use strict";n.d(t,{$:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,s._1)(e,"x","cumprod")},c={axis:t,exclusive:n,reverse:o};return a.BV.runKernel(r.Byc,i,c)}})},8862:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,s._1)(e,"x","cumsum")},c={axis:t,exclusive:n,reverse:o};return a.BV.runKernel(r.iHb,i,c)}})},1878:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const i=(0,s._1)(e,"x","depthToSpace","float32"),c="NHWC"===n?i.shape[1]:i.shape[2],l="NHWC"===n?i.shape[2]:i.shape[3],u="NHWC"===n?i.shape[3]:i.shape[1];o.hu(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t))),o.hu(c*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(c," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(i.shape))),o.hu(l*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(l," and ").concat(t," for depthToSpace with input shape\n        ").concat(i.shape))),o.hu(u%(t*t)===0,(()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(u," for depthToSpace with input shape ").concat(i.shape)));const d={x:i},h={blockSize:t,dataFormat:n};return a.BV.runKernel(r.T0n,d,h)}})},1147:(e,t,n)=>{"use strict";n.d(t,{B:()=>u});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(9151),c=n(8640),l=n(5561);const u=(0,c.op)({depthwiseConv2d_:function(e,t,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,s._1)(e,"x","depthwiseConv2d","float32"),f=(0,s._1)(t,"filter","depthwiseConv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.hu(4===m.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,"."))),o.hu(4===f.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")));const y="NHWC"===u?m.shape[3]:m.shape[1];o.hu(y===f.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(y,") must match the inChannels dimension in ")+"filter ".concat(f.shape[2],"."))),i.m("depthwiseConv2d",c,h);const b={x:m,filter:f},v={strides:n,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h},x=a.BV.runKernel(r.cie,b,v);return g?(0,l.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},288:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(318),r=n(2145),s=n(8640),o=n(5561);const i=(0,s.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=e;3===e.rank&&(u=(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:u,dy:d},p={strides:s,pad:i,dimRoundingMode:l,dilations:c,filterShape:n};return a.BV.runKernel(r.sL$,h,p)}})},6939:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var a=n(318),r=n(2145),s=n(8640),o=n(5561);const i=(0,s.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=t,d=!1;3===t.rank&&(d=!0,u=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:u,filter:n},p={strides:s,pad:i,dimRoundingMode:l,dilations:c,inputShape:e},f=a.BV.runKernel(r.y7R,h,p);return d?(0,o.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},7580:(e,t,n)=>{"use strict";n.d(t,{W:()=>l});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(8640),c=n(5561);const l=(0,i.op)({dilation2d_:function(e,t,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const d=(0,s._1)(e,"x","dilation2d"),h=(0,s._1)(t,"filter","dilation2d");o.hu(3===d.rank||4===d.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(d.rank,"."))),o.hu(3===h.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(h.rank,"."))),o.hu("NHWC"===u,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(u)));let p=d,f=!1;3===d.rank&&(p=(0,c.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0),o.hu(p.shape[3]===h.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(p.shape[3]," vs ").concat(h.shape[2])));const m={x:p,filter:h},g={strides:n,pad:i,dilations:l},y=a.BV.runKernel(r.p4S,m,g);return f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},5750:(e,t,n)=>{"use strict";n.d(t,{h:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(7145);const c=(0,n(8640).op)({div_:function(e,t){let n=(0,o._1)(e,"a","div"),c=(0,o._1)(t,"b","div");if([n,c]=(0,s.makeTypesMatch)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return(0,i.q)(n,c);const l={a:n,b:c};return a.BV.runKernel(r.oHH,l,{})}})},5923:(e,t,n)=>{"use strict";n.d(t,{N:()=>u});var a=n(9064),r=n(8354),s=n(5750),o=n(3254),i=n(8640),c=n(329),l=n(7293);const u=(0,i.op)({divNoNan_:function(e,t){let n=(0,r._1)(e,"a","div"),i=(0,r._1)(t,"b","div");[n,i]=(0,a.makeTypesMatch)(n,i);const u=(0,s.h)(n,i),d=(0,l.P)(u),h=(0,o.D)(i,d);return(0,c.a)(h,d,u)}})},5043:(e,t,n)=>{"use strict";n.d(t,{A:()=>c});var a=n(8354),r=n(6147),s=n(7221),o=n(8640),i=n(5561);const c=(0,o.op)({dot_:function(e,t){const n=(0,a._1)(e,"t1","dot"),o=(0,a._1)(t,"t2","dot");r.hu((1===n.rank||2===n.rank)&&(1===o.rank||2===o.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(o.rank,".")));const c=1===n.rank?n.size:n.shape[1],l=1===o.rank?o.size:o.shape[0];if(r.hu(c===l,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(c," and ").concat(l,"."))),1===n.rank&&1===o.rank){const e=(0,i.X)(n,[1,-1]),t=(0,i.X)(o,[-1,1]),a=(0,s.O)(e,t);return(0,i.X)(a,[])}if(1===n.rank&&2===o.rank){const e=(0,i.X)(n,[1,-1]),t=(0,i.X)(o,[o.shape[0],o.shape[1]]),a=(0,s.O)(e,t);return(0,i.X)(a,[a.size])}if(2===n.rank&&1===o.rank){const e=(0,i.X)(o,[-1,1]),t=(0,s.O)(n,e);return(0,i.X)(t,[t.size])}{const e=(0,i.X)(o,[o.shape[0],o.shape[1]]);return(0,s.O)(n,e)}}})},2353:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({elu_:function(e){const t={x:(0,s._1)(e,"x","elu","float32")};return a.BV.runKernel(r.SX0,t)}})},3254:(e,t,n)=>{"use strict";n.d(t,{D:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({equal_:function(e,t){let n=(0,o._1)(e,"a","equal","string_or_numeric"),c=(0,o._1)(t,"b","equal","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(r.hdR,l)}})},3891:(e,t,n)=>{"use strict";n.d(t,{q:()=>c});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(9118);const c=(0,n(8640).op)({erf_:function(e){let t=(0,s._1)(e,"x","erf");o.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,i.p)(t,"float32"));const n={x:t};return a.BV.runKernel(r.Omj,n)}})},3313:(e,t,n)=>{"use strict";n.d(t,{d:()=>r});var a=n(6662);const r=(0,n(8640).op)({euclideanNorm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,a.K)(e,"euclidean",t,n)}})},411:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({exp_:function(e){const t={x:(0,s._1)(e,"x","exp")};return a.BV.runKernel(r.NEP,t)}})},2975:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s._1)(e,"x","expandDims","string_or_numeric");o.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const i={input:n},c={dim:t};return a.BV.runKernel(r.YFo,i,c)}})},5682:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({expm1_:function(e){const t={x:(0,s._1)(e,"x","expm1")};return a.BV.runKernel(r.Y0y,t)}})},8582:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var a=n(318),r=n(2145),s=n(6147);function o(e,t,n){(0,s.Mu)(e);const o={shape:e,value:t,dtype:n=n||(0,s.D2)(t)};return a.BV.runKernel(r.deh,{},o)}},2628:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({floor_:function(e){const t={x:(0,s._1)(e,"x","floor","float32")};return a.BV.runKernel(r.OR,t)}})},7145:(e,t,n)=>{"use strict";n.d(t,{q:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({floorDiv_:function(e,t){let n=(0,o._1)(e,"a","floorDiv"),i=(0,o._1)(t,"b","floorDiv");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(r.jeX,c)}})},5171:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>f,QH:()=>g,pf:()=>m,uy:()=>y});var a=n(5774),r=n(2353),s=n(4419),o=n(651),i=n(6859),c=n(7539),l=n(5900),u=n(5561),d=n(7643),h=n(4031),p=n(227);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,o.d)(e,(0,h.N)(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function m(e,t){let n=t;const r=a.getReductionAxes(e.shape,t.shape);return r.length>0&&(n=(0,p.S)(n,r)),(0,u.X)(n,e.shape)}function g(e,t,n,a){if("linear"===t)return e;if("relu"===t)return(0,c.U)(e);if("elu"===t)return(0,r.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,i.A)(e,n);if("leakyrelu"===t)return(0,s.h)(e,a);if("sigmoid"===t)return(0,d.X)(e);throw new Error("Unknown fused activation ".concat(t,"."))}const y=(e,t)=>!(e>0)||"linear"===t},9498:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i={x:(0,s._1)(e,"x","gather"),indices:(0,s._1)(t,"indices","gather","int32")},c={axis:n,batchDims:o};return a.BV.runKernel(r.qi_,i,c)}})},5014:(e,t,n)=>{"use strict";n.d(t,{p:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({greater_:function(e,t){let n=(0,o._1)(e,"a","greater","string_or_numeric"),c=(0,o._1)(t,"b","greater","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(r.iZT,l)}})},8327:(e,t,n)=>{"use strict";n.d(t,{b:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({greaterEqual_:function(e,t){let n=(0,o._1)(e,"a","greaterEqual","string_or_numeric"),c=(0,o._1)(t,"b","greaterEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(r.Acj,l)}})},6996:(e,t,n)=>{"use strict";n.d(t,{a:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({imag_:function(e){const t={input:(0,s._1)(e,"input","imag")};return a.BV.runKernel(r.J_u,t)}})},464:(e,t,n)=>{"use strict";n.d(t,{I:()=>l});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(8640),c=n(5561);const l=(0,i.op)({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,s._1)(e,"images","resizeBilinear");o.hu(3===l.rank||4===l.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),o.hu(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,"."))),o.hu(!1===i||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let u=l,d=!1;3===l.rank&&(d=!0,u=(0,c.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:u},p={alignCorners:n,halfPixelCenters:i,size:t},f=a.BV.runKernel(r._Yw,h,p);return d?(0,c.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},8600:(e,t,n)=>{"use strict";n.d(t,{j:()=>l});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(8640),c=n(5561);const l=(0,i.op)({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,s._1)(e,"images","resizeNearestNeighbor");o.hu(3===l.rank||4===l.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),o.hu(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,"."))),o.hu("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),o.hu(!1===i||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let u=l,d=!1;3===l.rank&&(d=!0,u=(0,c.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:u},p={alignCorners:n,halfPixelCenters:i,size:t},f=a.BV.runKernel(r.dpD,h,p);return d?(0,c.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},300:(e,t,n)=>{"use strict";n.d(t,{x:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({isFinite_:function(e){const t={x:(0,s._1)(e,"x","isFinite")};return a.BV.runKernel(r.avt,t)}})},4652:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({isInf_:function(e){const t={x:(0,s._1)(e,"x","isInf")};return a.BV.runKernel(r.iWB,t)}})},7005:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({isNaN_:function(e){const t={x:(0,s._1)(e,"x","isNaN")};return a.BV.runKernel(r.r7n,t)}})},4419:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:(0,s._1)(e,"x","leakyRelu")},o={alpha:t};return a.BV.runKernel(r.J$2,n,o)}})},4920:(e,t,n)=>{"use strict";n.d(t,{d:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({less_:function(e,t){let n=(0,o._1)(e,"a","less","string_or_numeric"),c=(0,o._1)(t,"b","less","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(r.vtC,l)}})},2642:(e,t,n)=>{"use strict";n.d(t,{z:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({lessEqual_:function(e,t){let n=(0,o._1)(e,"a","lessEqual","string_or_numeric"),c=(0,o._1)(t,"b","lessEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(r.CAk,l)}})},936:(e,t,n)=>{"use strict";n.d(t,{G:()=>l});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(8640),c=n(5561);const l=(0,i.op)({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const u=(0,s._1)(e,"x","localResponseNormalization");o.hu(4===u.rank||3===u.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(u.rank,"."))),o.hu(o.GN(t),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,".")));let d=u,h=!1;3===u.rank&&(h=!0,d=(0,c.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const p={x:d},f={depthRadius:t,bias:n,alpha:i,beta:l},m=a.BV.runKernel(r.eZ0,p,f);return h?(0,c.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},378:(e,t,n)=>{"use strict";n.d(t,{c:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({log_:function(e){const t={x:(0,s._1)(e,"x","log","float32")};return a.BV.runKernel(r.ZbH,t)}})},5341:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({log1p_:function(e){const t={x:(0,s._1)(e,"x","log1p")};return a.BV.runKernel(r.kU,t)}})},5113:(e,t,n)=>{"use strict";n.d(t,{e:()=>u});var a=n(6450),r=n(8354),s=n(651),o=n(4362),i=n(8640),c=n(7643),l=n(4626);const u=(0,i.op)({logSigmoid_:function(e){const t=(0,r._1)(e,"x","logSigmoid");return(0,a.cb)((e=>({value:(0,o.W)((0,l.W)((0,o.W)(e))),gradFunc:t=>(0,s.d)(t,(0,c.X)((0,o.W)(e)))})))(t)}})},4561:(e,t,n)=>{"use strict";n.d(t,{C:()=>p});var a=n(6450),r=n(8354),s=n(9118),o=n(411),i=n(378),c=n(6176),l=n(651),u=n(8640),d=n(4774),h=n(227);const p=(0,u.op)({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,r._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));return(0,a.cb)(((e,n)=>{const a=(0,c.F)(e,t,!0),r=(0,d.l)(e,a),u=(0,d.l)((0,s.p)(r,"float32"),(0,i.c)((0,h.S)((0,o.Q)(r),t,!0)));n([u]);return{value:u,gradFunc:(e,n)=>{const[a]=n,r=(0,o.Q)(a);return(0,d.l)(e,(0,l.d)((0,h.S)(e,t,!0),r))}}}))(n)}})},5530:(e,t,n)=>{"use strict";n.d(t,{l:()=>f});var a=n(8354),r=n(6147),s=n(3312),o=n(8473),i=n(411),c=n(378),l=n(6176),u=n(8640),d=n(5561),h=n(4774),p=n(227);const f=(0,u.op)({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const u=(0,a._1)(e,"x","logSumExp"),f=(0,r.EC)(t,u.shape),m=(0,l.F)(u,f,!0),g=(0,h.l)(u,m),y=(0,i.Q)(g),b=(0,p.S)(y,f),v=(0,c.c)(b),x=(0,s.I)((0,d.X)(m,v.shape),v);if(n){const e=(0,o.rv)(x.shape,f);return(0,d.X)(x,e)}return x}})},2177:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(5774);const i=(0,n(8640).op)({logicalAnd_:function(e,t){const n=(0,s._1)(e,"a","logicalAnd","bool"),i=(0,s._1)(t,"b","logicalAnd","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.BV.runKernel(r.PYm,c)}})},875:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({logicalNot_:function(e){const t={x:(0,s._1)(e,"x","logicalNot","bool")};return a.BV.runKernel(r.VfG,t)}})},5117:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(5774);const i=(0,n(8640).op)({logicalOr_:function(e,t){const n=(0,s._1)(e,"a","logicalOr","bool"),i=(0,s._1)(t,"b","logicalOr","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.BV.runKernel(r.MZg,c)}})},1712:(e,t,n)=>{"use strict";n.d(t,{e:()=>c});var a=n(8354),r=n(5774),s=n(2177),o=n(875),i=n(5117);const c=(0,n(8640).op)({logicalXor_:function(e,t){const n=(0,a._1)(e,"a","logicalXor","bool"),c=(0,a._1)(t,"b","logicalXor","bool");return(0,r.assertAndGetBroadcastShape)(n.shape,c.shape),(0,s.H)((0,i.K)(e,t),(0,o.h)((0,s.H)(e,t)))}})},7627:(e,t,n)=>{"use strict";var a;n.d(t,{I:()=>a}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(a||(a={}))},7221:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=(0,o._1)(e,"a","matMul"),l=(0,o._1)(t,"b","matMul");[c,l]=(0,s.makeTypesMatch)(c,l);const u={a:c,b:l},d={transposeA:n,transposeB:i};return a.BV.runKernel(r.XLW,u,d)}})},6176:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s._1)(e,"x","max")},i={reductionIndices:t,keepDims:n};return a.BV.runKernel(r.YoZ,o,i)}})},5777:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(9151),c=n(8640),l=n(5561);const u=(0,c.op)({maxPool_:function(e,t,n,c,u){const d=(0,s._1)(e,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.hu(4===h.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(h.rank,"."))),o.hu(i.jT(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),i.m("maxPool",c,u);const f={x:h},m={filterSize:t,strides:n,pad:c,dimRoundingMode:u},g=a.BV.runKernel(r.mTV,f,m);return p?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},705:(e,t,n)=>{"use strict";n.d(t,{g:()=>l});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774),c=n(9118);const l=(0,n(8640).op)({maximum_:function(e,t){let n=(0,o._1)(e,"a","maximum"),l=(0,o._1)(t,"b","maximum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.p)(n,"int32"),l=(0,c.p)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.BV.runKernel(r.BMI,u)}})},6568:(e,t,n)=>{"use strict";n.d(t,{J:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s._1)(e,"x","mean")},i={axis:t,keepDims:n};return a.BV.runKernel(r.q2K,o,i)}})},7891:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s._1)(e,"x","min")},i={axis:t,keepDims:n};return a.BV.runKernel(r.c17,o,i)}})},2273:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774),c=n(9118);const l=(0,n(8640).op)({minimum_:function(e,t){let n=(0,o._1)(e,"a","minimum"),l=(0,o._1)(t,"b","minimum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.p)(n,"int32"),l=(0,c.p)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.BV.runKernel(r.q8u,u)}})},9719:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({mirrorPad_:function(e,t,n){o.hu("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const i=(0,s._1)(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.hu(t.length===i.rank,(()=>"Padding doesn't match input. Must be ".concat(i.rank,". ")+"Got ".concat(t.length,".")));const c="reflect"===n?1:0;for(let a=0;a<i.rank;a++)o.hu(2===t[a].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),o.hu(t[a][0]>=0&&t[a][0]<=i.shape[a]-c&&t[a][1]>=0&&t[a][1]<=i.shape[a]-c,(()=>"Padding in dimension ".concat(a," cannot be greater than or equal ")+"to ".concat(i.shape[a]-c," or less than 0 for input of ")+"shape ".concat(i.shape)));const l={paddings:t,mode:n},u={x:i};return a.BV.runKernel(r.jQs,u,l)}})},4645:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({mod_:function(e,t){let n=(0,o._1)(e,"a","mod"),i=(0,o._1)(t,"b","mod");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(r.Vbg,c)}})},651:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({mul_:function(e,t){let n=(0,o._1)(e,"a","mul"),i=(0,o._1)(t,"b","mul");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(r.wYn,c)}})},4362:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({neg_:function(e){const t={x:(0,s._1)(e,"x","neg")};return a.BV.runKernel(r.kuV,t)}})},6662:(e,t,n)=>{"use strict";n.d(t,{K:()=>y});var a=n(8354),r=n(6147),s=n(7613),o=n(8473),i=n(6176),c=n(7891),l=n(8640),u=n(4334),d=n(5561),h=n(7067),p=n(6902),f=n(7391),m=n(227);function g(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return(0,s.W)(e);if(1!==e.rank&&null===n)return g((0,d.X)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,s.W)(e),n);if(t===1/0)return(0,i.F)((0,s.W)(e),n);if(t===-1/0)return(0,c.V)((0,s.W)(e),n);if("euclidean"===t||2===t)return(0,p._)((0,m.S)((0,u.s)((0,s.W)(e),(0,h.i)(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,i.F)((0,m.S)((0,s.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,i.F)((0,m.S)((0,s.W)(e),n[1]),n[0]);if(t===-1/0)return(0,c.V)((0,m.S)((0,s.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,p._)((0,m.S)((0,f.h)(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const y=(0,l.op)({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=g(e=(0,a._1)(e,"x","norm"),t,n);let c=i.shape;if(s){const t=(0,r.EC)(n,e.shape);c=o.rv(i.shape,t)}return(0,d.X)(i,c)}})},5549:(e,t,n)=>{"use strict";n.d(t,{Q:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({notEqual_:function(e,t){let n=(0,o._1)(e,"a","notEqual","string_or_numeric"),c=(0,o._1)(t,"b","notEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(r.yQU,l)}})},4326:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const c={indices:(0,s._1)(e,"indices","oneHot","int32")},l={dtype:i,depth:t,onValue:n,offValue:o};return a.BV.runKernel(r.we_,c,l)}})},6100:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var a=n(318),r=n(6147),s=n(9253),o=n(7742);function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,r.Mu)(e),"complex64"===t){const t=i(e,"float32"),n=(0,o.l)(e,"float32");return(0,s.P)(t,n)}const n=(0,r.p8)((0,r.NA)(e),t);return a.BV.makeTensor(n,e,t)}},773:(e,t,n)=>{"use strict";n.d(t,{J:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({onesLike_:function(e){const t={x:(0,s._1)(e,"x","onesLike")};return a.BV.runKernel(r.qWM,t)}})},8640:(e,t,n)=>{"use strict";n.d(t,{op:()=>o,z:()=>s});var a=n(318),r=n(6147);const s="__op";function o(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const o=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const i=function(){a.BV.startScope(n);try{const e=o(...arguments);return(0,r.tI)(e)&&console.error("Cannot return a Promise inside of tidy."),a.BV.endScope(e),e}catch(e){throw a.BV.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},9503:(e,t,n)=>{"use strict";n.d(t,{zvA:()=>h.z,WnP:()=>r.W,Khb:()=>s.K,__u:()=>o._,IHx:()=>i.I,QBD:()=>p,$6P:()=>f.$,YjB:()=>m.Y,NqF:()=>g.N,vHJ:()=>y.v,ZRM:()=>b.Z,VfV:()=>v.V,z4N:()=>x.z,fvJ:()=>w.f,C80:()=>k.C,wS1:()=>S.w,uR5:()=>C,zEQ:()=>O,tgs:()=>L.t,Dxk:()=>z,JY5:()=>B,p3b:()=>P,E4h:()=>M.E,yE8:()=>V,ycw:()=>W,anm:()=>na,XsQ:()=>U,UFq:()=>G.U,f3b:()=>j.f,pju:()=>I.p,mDi:()=>H.m,iUl:()=>q.i,d9v:()=>X.d,PYB:()=>K.P,zoF:()=>E.z,gME:()=>Y,Izb:()=>Q,MNy:()=>Z,ZaL:()=>J,PAt:()=>$.P,Tek:()=>ee.T,bc:()=>te.b,pdZ:()=>ne,$QV:()=>re,mCk:()=>se.m,f9Y:()=>oe.f,mew:()=>ha,$Gn:()=>ie.$,zbp:()=>ce.z,ppE:()=>le,nTT:()=>ue.n,B10:()=>de.B,Ka3:()=>he,WmZ:()=>pe.W,hiC:()=>fe.h,NTj:()=>me.N,AKD:()=>ge.A,rvX:()=>ua,WYO:()=>ye,pyx:()=>be.p,GRh:()=>da,EDe:()=>ve,DgJ:()=>xe.D,qNN:()=>we.q,d2q:()=>ke.d,Qqt:()=>Se.Q,dt4:()=>Ie.d,t$B:()=>Ne.t,iyy:()=>Ce,kp_:()=>wn.k,hlL:()=>Ee.h,GWj:()=>_e.G,qPi:()=>Ae.q,imm:()=>a,Iqj:()=>Re.I,dbB:()=>la,pjt:()=>Fe.p,brS:()=>De.b,Sxn:()=>kn.S,asL:()=>Oe.a,BHj:()=>gr,V3u:()=>pa,wx0:()=>Sn.w,xVT:()=>Me.x,UWc:()=>Le.U,i2d:()=>ze.i,hi7:()=>Be.h,d9m:()=>Pe.d,zN1:()=>Ve.z,$r2:()=>yr,SX3:()=>We,G9k:()=>Ue.G,cM7:()=>Ge.c,Krr:()=>je.K,e_t:()=>He.e,CmS:()=>qe.C,l_t:()=>Xe.l,HvI:()=>Ke.H,hJK:()=>Ye.h,K5V:()=>Qe.K,egP:()=>Ze.e,MB5:()=>br,eab:()=>et,OI3:()=>_.O,Fp7:()=>tt.F,_sB:()=>nt._,YQQ:()=>at,Ip$:()=>rt,gWQ:()=>st.g,J69:()=>ot.J,ry_:()=>lt,VV$:()=>ut.V,LTh:()=>dt.L,VdP:()=>ht.V,wQq:()=>pt.w,Gi7:()=>yt,p_:()=>oa,dC7:()=>A.d,rq4:()=>bt,SJ_:()=>vt,W76:()=>xt.W,KOy:()=>ra.K,Quu:()=>wt.Q,lfX:()=>kt.l,iUs:()=>it.i,JpU:()=>St.J,op:()=>h.op,N2O:()=>It,vku:()=>Nt.v,pNR:()=>Tt,koy:()=>Ct,t1L:()=>Et,lGY:()=>_t,d_R:()=>At.d,sQ3:()=>Rt.s,AL3:()=>Ft.A,S0v:()=>Dt.S,WVs:()=>Ot.W,$gW:()=>Mt,VT$:()=>Lt,N89:()=>zt,TN_:()=>Bt,wzB:()=>Gt,nGf:()=>jt,ruB:()=>Ht,LGj:()=>qt,pe5:()=>Xt,w6H:()=>Kt,kwC:()=>Yt.k,M25:()=>Qt.M,UYe:()=>Zt.U,btT:()=>Jt.b,XLQ:()=>T.X,GYS:()=>$t.G,SDf:()=>en,diP:()=>tn,sx7:()=>nn,mG2:()=>an,QEs:()=>In.Q,NMM:()=>rn.N,bp0:()=>sn.b,iD$:()=>on.i,snQ:()=>ia,zcT:()=>$e,U8D:()=>cn.U,U_I:()=>ln.U,ODp:()=>un,XD2:()=>R.X,Xxe:()=>dn.X,tdS:()=>mr,O$l:()=>hn.O,R_K:()=>pn.R,tPi:()=>F.t,jZU:()=>fn,SmN:()=>mn,CnO:()=>gn,p0P:()=>yn,XAC:()=>bn.X,Wvh:()=>vn.W,fBT:()=>xn.f,rVs:()=>vr,ers:()=>ca,uN7:()=>fr,Vl2:()=>Nn.V,_b3:()=>Tn._,h62:()=>mt.h,$i:()=>Cn.$,L9e:()=>En.L,knu:()=>_n.k,Nbs:()=>An.N,NXj:()=>Rn.N,Z_8:()=>xr,luU:()=>gt.l,Smz:()=>Fn.S,ORZ:()=>Dn.O,AEp:()=>D.A,XeE:()=>On.X,RRF:()=>Ln,odF:()=>zn,wOQ:()=>Bn.w,yXz:()=>Pn,Bfx:()=>Vn,xZs:()=>Wn,Pg0:()=>Gn,Gg6:()=>Te.G,hg7:()=>jn.h,p4s:()=>aa.p,Xu6:()=>Hn,Two:()=>qn.T,pUJ:()=>Xn.p,HHK:()=>Kn.H,GaM:()=>Yn,VD$:()=>Qn,arb:()=>Zn.a,itS:()=>$n,lls:()=>ea.l,P84:()=>ta.P});var a={};n.r(a),n.d(a,{conv2d:()=>va,depthwiseConv2d:()=>ka,matMul:()=>Sa});var r=n(7613),s=n(1719),o=n(4502),i=n(3312),c=n(318),l=n(2145),u=n(8354),d=n(6147),h=n(8640);const p=(0,h.op)({addN_:function(e){d.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),d.hu(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length)));const t=e.map(((e,t)=>(0,u._1)(e,"tensors".concat(t),"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!d.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return c.BV.runKernel(l.Xze,a)}});var f=n(4108),m=n(8543),g=n(9995),y=n(5157),b=n(3053),v=n(54),x=n(4778),w=n(2227),k=n(7897),S=n(9204),I=n(9118),N=n(9151),T=n(5561);const C=(0,h.op)({avgPool3d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,u._1)(e,"x","avgPool3d","float32");let i=o,h=!1;4===o.rank&&(h=!0,i=(0,T.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.hu(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),d.hu("NDHWC"===s,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),d.hu("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),(0,N.m)("avgPool3d",a,r);const p={x:i},f={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let m=c.BV.runKernel(l._k9,p,f);return m=(0,I.p)(m,i.dtype),h?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var E=n(4836),_=n(7221),A=n(651),R=n(7643),F=n(9238),D=n(1744);const O=(0,h.op)({basicLSTMCell_:function(e,t,n,a,r,s){const o=(0,u._1)(e,"forgetBias","basicLSTMCell"),c=(0,u._1)(t,"lstmKernel","basicLSTMCell"),l=(0,u._1)(n,"lstmBias","basicLSTMCell"),d=(0,u._1)(a,"data","basicLSTMCell"),h=(0,u._1)(r,"c","basicLSTMCell"),p=(0,u._1)(s,"h","basicLSTMCell"),f=(0,E.z)([d,p],1),m=(0,_.O)(f,c),g=(0,i.I)(m,l),y=g.shape[0],b=g.shape[1]/4,v=[y,b],x=(0,F.t)(g,[0,0],v),w=(0,F.t)(g,[0,b],v),k=(0,F.t)(g,[0,2*b],v),S=(0,F.t)(g,[0,3*b],v),I=(0,i.I)((0,A.d)((0,R.X)(x),(0,D.A)(w)),(0,A.d)(h,(0,R.X)((0,i.I)(o,k))));return[I,(0,A.d)((0,D.A)(I),(0,R.X)(S))]}});var M=n(6994),L=n(3700);const z=(0,h.op)({batchNorm2d_:function(e,t,n,a,r,s){const o=(0,u._1)(e,"x","batchNorm"),i=(0,u._1)(t,"mean","batchNorm"),c=(0,u._1)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u._1)(r,"scale","batchNorm")),null!=a&&(h=(0,u._1)(a,"offset","batchNorm")),d.hu(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,"."))),d.hu(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.hu(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.hu(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=h&&d.hu(2===h.rank||1===h.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(h.rank,"."))),(0,L.t)(o,i,c,h,l,s)}});const B=(0,h.op)({batchNorm3d_:function(e,t,n,a,r,s){const o=(0,u._1)(e,"x","batchNorm"),i=(0,u._1)(t,"mean","batchNorm"),c=(0,u._1)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u._1)(r,"scale","batchNorm")),null!=a&&(h=(0,u._1)(a,"offset","batchNorm")),d.hu(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,"."))),d.hu(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.hu(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.hu(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=h&&d.hu(3===h.rank||1===h.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(h.rank,"."))),(0,L.t)(o,i,c,h,l,s)}});const P=(0,h.op)({batchNorm4d_:function(e,t,n,a,r,s){const o=(0,u._1)(e,"x","batchNorm"),i=(0,u._1)(t,"mean","batchNorm"),c=(0,u._1)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u._1)(r,"scale","batchNorm")),null!=a&&(h=(0,u._1)(a,"offset","batchNorm")),d.hu(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,"."))),d.hu(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.hu(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.hu(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=h&&d.hu(4===h.rank||1===h.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(h.rank,"."))),(0,L.t)(o,i,c,h,l,s)}});const V=(0,h.op)({bincount_:function(e,t,n){const a=(0,u._1)(e,"x","bincount"),r=(0,u._1)(t,"weights","bincount");d.hu("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),d.hu(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),d.hu(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const s={x:a,weights:r},o={size:n};return c.BV.runKernel(l.zvY,s,o)}});const W=(0,h.op)({bitwiseAnd_:function(e,t){const n=(0,u._1)(e,"x","bitwiseAnd"),a=(0,u._1)(t,"y","bitwiseAnd");if(!(0,d.cO)(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const r={a:n,b:a};return c.BV.runKernel(l.hCO,r)}});const U=(0,h.op)({broadcastArgs_:function(e,t){const n=(0,u._1)(e,"s0","broadcastArgs","int32"),a=(0,u._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const r={s0:n,s1:a};return c.BV.runKernel(l.eEB,r)}});var G=n(9742),j=n(7039),H=n(1396),q=n(9836),X=n(672),K=n(9253);const Y=(0,h.op)({concat1d_:function(e){return(0,E.z)(e,0)}});const Q=(0,h.op)({concat2d_:function(e,t){return(0,E.z)(e,t)}});const Z=(0,h.op)({concat3d_:function(e,t){return(0,E.z)(e,t)}});const J=(0,h.op)({concat4d_:function(e,t){return(0,E.z)(e,t)}});var $=n(4918),ee=n(3457),te=n(1732);const ne=(0,h.op)({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=(0,u._1)(e,"x","conv3d"),i=(0,u._1)(t,"filter","conv3d");let h=o,p=!1;4===o.rank&&(p=!0,h=(0,T.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.hu(5===h.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(h.rank,"."))),d.hu(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),d.hu(h.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(h.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),d.hu((0,N.jT)(n,s),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),d.hu("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported."))),d.hu((0,N.U3)(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),d.hu((0,N.U3)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const f={x:h,filter:i},m={strides:n,pad:a,dataFormat:r,dilations:s},g=c.BV.runKernel(l.x12,f,m);return p?(0,T.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var ae=n(1873);const re=(0,h.op)({conv3dTranspose_:function(e,t,n,a,r){const s=(0,u._1)(e,"x","conv3dTranspose"),o=(0,u._1)(t,"filter","conv3dTranspose");return(0,ae._)(n,s,o,a,r)}});var se=n(1227),oe=n(6679),ie=n(9457),ce=n(8862);const le=(0,h.op)({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=(0,u._1)(e,"x","denseBincount"),s=(0,u._1)(t,"weights","denseBincount");d.hu("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),d.hu(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),d.hu(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),d.hu(s.size===r.size||0===s.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(s.shape,".")));const o={x:r,weights:s},i={size:n,binaryOutput:a};return c.BV.runKernel(l.QRR,o,i)}});var ue=n(1878),de=n(1147);const he=(0,h.op)({diag_:function(e){const t={x:(0,u._1)(e,"x","diag")};return c.BV.runKernel(l.$w,t)}});var pe=n(7580),fe=n(5750),me=n(5923),ge=n(5043);const ye=(0,h.op)({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const r=n.map(((e,t)=>(0,u._1)(e,"tensors".concat(t),"einsum"))),s={equation:e};return c.BV.runKernel(l.$g6,r,s)}});var be=n(2353);const ve=(0,h.op)({ensureShape_:function(e,t){const n=(0,u._1)(e,"x","ensureShape","string_or_numeric");if(!(0,d.DK)(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});var xe=n(3254),we=n(3891),ke=n(3313),Se=n(411),Ie=n(2975),Ne=n(5682),Te=n(2343);const Ce=(0,h.op)({eye_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const r=(0,j.f)([e,t],a),s=e<=t?e:t;for(let i=0;i<s;++i)r.set(1,i,i);const o=(0,T.X)(r.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return(0,Te.G)((0,Ie.d)(o,0),[n[0],1,1]);if(2===n.length)return(0,Te.G)((0,Ie.d)((0,Ie.d)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Te.G)((0,Ie.d)((0,Ie.d)((0,Ie.d)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});var Ee=n(8582),_e=n(2628),Ae=n(7145),Re=n(9498),Fe=n(5014),De=n(8327),Oe=n(6996),Me=n(300),Le=n(4652),ze=n(7005),Be=n(4419),Pe=n(4920),Ve=n(2642);function We(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return c.BV.runKernel(l.e7N,{},a)}var Ue=n(936),Ge=n(378),je=n(5341),He=n(5113),qe=n(4561),Xe=n(5530),Ke=n(2177),Ye=n(875),Qe=n(5117),Ze=n(1712);const Je=2147483648;const $e=(0,h.op)({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=(0,u._1)(e,"sortedSequence","searchSorted"),r=(0,u._1)(t,"values","searchSorted"),s=a.shape[a.shape.length-1],o=r.shape[r.shape.length-1],i=(0,T.X)(a,[-1,s]),h=(0,T.X)(r,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==h.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,d.NA)(h.shape)>=Je)throw new Error("values tensor size must less than ".concat(Je));if(i.shape[1]>=Je)throw new Error("trailing dim_size must less than ".concat(Je," for int32 output type, was ").concat(i.shape[1]));const p={sortedSequence:i,values:h},f={side:n};return c.BV.runKernel(l.nr8,p,f)}});function et(e,t){return $e(e,t,"left")}var tt=n(6176),nt=n(5777);const at=(0,h.op)({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,u._1)(e,"x","maxPool3d");let i=o,h=!1;4===o.rank&&(h=!0,i=(0,T.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.hu(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),d.hu("NDHWC"===s,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),(0,N.m)("maxPool3d",a,r);const p={x:i},f={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},m=c.BV.runKernel(l.OAf,p,f);return h?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const rt=(0,h.op)({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s={x:(0,u._1)(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},i=c.BV.runKernel(l.vFR,s,o);return{result:i[0],indexes:i[1]}}});var st=n(705),ot=n(6568),it=n(6100),ct=n(4376);function lt(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let a=(0,u._1)(e,"x","meshgrid",e instanceof ct.es?e.dtype:"float32");if(void 0===t)return[a];let r=(0,u._1)(t,"y","meshgrid",t instanceof ct.es?t.dtype:"float32");const s=(0,d.NA)(a.shape),o=(0,d.NA)(r.shape);return"xy"===n?(a=(0,T.X)(a,[1,-1]),r=(0,T.X)(r,[-1,1]),[(0,_.O)((0,it.i)([o,1],a.dtype),a),(0,_.O)(r,(0,it.i)([1,s],r.dtype))]):(a=(0,T.X)(a,[-1,1]),r=(0,T.X)(r,[1,-1]),[(0,_.O)(a,(0,it.i)([1,o],a.dtype)),(0,_.O)((0,it.i)([s,1],r.dtype),r)])}var ut=n(7891),dt=n(2273),ht=n(9719),pt=n(4645),ft=n(8473),mt=n(7391),gt=n(4774);const yt=(0,h.op)({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e=(0,u._1)(e,"x","moments");const a=(0,d.EC)(t,e.shape),r=(0,ot.J)(e,a,n);let s=r.shape;n||(s=(0,ft.rv)(r.shape,a));const o=(0,mt.h)((0,gt.l)((0,I.p)(e,"float32"),(0,T.X)(r,s)));return{mean:r,variance:(0,ot.J)(o,a,n)}}});const bt=(0,h.op)({multiRNNCell_:function(e,t,n,a){const r=(0,u._1)(t,"data","multiRNNCell"),s=(0,u.sI)(n,"c","multiRNNCell"),o=(0,u.sI)(a,"h","multiRNNCell");let i=r;const c=[];for(let u=0;u<e.length;u++){const t=e[u](i,s[u],o[u]);c.push(t[0]),c.push(t[1]),i=t[1]}const l=[],d=[];for(let u=0;u<c.length;u+=2)l.push(c[u]),d.push(c[u+1]);return[l,d]}});const vt=(0,h.op)({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=(0,u._1)(e,"logits","multinomial"),s=r.size,o=r.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(s,"."));if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(o));n=n||Math.random();const i={logits:1===o?(0,T.X)(r,[1,-1]):r},d={numSamples:t,seed:n,normalized:a},h=c.BV.runKernel(l.NZg,i,d);return 1===o?(0,T.X)(h,[h.size]):h}});var xt=n(4362),wt=n(5549),kt=n(4326),St=n(773);const It=(0,h.op)({outerProduct_:function(e,t){const n=(0,u._1)(e,"v1","outerProduct"),a=(0,u._1)(t,"v2","outerProduct");d.hu(1===n.rank&&1===a.rank,(()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=(0,T.X)(n,[-1,1]),s=(0,T.X)(a,[1,-1]);return(0,_.O)(r,s)}});var Nt=n(1970);const Tt=(0,h.op)({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,Nt.v)(e,[t],n)}});const Ct=(0,h.op)({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.v)(e,t,n)}});const Et=(0,h.op)({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.v)(e,t,n)}});const _t=(0,h.op)({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.v)(e,t,n)}});var At=n(7226),Rt=n(4334),Ft=n(6859),Dt=n(4600),Ot=n(7722);const Mt=(0,h.op)({raggedGather_:function(e,t,n,a){const r={paramsNestedSplits:e.map(((e,t)=>(0,u._1)(e,"tensors".concat(t),"raggedGather","int32"))),paramsDenseValues:(0,u._1)(t,"paramsDenseValues","raggedGather"),indices:(0,u._1)(n,"indices","raggedGather","int32")},s={outputRaggedRank:a},o=c.BV.runKernel(l.dDz,r,s);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const Lt=(0,h.op)({raggedRange_:function(e,t,n){const a=(0,u._1)(e,"starts","raggedRange"),r={starts:a,limits:(0,u._1)(t,"limits","raggedRange",a.dtype),deltas:(0,u._1)(n,"deltas","raggedRange",a.dtype)},s=c.BV.runKernel(l.CQl,r);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});const zt=(0,h.op)({raggedTensorToTensor_:function(e,t,n,a,r){const s=(0,u._1)(e,"shape","raggedTensorToTensor","int32"),o=(0,u._1)(t,"values","raggedTensorToTensor"),i={shape:s,values:o,defaultValue:(0,u._1)(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:a.map(((e,t)=>(0,u._1)(e,"tensors".concat(t),"raggedTensorToTensor","int32")))},d={rowPartitionTypes:r};return c.BV.runKernel(l.BiW,i,d)}});const Bt=(0,h.op)({rand_:function(e,t,n){(0,d.Mu)(e);const a=(0,d.NA)(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));r=new Uint8Array(a)}for(let s=0;s<a;s++)r[s]=t();return c.BV.makeTensor(r,e,n)}});var Pt=n(6699);class Vt{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=Pt.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*o,t=this.mean+this.stdDev*r*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Wt{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=Pt.alea(r.toString()),this.randn=new Vt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Ut{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=Pt.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Gt=(0,h.op)({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if((0,d.Mu)(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const s=new Wt(t,n,a,r),o=(0,j.f)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const jt=(0,h.op)({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if((0,d.Mu)(e),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const s=new Vt(t,n,a,!1,r),o=(0,j.f)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Ht=(0,h.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return jt(e,0,1,t,n)}});const qt=(0,h.op)({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;(0,d.Mu)(e);const s=(0,j.f)(e,a),o=new Ut(t,n,null,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const Xt=(0,h.op)({randomUniformInt_:function(e,t,n,a){return qt(e,t,n,"int32",a)}});function Kt(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return c.BV.runKernel(l.e6w,{},r)}var Yt=n(6972),Qt=n(2209),Zt=n(7539),Jt=n(5900),$t=n(4933);const en=(0,h.op)({reverse1d_:function(e){const t=(0,u._1)(e,"x","reverse");return d.hu(1===t.rank,(()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,"."))),(0,$t.G)(t,0)}});const tn=(0,h.op)({reverse2d_:function(e,t){const n=(0,u._1)(e,"x","reverse");return d.hu(2===n.rank,(()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,"."))),(0,$t.G)(n,t)}});const nn=(0,h.op)({reverse3d_:function(e,t){const n=(0,u._1)(e,"x","reverse");return d.hu(3===n.rank,(()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,"."))),(0,$t.G)(n,t)}});const an=(0,h.op)({reverse4d_:function(e,t){const n=(0,u._1)(e,"x","reverse");return d.hu(4===n.rank,(()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,"."))),(0,$t.G)(n,t)}});var rn=n(766),sn=n(5115),on=n(7067),cn=n(413),ln=n(119);const un=async function(e,t){const n=(0,u._1)(e,"x","setdiff1d"),a=(0,u._1)(t,"y","setdiff1d");d.hu(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),d.hu(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),d.hu(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const r=await n.data(),s=await a.data(),o=new Set(s);let i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;const c=new ct.YD([i],n.dtype),l=new ct.YD([i],"int32");for(let u=0,d=0;u<r.length;u++)o.has(r[u])||(c.values[d]=r[u],l.values[d]=u,d++);return[c.toTensor(),l.toTensor()]};var dn=n(2070),hn=n(7254),pn=n(7657);const fn=(0,h.op)({slice1d_:function(e,t,n){const a=(0,u._1)(e,"x","slice1d");return d.hu(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.t)(a,[t],[n])}});const mn=(0,h.op)({slice2d_:function(e,t,n){const a=(0,u._1)(e,"x","slice2d");return d.hu(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.t)(a,t,n)}});const gn=(0,h.op)({slice3d_:function(e,t,n){const a=(0,u._1)(e,"x","slice3d");return d.hu(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.t)(a,t,n)}});const yn=(0,h.op)({slice4d_:function(e,t,n){const a=(0,u._1)(e,"x","slice4d");return d.hu(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.t)(a,t,n)}});var bn=n(4910),vn=n(4626),xn=n(5696),wn=n(7635),kn=n(530),Sn=n(774),In=n(4617),Nn=n(2588),Tn=n(6902),Cn=n(7993),En=n(3931),_n=n(8306),An=n(4031),Rn=n(9017),Fn=n(227),Dn=n(6999),On=n(2442),Mn=n(7960);function Ln(e,t){(0,d.Cq)(e);const n=(0,u.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,Mn.H)(e,null,n,t)}function zn(e,t,n){if((0,d.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=(0,u.C)(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Mn.H)(e,t,a,n)}var Bn=n(3123);function Pn(e,t,n){if((0,d.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=(0,u.C)(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,Mn.H)(e,t,a,n)}function Vn(e,t,n){if((0,d.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=(0,u.C)(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,Mn.H)(e,t,a,n)}function Wn(e,t,n){if((0,d.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=(0,u.C)(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||a,(0,Mn.H)(e,t,a,n)}var Un=n(8604);const Gn=(0,h.op)({tensorScatterUpdate_:function(e,t,n){const a=(0,u._1)(e,"tensor","tensorScatterupdate"),r=(0,u._1)(t,"indices","tensorScatterupdate","int32"),s=(0,u._1)(n,"updates","tensorScatterupdate");if(Un.validateInput(s,r,a.shape),a.dtype!==s.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(s.dtype,"."));const o={tensor:a,indices:r,updates:s};return c.BV.runKernel(l.SIB,o,{})}});var jn=n(9085);const Hn=(0,h.op)({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if((0,d.Mu)(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new Vt(t,n,a,!0,r),o=(0,j.f)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});var qn=n(4860),Xn=n(6918),Kn=n(4566);function Yn(e,t){return $e(e,t,"right")}function Qn(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return c.BV.makeVariable(e,t,n,a)}var Zn=n(329),Jn=n(4189);const $n=async function(e){const t=(0,u._1)(e,"condition","whereAsync","bool"),n=await t.data(),a=(0,Jn.Z)(t.shape,n);return e!==t&&t.dispose(),a};var ea=n(7742),ta=n(7293);const na=async function(e,t,n){const a=(0,u._1)(e,"tensor","boolMask"),r=(0,u._1)(t,"mask","boolMask","bool"),s=null==n?0:n,o=r.rank,i=a.shape;d.hu(o>0,(()=>"mask cannot be scalar")),d.k5(i.slice(s,s+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let u=s;u<s+o;u++)c*=i[u];const l=i.slice(0,s).concat([c],i.slice(s+o)),h=(0,T.X)(a,l),p=(0,T.X)(r,[-1]),f=await $n(p),m=(0,En.L)(f,[1]),g=(0,Re.I)(h,m,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),m.dispose(),h.dispose(),p.dispose(),f.dispose(),g};var aa=n(1240),ra=n(6662),sa=n(9064);const oa=(0,h.op)({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=(0,u._1)(e,"v","movingAverage"),o=(0,u._1)(t,"x","movingAverage"),c=(0,u._1)(n,"decay","movingAverage");(0,sa.assertTypesMatch)(s,o),d.hu(d.cO(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=(0,on.i)(1),h=(0,gt.l)(l,c);let p=(0,A.d)((0,gt.l)(o,s),h);if(r){d.hu(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=(0,u._1)(a,"step","movingAverage");p=(0,fe.h)(p,(0,gt.l)(l,(0,Rt.s)(c,e)))}return(0,i.I)(s,p)}});const ia=(0,h.op)({scatterND_:function(e,t,n){(0,d.Mu)(n);const a=(0,u._1)(e,"indices","scatterND","int32"),r=(0,u._1)(t,"updates","scatterND");Un.validateInput(r,a,n);const s={indices:a,updates:r},o={shape:n};return c.BV.runKernel(l.xQA,s,o)}});const ca=(0,h.op)({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;(0,d.Mu)(n);const r=(0,u._1)(e,"sparseIndices","sparseToDense","int32"),s=(0,u._1)(t,"sparseValues","sparseToDense","string_or_numeric"),o=(0,u._1)(a,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(s,"."));const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==r))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(r,"]"));if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,o);const i={sparseIndices:r,sparseValues:s,defaultValue:o},h={outputShape:n};return c.BV.runKernel(l.D2d,i,h)}});const la=(0,h.op)({gatherND_:function(e,t){const n=(0,u._1)(t,"indices","gatherND","int32"),a={params:(0,u._1)(e,"x","gatherND","string_or_numeric"),indices:n};return c.BV.runKernel(l.q1x,a)}});const ua=(0,h.op)({dropout_:function(e,t,n,a){const r=(0,u._1)(e,"x","dropout");if(d.hu("float32"===r.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead."))),d.hu(t>=0&&t<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(t,"."))),0===t)return e instanceof ct.es?r.clone():r;const s=function(e,t){if(null==t)return e.shape.slice();if(d.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),o=1-t,c=(0,fe.h)((0,_e.G)((0,i.I)(qt(s,0,1,"float32",a),o)),o);return(0,A.d)(r,c)}});function da(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ha(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(o)}return Ln(r,"float32")}const pa=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=(0,u._1)(e,"predictions","inTopK"),r=(0,u._1)(t,"targets","inTopK");(0,d.hu)(a.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank))),(0,d.hu)(a.rank-1===r.rank,(()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(r.rank))),(0,d.k5)(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=a.shape[a.shape.length-1];(0,d.hu)(n>0&&n<=s,(()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(s,"), but got ").concat(n)));const o=await a.data(),i=await r.data(),[c,l]=[o.length/s,s],h=(0,d.WP)("bool",c);for(let u=0;u<c;u++){const e=u*l,t=o.subarray(e,e+l),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),h[u]=0;for(let r=0;r<n;r++)if(a[r].index===i[u]){h[u]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),(0,On.X)(h,r.shape,"bool")};var fa=n(6450),ma=n(5774),ga=n(8744),ya=n(1045),ba=n(5171);const va=(0,h.op)({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:h,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(f=f||"linear",!1===(0,ba.uy)(c.BV.state.gradientDepth,f)){d.hu("NHWC"===s,(()=>"Error in fused conv2d: got dataFormat of ".concat(s," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let e=(0,ee.T)(t,n,a,r,s,o,h);return null!=p&&(e=(0,i.I)(e,p)),(0,ba.QH)(e,f,m,g)}const y=(0,u._1)(t,"x","conv2d","float32"),b=(0,u._1)(n,"filter","conv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,T.X)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.hu(4===v.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(v.rank,"."))),d.hu(4===b.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(b.rank,"."))),N.m("fused conv2d",r,h);const w="NHWC"===s?v.shape[3]:v.shape[1];d.hu(b.shape[2]===w,(()=>"Error in conv2d: depth of input (".concat(w,") must match ")+"input depth for filter ".concat(b.shape[2],"."))),d.hu(N.jT(a,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'")));const k=N.Ix(v.shape,b.shape,a,o,r,h);let S,I;if(null!=p&&(S=(0,u._1)(p,"bias","fused conv2d"),[S]=(0,sa.makeTypesMatch)(S,y),"NHWC"===s?ma.assertAndGetBroadcastShape(k.outShape,S.shape):(d.hu(S.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(S.shape.length,"."))),d.hu(0===S.shape.length||S.shape[0]===k.outChannels||1===S.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(S.shape,") is not ")+"compatible with the number of output channels "+"(".concat(k.outChannels,")"))))),null!=m){const e=m.shape;if(d.hu(e.length<=1||3===e.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,"."))),1===e.length)d.hu(1===e[0]||e[0]===k.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(k.outChannels,").")));else if(3===e.length)try{ma.assertAndGetBroadcastShape(e,k.outShape)}catch(A){const t="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(k.outShape,").");throw Error(t)}I=(0,u._1)(m,"prelu weights","fused conv2d")}const C=(e,t)=>{d.hu("NHWC"===s,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(s," but only NHWC is currently supported.")));const[n,i,c,l]=t,u=(0,ba.Fr)(e,c,f);d.hu(N.I0(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const h=[(0,ya._)(i.shape,u,n,a,r),(0,ga.p)(i,u,n.shape,a,r)];if(null!=l){const e=(0,ba.pf)(l,u);h.push(e)}return h},E={x:v,filter:b,bias:S,preluActivationWeights:I},_={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:h,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,fa.cb)(((e,t,n)=>{let a=c.BV.runKernel(l._V0,E,_);return n([t,e,a]),x&&(a=(0,T.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:C}}));return e(v,b)}{const e=(0,fa.cb)(((e,t,n,a)=>{let r=c.BV.runKernel(l._V0,E,_);return a([t,e,r,n]),x&&(r=(0,T.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:C}}));return e(v,b,S)}}});var xa=n(288),wa=n(6939);const ka=(0,h.op)({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:h,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(!1===(0,ba.uy)(c.BV.state.gradientDepth,f)){let e=(0,de.B)(t,n,a,r,s,o,h);return null!=p&&(e=(0,i.I)(e,p)),(0,ba.QH)(e,f,m,g)}const y=(0,u._1)(t,"x","depthwiseConv2d","float32"),b=(0,u._1)(n,"filter","depthwiseConv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,T.X)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.hu(4===v.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(v.rank,"."))),d.hu(4===b.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(b.rank,"."))),d.hu(v.shape[3]===b.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(v.shape[3],") must match the inChannels dimension in ")+"filter ".concat(b.shape[2],"."))),null==o&&(o=[1,1]),d.hu(N.jT(a,o),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(o,"'"))),N.m("fused depthwiseConv2d",r,h);const w=N.Ix(v.shape,b.shape,a,o,r,h,!0);let k,S;null!=p&&(k=(0,u._1)(p,"bias","fused conv2d"),[k]=(0,sa.makeTypesMatch)(k,y),ma.assertAndGetBroadcastShape(w.outShape,k.shape)),null!=m&&(S=(0,u._1)(m,"prelu weights","fused depthwiseConv2d"));const I=(e,t)=>{d.hu(N.I0(o),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'")));const[n,s,i,c]=t,l=(0,ba.Fr)(e,i,f),u=(0,wa.v)(s.shape,l,n,a,r,o,h),p=(0,xa.z)(s,l,n.shape,a,r,o,h);if(null!=c){return[u,p,(0,ba.pf)(k,l)]}return[u,p]},C={x:v,filter:b,bias:k,preluActivationWeights:S},E={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:h,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,fa.cb)(((e,t,n)=>{let a=c.BV.runKernel(l.luS,C,E);return n([t,e,a]),x&&(a=(0,T.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:I}}));return e(v,b)}{const e=(0,fa.cb)(((e,t,n,a)=>{let r=c.BV.runKernel(l.luS,C,E);return a([t,e,r,n]),x&&(r=(0,T.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:I}}));return e(v,b,k)}}});const Sa=(0,h.op)({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:h,leakyreluAlpha:p=.2}=e;if(!1===(0,ba.uy)(c.BV.state.gradientDepth,o)){let e=(0,_.O)(t,n,a,r);return null!=s&&(e=(0,i.I)(e,s)),(0,ba.QH)(e,o,h,p)}let f=(0,u._1)(t,"a","fused matMul"),m=(0,u._1)(n,"b","fused matMul");[f,m]=(0,sa.makeTypesMatch)(f,m);const g=a?f.shape[f.rank-2]:f.shape[f.rank-1],y=r?m.shape[m.rank-1]:m.shape[m.rank-2],b=a?f.shape[f.rank-1]:f.shape[f.rank-2],v=r?m.shape[m.rank-2]:m.shape[m.rank-1],x=f.shape.slice(0,-2),w=m.shape.slice(0,-2),k=d.NA(x),S=d.NA(w);d.hu(g===y,(()=>"Error in fused matMul: inner shapes (".concat(g,") and (")+"".concat(y,") of Tensors with shapes ").concat(f.shape," and ")+"".concat(m.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const I=ma.assertAndGetBroadcastShape(f.shape.slice(0,-2),m.shape.slice(0,-2)).concat([b,v]),N=a?(0,T.X)(f,[k,g,b]):(0,T.X)(f,[k,b,g]),C=r?(0,T.X)(m,[S,v,y]):(0,T.X)(m,[S,y,v]);let E,A;null!=s&&(E=(0,u._1)(s,"bias","fused matMul"),[E]=(0,sa.makeTypesMatch)(E,f),ma.assertAndGetBroadcastShape(I,E.shape)),null!=h&&(A=(0,u._1)(h,"prelu weights","fused matMul"));const R=(e,t)=>{const[n,i,c,l]=t,u=(0,ba.Fr)((0,T.X)(e,c.shape),c,o);let d,h;if(a||r?!a&&r?(d=(0,_.O)(u,i,!1,!1),h=(0,_.O)(u,n,!0,!1)):a&&!r?(d=(0,_.O)(i,u,!1,!0),h=(0,_.O)(n,u,!1,!1)):(d=(0,_.O)(i,u,!0,!0),h=(0,_.O)(u,n,!0,!0)):(d=(0,_.O)(u,i,!1,!0),h=(0,_.O)(n,u,!0,!1)),null!=s){return[d,h,(0,ba.pf)(l,u)]}return[d,h]},F={a:N,b:C,bias:E,preluActivationWeights:A},D={transposeA:a,transposeB:r,activation:o,leakyreluAlpha:p};if(null==s){const e=(0,fa.cb)(((e,t,n)=>{const a=c.BV.runKernel(l.usg,F,D);return n([e,t,a]),{value:(0,T.X)(a,I),gradFunc:R}}));return e(N,C)}{const e=(0,fa.cb)(((e,t,n,a)=>{const r=c.BV.runKernel(l.usg,F,D);return a([e,t,r,n]),{value:(0,T.X)(r,I),gradFunc:R}}));return e(N,C,E)}}});const Ia=(0,h.op)({hammingWindow_:function(e){return ha(e,.54,.46)}});const Na=(0,h.op)({hannWindow_:function(e){return ha(e,.5,.5)}});const Ta=(0,h.op)({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const o=[];for(;s+t<=e.size;)o.push((0,F.t)(e,s,t)),s+=n;if(a)for(;s<e.size;){const a=s+t-e.size,i=(0,E.z)([(0,F.t)(e,s,t-a),(0,Ee.h)([a],r)]);o.push(i),s+=n}return 0===o.length?zn([],[0,t]):(0,T.X)((0,E.z)(o),[o.length,t])}});const Ca=(0,h.op)({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Na;null==a&&(a=da(t));const s=Ta(e,t,n),o=(0,A.d)(s,r(t));return(0,In.Q)(o,a)}});const Ea=(0,h.op)({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u._1)(e,"image","cropAndResize"),i=(0,u._1)(t,"boxes","cropAndResize","float32"),h=(0,u._1)(n,"boxInd","cropAndResize","int32"),p=i.shape[0];d.hu(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),d.hu(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(p,",4] ")+"but had shape ".concat(i.shape,"."))),d.hu(1===h.rank&&h.shape[0]===p,(()=>"Error in cropAndResize: boxInd must be have size [".concat(p,"] ")+"but had shape ".concat(i.shape,"."))),d.hu(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),d.hu(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),d.hu("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const f={image:o,boxes:i,boxInd:h},m={method:r,extrapolationValue:s,cropSize:a};return c.BV.runKernel(l.VcC,f,m)}});const _a=(0,h.op)({flipLeftRight_:function(e){const t=(0,u._1)(e,"image","flipLeftRight","float32");d.hu(4===t.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,".")));const n={image:t};return c.BV.runKernel(l.Uyb,n,{})}});const Aa=(0,h.op)({grayscaleToRGB_:function(e){const t=(0,u._1)(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];d.hu(t.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),d.hu(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,(0,Te.G)(t,r)}});const Ra=(0,h.op)({rgbToGrayscale_:function(e){const t=(0,u._1)(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];d.hu(t.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),d.hu(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const r=t.dtype,s=(0,I.p)(t,"float32"),o=Ln([.2989,.587,.114]);let i;switch(t.rank){case 2:i=ye("ij,j->i",s,o);break;case 3:i=ye("ijk,k->ij",s,o);break;case 4:i=ye("ijkl,l->ijk",s,o);break;case 5:i=ye("ijklm,m->ijkl",s,o);break;case 6:i=ye("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return i=(0,Ie.d)(i,-1),(0,I.p)(i,r)}});const Fa=(0,h.op)({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=(0,u._1)(e,"image","rotateWithOffset","float32");d.hu(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const s={image:r},o={radians:t,fillValue:n,center:a};return c.BV.runKernel(l.b9H,s,o)}});function Da(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),d.hu(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),d.hu(2===e.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'"))),d.hu(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1]))),d.hu(1===t.rank,(()=>"scores must be a 1D tensor")),d.hu(t.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(t.shape[0]))),d.hu(0<=s&&s<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const Oa=(0,h.op)({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=(0,u._1)(e,"boxes","nonMaxSuppression","float32"),o=(0,u._1)(t,"scores","nonMaxSuppression","float32"),i=Da(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const d={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return c.BV.runKernel(l.uv1,{boxes:s,scores:o},d)}});var Ma=n(745);const La=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=(0,u._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,u._1)(t,"scores","nonMaxSuppressionAsync"),i=Da(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([s.data(),o.data()]),l=c[0],d=c[1],{selectedIndices:h}=(0,Ma.GP)(l,d,n,a,r);return s!==e&&s.dispose(),o!==t&&o.dispose(),Ln(h,"int32")};const za=(0,h.op)({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u._1)(e,"boxes","nonMaxSuppression"),i=(0,u._1)(t,"scores","nonMaxSuppression"),d=Da(o,i,n,a,r,s);n=d.maxOutputSize,a=d.iouThreshold,r=d.scoreThreshold,s=d.softNmsSigma;const h={boxes:o,scores:i},p={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},f=c.BV.runKernel(l.W0H,h,p);return{selectedIndices:f[0],selectedScores:f[1]}}});const Ba=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,u._1)(t,"scores","nonMaxSuppressionAsync"),c=Da(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),d=l[0],h=l[1],{selectedIndices:p,selectedScores:f}=(0,Ma.pA)(d,h,n,a,r,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Ln(p,"int32"),selectedScores:Ln(f)}};const Pa=(0,h.op)({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,u._1)(e,"boxes","nonMaxSuppression"),i=(0,u._1)(t,"scores","nonMaxSuppression"),d=Da(o,i,n,a,r,null),h={boxes:o,scores:i},p={maxOutputSize:d.maxOutputSize,iouThreshold:d.iouThreshold,scoreThreshold:d.scoreThreshold,padToMaxOutputSize:s},f=c.BV.runKernel(l.cye,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}});const Va=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,u._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,u._1)(t,"scores","nonMaxSuppressionAsync"),c=Da(o,i,n,a,r,null),l=c.maxOutputSize,d=c.iouThreshold,h=c.scoreThreshold,[p,f]=await Promise.all([o.data(),i.data()]),{selectedIndices:m,validOutputs:g}=(0,Ma.qP)(p,f,l,d,h,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Ln(m,"int32"),validOutputs:(0,on.i)(g,"int32")}};var Wa=n(464),Ua=n(8600);const Ga=(0,h.op)({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=(0,u._1)(e,"image","threshold"),s=r.shape[0]*r.shape[1];let o,c,l,h,p=(0,A.d)(Ln([a]),255);if(d.hu(3===r.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(r.rank,"."))),d.hu(3===r.shape[2]||1===r.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(r.shape[2],"."))),d.hu("int32"===r.dtype||"float32"===r.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(r.dtype,"."))),d.hu("otsu"===t||"binary"===t,(()=>"Method must be binary or otsu, but was ".concat(t))),3===r.shape[2]){[o,c,l]=(0,Nn.V)(r,[1,1,1],-1);const e=(0,A.d)(o,.2989),t=(0,A.d)(c,.587),n=(0,A.d)(l,.114);h=(0,i.I)((0,i.I)(e,t),n)}else h=e;if("otsu"===t){p=function(e,t){let n,a,r,s,o,c,l=Ln([-1]),u=Ln([0]),d=Ln([0]);for(let h=0;h<e.size-1;h++){n=(0,F.t)(e,0,h+1),a=(0,F.t)(e,h+1),o=(0,fe.h)((0,Fn.S)(n),t),c=(0,fe.h)((0,Fn.S)(a),t);const p=(0,Fn.S)((0,A.d)(n,Kt(0,n.size)));r=(0,fe.h)(p,(0,Fn.S)(n));const f=(0,Ee.h)(a.shape,n.size),m=(0,i.I)(Kt(0,a.size),f),g=(0,A.d)(a,m);s=(0,fe.h)((0,Fn.S)(g),(0,Fn.S)(a));const y=(0,gt.l)(r,s),b=(0,gt.l)(r,s),v=(0,A.d)(o,c);d=(0,A.d)((0,A.d)(v,y),b);const x=(0,Fe.p)(d,u);u=(0,Zn.a)(x,d,u),l=(0,Zn.a)(x,Ln([h]),l)}return l}(V((0,I.p)((0,rn.N)(h),"int32"),(0,On.X)([]),256),s)}const f=n?(0,Ve.z)(h,p):(0,Fe.p)(h,p);return(0,I.p)((0,A.d)(f,255),"int32")}});const ja=(0,h.op)({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const o=(0,u._1)(e,"image","transform","float32"),i=(0,u._1)(t,"transforms","transform","float32");d.hu(4===o.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),d.hu(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),d.hu(null==s||2===s.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(s,".")));const h={image:o,transforms:i},p={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return c.BV.runKernel(l.wx7,h,p)}});const Ha=(0,h.op)({bandPart_:function(e,t,n){const a=(0,u._1)(e,"a","bandPart");(0,d.hu)(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[s,o]=a.shape.slice(-2);let i,c;"number"===typeof t?((0,d.hu)(t%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(t,"."))),(0,d.hu)(t<=s,(()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(s,")."))),i=(0,u._1)(t<0?s:t,"numLower","bandPart")):((0,d.hu)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=(0,Zn.a)((0,Pe.d)(t,0),s,(0,dt.L)(t,s))),"number"===typeof n?((0,d.hu)(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),(0,d.hu)(n<=o,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."))),c=(0,u._1)(n<0?o:n,"numUpper","bandPart")):((0,d.hu)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=(0,Zn.a)((0,Pe.d)(n,0),o,(0,dt.L)(n,o)));const l=(0,T.X)(Kt(0,s,1,"int32"),[-1,1]),h=Kt(0,o,1,"int32"),p=(0,gt.l)(l,h),f=(0,Ke.H)((0,Ve.z)(p,i),(0,De.b)(p,(0,xt.W)(c))),m=(0,ea.l)([s,o],a.dtype);return(0,T.X)((0,_n.k)((0,Kn.H)((0,T.X)(a,[-1,s,o])).map((e=>(0,Zn.a)(f,e,m)))),r)}});const qa=(0,h.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,d.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,d.hu)(e[t].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")")))}else t=!0,e=(0,Nn.V)(e,e.shape[0],0).map((e=>(0,En.L)(e,[0])));(0,d.hu)(e.length<=e[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],").")));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(c.BV.tidy((()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=(0,A.d)((0,Fn.S)((0,A.d)(n[t],e)),n[t]);e=(0,gt.l)(e,a)}return(0,fe.h)(e,(0,ra.K)(e,"euclidean"))})));return t?(0,_n.k)(n,0):n}});var Xa=n(5875);function Ka(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return c.BV.tidy((()=>{(0,d.hu)(2===e.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor.")));const n=e.shape[0],a=e.shape[1];let r=Ce(n),s=(0,X.d)(e);const o=zn([[1]],[1,1]);let i=(0,X.d)(o);const l=n>=a?a:n;for(let e=0;e<l;++e){const t=s,l=i,u=r;[i,s,r]=c.BV.tidy((()=>{const t=(0,F.t)(s,[e,e],[n-e,1]),c=(0,ra.K)(t),l=(0,F.t)(s,[e,e],[1,1]),u=(0,Zn.a)((0,Fe.p)(l,0),zn([[-1]]),zn([[1]])),d=(0,gt.l)(l,(0,A.d)(u,c)),h=(0,fe.h)(t,d);i=1===h.shape[0]?(0,X.d)(o):(0,E.z)([o,(0,F.t)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=(0,xt.W)((0,fe.h)((0,_.O)(u,d),c)),f=(0,F.t)(s,[e,0],[n-e,a]),m=(0,A.d)(p,i),g=(0,aa.p)(i);if(0===e)s=(0,gt.l)(f,(0,_.O)(m,(0,_.O)(g,f)));else{const t=(0,gt.l)(f,(0,_.O)(m,(0,_.O)(g,f)));s=(0,E.z)([(0,F.t)(s,[0,0],[e,a]),t],0)}const y=(0,aa.p)(m),b=(0,F.t)(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=(0,gt.l)(b,(0,_.O)((0,_.O)(b,i),y));else{const t=(0,gt.l)(b,(0,_.O)((0,_.O)(b,i),y));r=(0,E.z)([(0,F.t)(r,[0,0],[n,e]),t],1)}return[i,s,r]})),(0,Xa.B9)([t,l,u])}return!t&&n>a&&(r=(0,F.t)(r,[0,0],[n,a]),s=(0,F.t)(s,[0,0],[a,a])),[r,s]}))}const Ya=(0,h.op)({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if((0,d.hu)(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank))),2===e.rank)return Ka(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=(0,Kn.H)((0,T.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach((e=>{const[n,a]=Ka(e,t);r.push(n),s.push(a)}));return[(0,T.X)((0,_n.k)(r,0),e.shape),(0,T.X)((0,_n.k)(s,0),e.shape)]}}});var Qa=n(7627);const Za=(0,h.op)({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Qa.I.SUM_BY_NONZERO_WEIGHTS;const a=(0,u._1)(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=(0,u._1)(t,"weights","computeWeightedLoss"));const s=null==r?a:(0,A.d)(a,r);if(n===Qa.I.NONE)return s;if(n===Qa.I.SUM)return(0,Fn.S)(s);if(n===Qa.I.MEAN){if(null==r)return(0,ot.J)(s);{const e=a.size/r.size,t=(0,fe.h)((0,Fn.S)(s),(0,Fn.S)(r));return e>1?(0,fe.h)(t,(0,on.i)(e)):t}}if(n===Qa.I.SUM_BY_NONZERO_WEIGHTS){if(null==r)return(0,fe.h)((0,Fn.S)(s),(0,on.i)(a.size));{const e=(0,A.d)(r,(0,it.i)(a.shape)),t=(0,I.p)((0,Fn.S)((0,wt.Q)(e,(0,on.i)(0))),"float32");return(0,fe.h)((0,Fn.S)(s),t)}}throw Error("Unknown reduction: ".concat(n))}});const Ja=(0,h.op)({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Qa.I.SUM_BY_NONZERO_WEIGHTS;const s=(0,u._1)(e,"labels","absoluteDifference"),o=(0,u._1)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=(0,u._1)(n,"weights","absoluteDifference")),(0,d.k5)(s.shape,o.shape,"Error in absoluteDifference: ");const c=(0,r.W)((0,gt.l)(s,o));return Za(c,i,a)}});const $a=(0,h.op)({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Qa.I.SUM_BY_NONZERO_WEIGHTS;const s=(0,u._1)(e,"labels","cosineDistance"),o=(0,u._1)(t,"predictions","cosineDistance");let i=null;null!=a&&(i=(0,u._1)(a,"weights","cosineDistance")),(0,d.k5)(s.shape,o.shape,"Error in cosineDistance: ");const c=(0,on.i)(1),l=(0,gt.l)(c,(0,Fn.S)((0,A.d)(s,o),n,!0));return Za(l,i,r)}});const er=(0,h.op)({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Qa.I.SUM_BY_NONZERO_WEIGHTS,r=(0,u._1)(e,"labels","hingeLoss");const s=(0,u._1)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,u._1)(n,"weights","hingeLoss")),(0,d.k5)(r.shape,s.shape,"Error in hingeLoss: ");const i=(0,on.i)(1);r=(0,gt.l)((0,A.d)((0,on.i)(2),r),i);const c=(0,Zt.U)((0,gt.l)(i,(0,A.d)(r,s)));return Za(c,o,a)}});const tr=(0,h.op)({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Qa.I.SUM_BY_NONZERO_WEIGHTS;const o=(0,u._1)(e,"labels","huberLoss"),c=(0,u._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,u._1)(n,"weights","huberLoss")),(0,d.k5)(o.shape,c.shape,"Error in huberLoss: ");const h=(0,on.i)(a),p=(0,r.W)((0,gt.l)(c,o)),f=(0,dt.L)(p,h),m=(0,gt.l)(p,f),g=(0,i.I)((0,A.d)((0,on.i)(.5),(0,mt.h)(f)),(0,A.d)(h,m));return Za(g,l,s)}});const nr=(0,h.op)({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Qa.I.SUM_BY_NONZERO_WEIGHTS;const s=(0,u._1)(e,"labels","logLoss"),o=(0,u._1)(t,"predictions","logLoss");let c=null;null!=n&&(c=(0,u._1)(n,"weights","logLoss")),(0,d.k5)(s.shape,o.shape,"Error in logLoss: ");const l=(0,on.i)(1),h=(0,on.i)(a),p=(0,xt.W)((0,A.d)(s,(0,Ge.c)((0,i.I)(o,h)))),f=(0,A.d)((0,gt.l)(l,s),(0,Ge.c)((0,i.I)((0,gt.l)(l,o),h))),m=(0,gt.l)(p,f);return Za(m,c,r)}});const ar=(0,h.op)({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Qa.I.SUM_BY_NONZERO_WEIGHTS;const r=(0,u._1)(e,"labels","meanSquaredError"),s=(0,u._1)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,u._1)(n,"weights","meanSquaredError")),(0,d.k5)(r.shape,s.shape,"Error in meanSquaredError: ");const i=(0,Cn.$)(r,s);return Za(i,o,a)}});const rr=(0,h.op)({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Qa.I.SUM_BY_NONZERO_WEIGHTS,o=(0,u._1)(e,"multiClassLabels","sigmoidCrossEntropy");const c=(0,u._1)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,u._1)(n,"weights","sigmoidCrossEntropy")),(0,d.k5)(o.shape,c.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,on.i)(a),t=(0,on.i)(1),n=(0,on.i)(.5);o=(0,i.I)((0,A.d)(o,(0,gt.l)(t,e)),(0,A.d)(n,e))}const h=function(e,t){const n=(0,u._1)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,u._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,d.k5)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,Zt.U)(a),o=(0,A.d)(a,n),c=(0,je.K)((0,Se.Q)((0,xt.W)((0,r.W)(a))));return(0,i.I)((0,gt.l)(s,o),c)}(o,c);return Za(h,l,s)}});const sr=(0,h.op)({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Qa.I.SUM_BY_NONZERO_WEIGHTS,s=(0,u._1)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,u._1)(t,"logits","softmaxCrossEntropy");let c=null;if(null!=n&&(c=(0,u._1)(n,"weights","softmaxCrossEntropy")),(0,d.k5)(s.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const e=(0,on.i)(a),t=(0,on.i)(1),n=(0,on.i)(s.shape[1]);s=(0,i.I)((0,A.d)(s,(0,gt.l)(t,e)),(0,fe.h)(e,n))}const l=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const a=(0,fa.cb)(((e,t,a)=>{const r=(0,Xe.l)(t,[n],!0),s=(0,gt.l)((0,I.p)(t,"float32"),r);a([e,s]);const o=(0,xt.W)((0,A.d)(s,e));return{value:(0,Fn.S)(o,[n]),gradFunc:(e,t)=>{const[a,r]=t,s=(0,ft.rv)(e.shape,[n]);return[(0,A.d)((0,T.X)(e,s),(0,gt.l)((0,I.p)(a,"float32"),(0,Se.Q)(r))),(0,A.d)((0,T.X)(e,s),(0,gt.l)((0,Se.Q)(r),(0,I.p)(a,"float32")))]}}}));return a(e,t)}(s,o);return Za(l,c,r)}});const or=(0,h.op)({sparseFillEmptyRows_:function(e,t,n,a){const r=(0,u._1)(e,"indices","sparseFillEmptyRows","int32"),s=(0,u._1)(t,"values","sparseFillEmptyRows"),o=(0,u._1)(n,"denseShape","sparseFillEmptyRows","int32"),i=(0,u._1)(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape ".concat(s.shape));if(1!==o.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(o.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const d={indices:r,values:s,denseShape:o,defaultValue:i},h=c.BV.runKernel(l.O3z,d);return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}});const ir=(0,h.op)({sparseReshape_:function(e,t,n){const a=(0,u._1)(e,"inputIndices","sparseReshape","int32"),r=(0,u._1)(t,"inputShape","sparseReshape","int32"),s=(0,u._1)(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==r.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(r.shape));if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(s.shape));const o={inputIndices:a,inputShape:r,newShape:s},i=c.BV.runKernel(l.nhH,o);return{outputIndices:i[0],outputShape:i[1]}}});const cr=(0,h.op)({sparseSegmentMean_:function(e,t,n){const a=(0,u._1)(e,"data","sparseSegmentMean"),r=(0,u._1)(t,"indices","sparseSegmentMean","int32"),s=(0,u._1)(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return c.BV.runKernel(l.w3H,o)}});const lr=(0,h.op)({sparseSegmentSum_:function(e,t,n){const a=(0,u._1)(e,"data","sparseSegmentSum"),r=(0,u._1)(t,"indices","sparseSegmentSum","int32"),s=(0,u._1)(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return c.BV.runKernel(l.ZjV,o)}});const ur=(0,h.op)({stringNGrams_:function(e,t,n,a,r,s,o,i){const d=(0,u._1)(e,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error("Data must be a vector, saw: ".concat(d.shape));const h=(0,u._1)(t,"dataSplits","stringNGrams");if("int32"!==h.dtype)throw new Error("Data splits must be of datatype int32");const p={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:o,preserveShortSequences:i},f={data:d,dataSplits:h},m=c.BV.runKernel(l._JP,f,p);return{nGrams:m[0],nGramsSplits:m[1]}}});const dr=(0,h.op)({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=(0,u._1)(e,"input","stringSplit","string"),r=(0,u._1)(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==r.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(r.shape));const s={skipEmpty:n},o={input:a,delimiter:r},i=c.BV.runKernel(l.s1s,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});const hr=(0,h.op)({stringToHashBucketFast_:function(e,t){const n=(0,u._1)(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return c.BV.runKernel(l.XkS,r,a)}});const pr=(0,h.op)({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=(0,u._1)(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:a};return c.BV.runKernel(l.e0R,{x:r},s)}}),fr={fft:wn.k,ifft:kn.S,rfft:In.Q,irfft:Sn.w},mr={hammingWindow:Ia,hannWindow:Na,frame:Ta,stft:Ca},gr={flipLeftRight:_a,grayscaleToRGB:Aa,resizeNearestNeighbor:Ua.j,resizeBilinear:Wa.I,rgbToGrayscale:Ra,rotateWithOffset:Fa,cropAndResize:Ea,nonMaxSuppression:Oa,nonMaxSuppressionAsync:La,nonMaxSuppressionWithScore:za,nonMaxSuppressionWithScoreAsync:Ba,nonMaxSuppressionPadded:Pa,nonMaxSuppressionPaddedAsync:Va,threshold:Ga,transform:ja},yr={bandPart:Ha,gramSchmidt:qa,qr:Ya},br={absoluteDifference:Ja,computeWeightedLoss:Za,cosineDistance:$a,hingeLoss:er,huberLoss:tr,logLoss:nr,meanSquaredError:ar,sigmoidCrossEntropy:rr,softmaxCrossEntropy:sr},vr={sparseFillEmptyRows:or,sparseReshape:ir,sparseSegmentMean:cr,sparseSegmentSum:lr},xr={stringNGrams:ur,stringSplit:dr,stringToHashBucketFast:hr,staticRegexReplace:pr}},1970:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o=(0,s._1)(e,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},c={x:o};return a.BV.runKernel(r.lyA,c,i)}})},7226:(e,t,n)=>{"use strict";n.d(t,{d:()=>h});var a=n(8354),r=n(6147),s=n(9204),o=n(6994),i=n(9151),c=n(5777),l=n(8640),u=n(5561),d=n(5696);const h=(0,l.op)({pool_:function(e,t,n,l,h,p,f){null==h&&(h=[1,1]),null==p&&(p=1),0===l&&(l="valid");const m=(0,a._1)(e,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,u.X)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),r.hu(i.jT(p,h),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(p," and dilations '").concat(h,"'")));const b=i.Xw(g.shape,t,p,h,l),v=[b.dilationHeight,b.dilationWidth];let x;x="same"===l?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),a=n.map((e=>e-1)),r=a.map((e=>Math.floor(e/2))),s=a.map(((e,t)=>e-r[t]));return a.map(((e,t)=>[r[t],s[t]]))}([b.filterHeight,b.filterWidth],v):[[0,0],[0,0]];const w=1===v[0]&&1===v[1],[k,S]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=r.map(((e,t)=>e+o[t])),c=t.map(((e,t)=>[a[t],i[t]])),l=t.map(((e,t)=>[0,o[t]]));return[c,l]}([b.inHeight,b.inWidth],v,x),I=w?l:"valid",N=w?g:(0,d.f)(g,v,k),T=("avg"===n?()=>(0,s.w)(N,t,p,I,f):()=>(0,c._)(N,t,p,I,f))(),C=w?T:(0,o.E)(T,v,S);return y?(0,u.X)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},4334:(e,t,n)=>{"use strict";n.d(t,{s:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({pow_:function(e,t){let n=(0,o._1)(e,"base","pow"),i=(0,o._1)(t,"exp","pow");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(r.pe_,c)}})},6859:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({prelu_:function(e,t){const n={x:(0,s._1)(e,"x","prelu"),alpha:(0,s._1)(t,"alpha","prelu")};return a.BV.runKernel(r.o0g,n)}})},4600:(e,t,n)=>{"use strict";function a(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}n.d(t,{S:()=>a})},7722:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(9118);const i=(0,n(8640).op)({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,s._1)(e,"x","prod");"bool"===i.dtype&&(i=(0,o.p)(i,"int32"));const c={x:i},l={axis:t,keepDims:n};return a.BV.runKernel(r.DlI,c,l)}})},6972:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({real_:function(e){const t={input:(0,s._1)(e,"input","real")};return a.BV.runKernel(r.xJR,t)}})},2209:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({reciprocal_:function(e){const t={x:(0,s._1)(e,"x","reciprocal")};return a.BV.runKernel(r.$HU,t)}})},7539:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({relu_:function(e){const t={x:(0,s._1)(e,"x","relu")};return a.BV.runKernel(r.qkr,t)}})},5900:(e,t,n)=>{"use strict";n.d(t,{b:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({relu6_:function(e){const t={x:(0,s._1)(e,"x","relu6")};return a.BV.runKernel(r.SbG,t)}})},5561:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({reshape_:function(e,t){const n={x:(0,s._1)(e,"x","reshape","string_or_numeric")},o={shape:t};return a.BV.runKernel(r.HZH,n,o)}})},4933:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({reverse_:function(e,t){const n={x:(0,s._1)(e,"x","reverse")},o={dims:t};return a.BV.runKernel(r.mKl,n,o)}})},766:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({round_:function(e){const t={x:(0,s._1)(e,"x","round")};return a.BV.runKernel(r.e07,t)}})},5115:(e,t,n)=>{"use strict";n.d(t,{b:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({rsqrt_:function(e){const t={x:(0,s._1)(e,"x","rsqrt","float32")};return a.BV.runKernel(r.bV0,t)}})},7067:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var a=n(115),r=n(7960);function s(e,t){if(((0,a.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,a.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,r.H)(e,[],[],t)}},8604:(e,t,n)=>{"use strict";n.r(t),n.d(t,{calculateShapes:()=>o,validateInput:()=>s,validateUpdateShape:()=>r});var a=n(6147);function r(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(s+" update.rank < ".concat(r,". "));if(e.length<a+(n.rank-r))throw new Error(s+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != ".concat(r+e.length-a));for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(t.shape[o],")."));for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+a])throw new Error(s+" updates.shape[".concat(o+r,"] (").concat(n.shape[o+r],") != shape[").concat(o+r,"] (").concat(e[o+r],")"))}function s(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}r(n,t,e)}function o(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,o=n.length;let i=1;for(let a=s;a<o;++a)i*=n[a];const c=s<1?1:s;return{sliceRank:s,numUpdates:(0,a.NA)(t.shape)/c,sliceSize:i,strides:[...(0,a.e3)(n.slice(0,s)),1],outputSize:(0,a.NA)(n)}}},413:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({selu_:function(e){const t={x:(0,s._1)(e,"x","selu")};return a.BV.runKernel(r.oFR,t)}})},349:(e,t,n)=>{"use strict";n.d(t,{$:()=>r,y:()=>a});const a=1.7580993408473768,r=1.0507009873554805},119:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var a=n(8354),r=n(6147),s=n(3457),o=n(1147),i=n(8640),c=n(5561);const l=(0,i.op)({separableConv2d_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const h=(0,a._1)(e,"x","separableConv2d"),p=(0,a._1)(t,"depthwiseFilter","separableConv2d"),f=(0,a._1)(n,"pointwiseFilter","separableConv2d");let m=h,g=!1;if(3===h.rank&&(g=!0,m=(0,c.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");r.hu(4===m.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,"."))),r.hu(4===p.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(p.rank,"."))),r.hu(4===f.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(p.rank,"."))),r.hu(1===f.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(f.shape[0],"."))),r.hu(1===f.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(f.shape[1],".")));const y=p.shape[2],b=p.shape[3];r.hu(f.shape[2]===y*b,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(y*b,", ")+"but got ".concat(f.shape[2],".")));const v=(0,o.B)(m,p,i,l,d,u),x=(0,s.T)(v,f,1,"valid",d);return g?(0,c.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},7643:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({sigmoid_:function(e){const t={x:(0,s._1)(e,"x","sigmoid","float32")};return a.BV.runKernel(r.a5O,t)}})},2070:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({sign_:function(e){const t={x:(0,s._1)(e,"x","sign")};return a.BV.runKernel(r.i5y,t)}})},7254:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({sin_:function(e){const t={x:(0,s._1)(e,"x","sin","float32")};return a.BV.runKernel(r.RQH,t)}})},7657:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({sinh_:function(e){const t={x:(0,s._1)(e,"x","sinh")};return a.BV.runKernel(r.wYB,t)}})},9238:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({slice_:function(e,t,n){const o=(0,s._1)(e,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},c={begin:t,size:n};return a.BV.runKernel(r.p2w,i,c)}})},2875:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>o,computeFlatOffset:()=>v,computeOutShape:()=>c,getNormalizedAxes:()=>h,isSliceContinous:()=>b,maskToAxes:()=>i,parseSliceParams:()=>x,sliceInfo:()=>w,startForAxis:()=>g,startIndicesWithElidedDims:()=>p,stopForAxis:()=>y,stopIndicesWithElidedDims:()=>f,stridesForAxis:()=>m,stridesWithElidedDims:()=>l});var a=n(6147);const r=-2,s=-1;function o(e,t,n){const r=e.shape.length;a.hu(r===t.length,(()=>"Error in slice".concat(r,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(r,")."))),a.hu(r===n.length,(()=>"Error in slice".concat(r,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(r,").")));for(let s=0;s<r;++s)a.hu(t[s]+n[s]<=e.shape[s],(()=>"Error in slice".concat(r,"D: begin[").concat(s,"] + size[").concat(s,"] ")+"(".concat(t[s]+n[s],") would overflow input.shape[").concat(s,"] (").concat(e.shape[s],")")))}function i(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function c(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function l(e,t,n,a){const r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[t]=1:(r.splice(t,0,1),r.pop());return r}function u(e,t,n){return n<=e?n:n-(t-1)}function d(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function h(e,t,n,a,r,s,o,i,c){const u=e.length;let d=new Array(u),h=new Array(u),b=new Array(u);if(t.length&&n>0){const c=t[0],u=n+1;d=p(o,c,u,a,e),h=f(i,c,u,r,e),b=l(s,c,u,e)}else for(let l=0;l<u;l++)d[l]=g(o,a,s,e,l,c),h[l]=y(i,r,s,e,l,c),b[l]=m(s,l,c);return{begin:d,end:h,strides:b}}function p(e,t,n,a,r){const s=[...r],o=d(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const r=u(t,n,i);let o=a[r];e&1<<r&&(o=0),s[i]=o}return s}function f(e,t,n,r,s){const o=[...s],i=d(n,t);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const s=u(t,n,a);let i=r[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),o[a]=i}for(let c=0;c<o.length;c++){const e=s[c];o[c]<0&&(o[c]+=e),o[c]=a.uZ(0,o[c],s[c])}return o}function m(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function g(e,t,n,r,s,o){let i=t[s];const c=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=c>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=a.uZ(0,i,l-1),i}function y(e,t,n,r,s,o){let i=t[s];const c=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=c>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=c>0?a.uZ(0,i,l):a.uZ(-1,i,l-1),i}function b(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function v(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function x(e,t,n){let r;const s=e.shape.length;let o;return r="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{a.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map(((t,n)=>t>=0?t:(a.hu(-1===t,(()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,"."))),e.shape[n]-r[n]))),[r,o]}function w(e,t,n,a,o,i,c,l,u){let d;if(null==a?(d=new Array(t.length),d.fill(1)):d=a,null!=c&&0!==(c&c-1))throw new Error("Multiple ellipses in slice is not allowed.");let h=!1;const p={dims:d.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:d.slice(),beginMask:o,endMask:i,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:u};for(let r=0;r<p.dims;r++)h&&0!==(1<<r&l)&&p.numAddAxisAfterEllipsis++,1<<r&c&&(h=!0);h||(p.ellipsisMask|=1<<p.dims,p.dims++);const f={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(s),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(p,f);let m=!0,g=!0,y=!0;const b=[],v=[];for(let r=0;r<e.length;++r){if(0===f.strides[r])throw Error("strides[".concat(r,"] must be non-zero"));const t=!!(f.shrinkAxisMask&1<<r),n=e[r];if(-1===n){b.push(t?1:-1);continue}const a=[f.beginMask&1<<r,f.endMask&1<<r],s=[f.strides[r]>0?0:-1,f.strides[r]>0?n:n-1];if(t&&f.strides[r]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&1===f.strides[r];const o=!!(f.beginMask&1<<r&&f.endMask&1<<r);if(f.beginValid&&f.endValid){if(t){const e=f.begin[r]<0?n+f.begin[r]:f.begin[r];if(f.begin[r]=e,f.end[r]=f.begin[r]+1,e<0||e>=n)throw Error("slice index ".concat(f.begin[r]," of dimension ").concat(r," out of bounds."))}else f.begin[r]=k(f.begin[r],0,f.strides[r],n,a,s),f.end[r]=k(f.end[r],1,f.strides[r],n,a,s);const e=1===f.strides[r]&&0===f.begin[r]&&f.end[r]===n;m=m&&e,g=g&&(0===r&&1===f.strides[r]||e)}else m=m&&1===f.strides[r]&&o,g=g&&(0===r&&1===f.strides[r]||o);let i,c=!1;if(f.beginValid&&f.endValid?(i=f.end[r]-f.begin[r],c=!0):t?(i=1,c=!0):o&&n>=0&&(i=f.strides[r]<0?-n:n,c=!0),c){let e;e=0===i||i<0!==f.strides[r]<0?0:Math.trunc(i/f.strides[r])+(i%f.strides[r]!==0?1:0),b.push(e)}else b.push(-1)}for(let s=0;s<f.finalShapeGatherIndices.length;++s){const e=f.finalShapeGatherIndices[s];e>=0?v.push(b[e]):e===r&&v.push(1)}return{finalShapeSparse:v.filter(((e,t)=>f.finalShapeGatherIndices[t]!==r)),finalShape:v,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:f.begin,end:f.end,strides:f.strides}}function k(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{const t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}},4910:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,s._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const o={logits:n},i={dim:t};return a.BV.runKernel(r.Gcp,o,i)}})},4626:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({softplus_:function(e){const t={x:(0,s._1)(e,"x","softplus")};return a.BV.runKernel(r.MRv,t)}})},5696:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({spaceToBatchND_:function(e,t,n){const i=(0,s._1)(e,"x","spaceToBatchND");o.hu(i.rank>=1+t.length,(()=>"input rank ".concat(i.rank," should be > than [blockShape] ").concat(t.length))),o.hu(n.length===t.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length))),o.hu(i.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>"input spatial dimensions ".concat(i.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString())));const c={x:i},l={blockShape:t,paddings:n};return a.BV.runKernel(r.TQc,c,l)}})},7635:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var a=n(318),r=n(2145),s=n(6147);const o=(0,n(8640).op)({fft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return a.BV.runKernel(r.vwp,t)}})},530:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var a=n(318),r=n(2145),s=n(6147);const o=(0,n(8640).op)({ifft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return a.BV.runKernel(r.Qg5,t)}})},774:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var a=n(9253),r=n(4836),s=n(6996),o=n(651),i=n(8640),c=n(6972),l=n(5561),u=n(4933),d=n(7067),h=n(9238),p=n(530);const f=(0,i.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const a=(0,l.X)(e,[n,t]);i=(0,p.S)(a)}else{const f=[n,2*(t-1)],m=(0,l.X)((0,c.k)(e),[n,t]),g=(0,l.X)((0,s.a)(e),[n,t]),y=(0,u.G)((0,h.t)(m,[0,1],[n,t-2]),1),b=(0,o.d)((0,u.G)((0,h.t)(g,[0,1],[n,t-2]),1),(0,d.i)(-1)),v=(0,r.z)([m,y],1),x=(0,r.z)([g,b],1),w=(0,l.X)((0,a.P)(v,x),[f[0],f[1]]);i=(0,p.S)(w)}if(i=(0,c.k)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=(0,l.X)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},4617:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var a=n(6147),r=n(9253),s=n(4836),o=n(6996),i=n(8640),c=n(6972),l=n(5561),u=n(9238),d=n(2588),h=n(7742),p=n(7293),f=n(7635);const m=(0,i.op)({rfft_:function(e,t){(0,a.hu)("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(e.dtype)));let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const a=e.shape.map((e=>0)),r=e.shape.map((e=>e));r[e.shape.length-1]=t,m=(0,u.t)(e,a,r),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,m=(0,s.z)([e,(0,h.l)(a)],e.shape.length-1),n=t}else m=e;const g=(0,p.P)(m),y=(0,l.X)((0,r.P)(m,g),[i,n]),b=(0,f.k)(y),v=Math.floor(n/2)+1,x=(0,c.k)(b),w=(0,o.a)(b),k=(0,d.V)(x,[v,n-v],x.shape.length-1),S=(0,d.V)(w,[v,n-v],w.shape.length-1),I=m.shape.slice();return I[m.shape.length-1]=v,(0,l.X)((0,r.P)(k[0],S[0]),I)}})},2588:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o={x:(0,s._1)(e,"x","split")},i={numOrSizeSplits:t,axis:n};return a.BV.runKernel(r.L8s,o,i)}})},6902:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({sqrt_:function(e){const t={x:(0,s._1)(e,"x","sqrt","float32")};return a.BV.runKernel(r.FKq,t)}})},7391:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var a=n(318),r=n(8354);const s=(0,n(8640).op)({square_:function(e){const t=(0,r._1)(e,"x","square");return a.BV.runKernel("Square",{x:t},{})}})},7993:(e,t,n)=>{"use strict";n.d(t,{$:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({squaredDifference_:function(e,t){let n=(0,o._1)(e,"a","squaredDifference"),c=(0,o._1)(t,"b","squaredDifference");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(r._tC,l,{})}})},3931:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var a=n(8354),r=n(6147),s=n(8640),o=n(5561);const i=(0,s.op)({squeeze_:function(e,t){const n=(0,a._1)(e,"x","squeeze","string_or_numeric");return(0,o.X)(n,(0,r.bp)(n.shape,t).newShape)}})},8306:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.sI)(e,"tensors","stack","string_or_numeric");o.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const i=n,c={axis:t};return a.BV.runKernel(r.QiL,i,c)}})},4031:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s._1)(e,"x","step")},o={alpha:t};return a.BV.runKernel(r.h8e,n,o)}})},9017:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({stridedSlice_:function(e,t,n,o){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const h={x:(0,s._1)(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:o,beginMask:i,endMask:c,ellipsisMask:l,newAxisMask:u,shrinkAxisMask:d};return a.BV.runKernel(r.jQk,h,p)}})},4774:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({sub_:function(e,t){let n=(0,o._1)(e,"a","sub"),i=(0,o._1)(t,"b","sub");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(r.Tr8,c)}})},227:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(9118);const i=(0,n(8640).op)({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,s._1)(e,"x","sum");"bool"===i.dtype&&(i=(0,o.p)(i,"int32"));const c={x:i},l={axis:t,keepDims:n};return a.BV.runKernel(r.GBy,c,l)}})},6999:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({tan_:function(e){const t={x:(0,s._1)(e,"x","tan","float32")};return a.BV.runKernel(r.sEM,t)}})},1744:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({tanh_:function(e){const t={x:(0,s._1)(e,"x","tanh","float32")};return a.BV.runKernel(r.MIZ,t)}})},2442:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var a=n(8354),r=n(7960);function s(e,t,n){const s=(0,a.C)(e,n);return(0,r.H)(e,t,s,n)}},3123:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var a=n(8354),r=n(6147),s=n(7960);function o(e,t,n){if((0,r.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const o=(0,a.C)(e,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.H)(e,t,o,n)}},7960:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var a=n(318),r=n(3525),s=n(6147),o=n(115);function i(e,t,n,i){if(null==i)i=(0,s.D2)(e);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,r.$F)(e)||(0,r.Oq)(e)){if("float32"!==i&&"int32"!==i)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(i,"."));return a.BV.backend.createTensorFromGPUData(e,t||n,i)}if(!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,s.Mu)(t);const e=(0,s.NA)(t),a=(0,s.NA)(n);(0,s.hu)(e===a,(()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(a)));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==(0,s.NA)(t.slice(r));(0,s.hu)(n[r]===t[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). ")))}}return(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0),a.BV.makeTensor(e,t,i)}},2343:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({tile_:function(e,t){const n=(0,s._1)(e,"x","tile","string_or_numeric");o.hu(n.rank===t.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,".")));const i={x:n},c={reps:t};return a.BV.runKernel(r.n9L,i,c)}})},9085:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const o=(0,s._1)(e,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=o.shape[o.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>i)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(i,") ")+"but got ".concat(t));const c={x:o},l={k:t,sorted:n},[u,d]=a.BV.runKernel(r.cWu,c,l);return{values:u,indices:d}}})},1240:(e,t,n)=>{"use strict";n.d(t,{p:()=>p});var a=n(318),r=n(5875),s=n(2145),o=n(8354),i=n(6147),c=n(9253),l=n(6996),u=n(4362),d=n(8640),h=n(6972);const p=(0,d.op)({transpose_:function(e,t,n){const d=(0,o._1)(e,"x","transpose");if(null==t&&(t=d.shape.map(((e,t)=>t)).reverse()),i.hu(d.rank===t.length,(()=>"Error in transpose: rank of input ".concat(d.rank," ")+"must match length of perm ".concat(t,"."))),t.forEach((e=>{i.hu(e>=0&&e<d.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(d.rank-1)+" but got ".concat(t)))})),d.rank<=1)return d.clone();const p={x:d},f={perm:t};return"complex64"===d.dtype?(0,r.lu)((()=>{let e=(0,h.k)(d),t=(0,l.a)(d);return e=a.BV.runKernel(s.G3Y,{x:e},f),t=a.BV.runKernel(s.G3Y,{x:t},f),n&&(t=(0,u.W)(t)),(0,c.P)(e,t)})):a.BV.runKernel(s.G3Y,p,f)}})},4860:(e,t,n)=>{"use strict";n.d(t,{T:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s._1)(e,"x","unique","string_or_numeric");(0,o.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const i={x:n},c={axis:t},[l,u]=a.BV.runKernel(r.kpP,i,c);return{values:l,indices:u}}})},6918:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({unsortedSegmentSum_:function(e,t,n){const i=(0,s._1)(e,"x","unsortedSegmentSum"),c=(0,s._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,o.hu)((0,o.GN)(n),(()=>"numSegments must be of dtype int"));const l={x:i,segmentIds:c},u={numSegments:n};return a.BV.runKernel(r.Qvg,l,u)}})},4566:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s._1)(e,"x","unstack","string_or_numeric");o.hu(t>=-n.shape.length&&t<n.shape.length,(()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const i={value:n},c={axis:t};return a.BV.runKernel(r.ToN,i,c)}})},329:(e,t,n)=>{"use strict";n.d(t,{a:()=>c});var a=n(318),r=n(2145),s=n(8354),o=n(9742),i=n(5774);const c=(0,n(8640).op)({where_:function(e,t,n){const c=(0,s._1)(t,"a","where"),l=(0,s._1)(n,"b","where"),u=(0,s._1)(e,"condition","where","bool"),d=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(u.shape,c.shape),l.shape),h={condition:(0,o.U)(u,d),t:(0,o.U)(c,d),e:(0,o.U)(l,d)};return a.BV.runKernel(r.PhF,h)}})},7742:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var a=n(318),r=n(6147),s=n(9253);function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,r.Mu)(e),"complex64"===t){const t=o(e,"float32"),n=o(e,"float32");return(0,s.P)(t,n)}const n=(0,r.wT)((0,r.NA)(e),t);return a.BV.makeTensor(n,e,t)}},7293:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({zerosLike_:function(e){const t={x:(0,s._1)(e,"x","zerosLike")};return a.BV.runKernel(r.RuY,t)}})},1539:(e,t,n)=>{"use strict";function a(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{j:()=>a})},4376:(e,t,n)=>{"use strict";n.d(t,{es:()=>w,YD:()=>f,_w:()=>S,t3:()=>k,FZ:()=>x,Vp:()=>v,Vi:()=>b});var a=n(6581),r=n(6147);const s=20,o=3,i=7;function c(e,t,n,a){const s=(0,r.e3)(t),o=function(e,t,n,a){const s=(0,r.NA)(t),o=a[a.length-1],i=new Array(o).fill(0),c=t.length,u="complex64"===n?h(e):e;if(c>1)for(let r=0;r<s/o;r++){const e=r*o;for(let t=0;t<o;t++)i[t]=Math.max(i[t],l(u[e+t],0,n).length)}return i}(e,t,n,s),i=t.length,c=d(e,t,n,s,o),u=["Tensor"];return a&&(u.push("  dtype: ".concat(n)),u.push("  rank: ".concat(i)),u.push("  shape: [".concat(t,"]")),u.push("  values:")),u.push(c.map((e=>"    "+e)).join("\n")),u.join("\n")}function l(e,t,n){let a;return a=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(i))," + ")+"".concat(parseFloat(e[1].toFixed(i)),"j"):(0,r.HD)(e)?"'".concat(e,"'"):"bool"===n?u(e):parseFloat(e.toFixed(i)).toString(),(0,r.oj)(a,t)}function u(e){return 0===e?"false":"true"}function d(e,t,n,a,r){let i=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const c="complex64"===n?2:1,p=t[0],f=t.length;if(0===f){if("complex64"===n){return[l(h(e)[0],0,n)]}return"bool"===n?[u(e[0])]:[e[0].toString()]}if(1===f){if(p>s){const t=o*c;let a=Array.from(e.slice(0,t)),s=Array.from(e.slice((p-o)*c,p*c));return"complex64"===n&&(a=h(a),s=h(s)),["["+a.map(((e,t)=>l(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>l(e,r[p-o+t],n))).join(", ")+"]"]}return["["+("complex64"===n?h(e):Array.from(e)).map(((e,t)=>l(e,r[t],n))).join(", ")+"]"]}const m=t.slice(1),g=a.slice(1),y=a[0]*c,b=[];if(p>s){for(let t=0;t<o;t++){const a=t*y,s=a+y;b.push(...d(e.slice(a,s),m,n,g,r,!1))}b.push("...");for(let t=p-o;t<p;t++){const a=t*y,s=a+y;b.push(...d(e.slice(a,s),m,n,g,r,t===p-1))}}else for(let s=0;s<p;s++){const t=s*y,a=t+y;b.push(...d(e.slice(t,a),m,n,g,r,s===p-1))}const v=2===f?",":"";b[0]="["+(p>0?b[0]+v:"");for(let s=1;s<b.length-1;s++)b[s]=" "+b[s]+v;let x=",\n";for(let s=2;s<f;s++)x+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(i?"":x),b}function h(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var p=n(115);class f{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=r.NA(e),null!=n){const e=n.length;r.hu(e===this.size,(()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.rQ(t,this.size),this.strides=(0,r.e3)(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),r.hu(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const s=this.locToIndex(n);this.values[s]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const s of t){if(s<0||s>=this.shape[a]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}a++}let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=this.strides[s]*t[s];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return m().makeTensor(this.values,this.shape,this.dtype)}}let m=null,g=null,y=null;function b(e){m=e}function v(e){g=e}function x(e){y=e}class w{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=r.NA(e),this.strides=(0,r.e3)(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return g.buffer(this.shape,this.dtype,e)}bufferSync(){return g.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,r.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,r.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=m().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>p.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),m().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=m().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>p.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await m().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),m().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return g.print(this,e)}clone(){return this.throwIfDisposed(),g.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return c(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),g.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),m().makeVariable(this,e,t,n)}}function k(){return(0,a.R)("Tensor",(()=>w))}Object.defineProperty(w,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),k();class S extends w{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!r.cO(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));m().disposeTensor(this),this.dataId=e.dataId,m().incRef(this,null)}dispose(){m().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(S,Symbol.hasInstance,{value:e=>e instanceof w&&null!=e.assign&&e.assign instanceof Function})},9064:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>i,getTensorsInContainer:()=>l,isTensorInList:()=>c,makeTypesMatch:()=>o});var a=n(4376),r=n(3525),s=n(6147);function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,r.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){(0,s.hu)(e.dtype===t.dtype,(()=>"The dtypes of the first(".concat(e.dtype,") and")+" second(".concat(t.dtype,") input must match")))}function c(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return u(e,t,new Set),t}function u(e,t,n){if(null==e)return;if(e instanceof a.es)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!==typeof r)return;var r;const s=e;for(const a in s){const e=s[a];n.has(e)||(n.add(e),u(e,t,n))}}},8354:(e,t,n)=>{"use strict";n.d(t,{C:()=>l,_1:()=>h,sI:()=>p});var a=n(318),r=n(5050),s=n(4376),o=n(3525),i=n(115),c=n(6147);function l(e,t){let n=e;if((0,i.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,o.Oq)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,o.$F)(e))return[e.buffer.size/(null==t?4:(0,c.bT)(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||(0,i.isTypedArray)(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&(0,r.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(e,a,[]),a}function u(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.isTypedArray)(e))return void(0,c.hu)(0===t.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements")));(0,c.hu)(t.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements"))),(0,c.hu)(e.length===t[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements")));const a=t.slice(1);for(let r=0;r<e.length;++r)u(e[r],a,n.concat(r))}function d(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function h(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof(0,s.t3)())return d(r,e.dtype,t,n),e;let o=(0,c.D2)(e);if("string"!==o&&["bool","int32","float32"].indexOf(r)>=0&&(o=r),d(r,o,t,n),null==e||!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const u=l(e,o);(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const h="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],!0);return a.BV.makeTensor(h,u,o)}function p(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return e.map(((e,r)=>h(e,"".concat(t,"[").concat(r,"]"),n,a)))}},3525:(e,t,n)=>{"use strict";var a,r,s,o,i;n.d(t,{$F:()=>h,Oq:()=>d,x8:()=>l,yw:()=>a,z4:()=>u}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const c={float32:o,int32:r,bool:s,complex64:i};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return c[e][t]}function u(e){return l(e,"int32")}function d(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function h(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},115:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>s.cO,arraysEqualWithNull:()=>s.DK,assert:()=>s.hu,assertNonNegativeIntegerDimensions:()=>s.Mu,assertNonNull:()=>s.Cq,assertShapesMatch:()=>s.k5,bytesFromStringArray:()=>s.Ub,bytesPerElement:()=>s.bT,checkConversionForErrors:()=>s.D5,clamp:()=>s.uZ,computeStrides:()=>s.e3,convertBackendValuesAndArrayBuffer:()=>s.KS,createScalarValue:()=>x,createShuffledIndices:()=>s.U$,decodeString:()=>N,distSquared:()=>s.E7,encodeString:()=>I,fetch:()=>S,fingerPrint64:()=>v,flatten:()=>C,getArrayFromDType:()=>s.rQ,getTypedArrayFromDType:()=>s.WP,hasEncodingLoss:()=>s.QB,hexToLong:()=>c,indexToLoc:()=>s.NE,inferDtype:()=>s.D2,inferFromImplicitShape:()=>s.JZ,isBoolean:()=>s.jn,isFunction:()=>s.mf,isInt:()=>s.GN,isNumber:()=>s.hj,isPromise:()=>s.tI,isScalarShape:()=>s.xH,isString:()=>s.HD,isTypedArray:()=>T,isValidDtype:()=>s.LP,locToIndex:()=>s.qy,makeOnesTypedArray:()=>s.p8,makeZerosNestedTypedArray:()=>s.l6,makeZerosTypedArray:()=>s.wT,nearestDivisor:()=>s.jP,nearestLargerEven:()=>s.nY,now:()=>k,parseAxisParam:()=>s.EC,randUniform:()=>s.bj,repeatedTry:()=>s.WD,rightPad:()=>s.oj,shuffle:()=>s.TV,shuffleCombo:()=>s.d7,sizeFromShape:()=>s.NA,sizeToSquarishShape:()=>s.YP,squeezeShape:()=>s.bp,sum:()=>s.Sm,swap:()=>s.LF,tanh:()=>s.AE,toNestedArray:()=>s.GX,toTypedArray:()=>w});var a=n(5050),r=n(1539),s=n(6147),o=n(8987);const i=n.n(o)()||o;function c(e){return i.fromString(e,!0,16)}const l=c("c3a5c85c97cb3127"),u=c("b492b66fbe98f273"),d=c("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function p(e,t,n){const a=e.slice(t,t+n);return i.fromBytes(Array.from(a),!0,!0)}function f(e,t){return p(e,t,8)}function m(e,t){return p(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function y(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function b(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=g(s.add(r).add(a),21);const o=r;return r=(r=r.add(t)).add(n),s=s.add(g(r,44)),[r.add(a),s.add(o)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,a)}function v(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=d.add(2*t),a=f(e,0).add(d),r=f(e,t-8);return y(g(r,37).mul(n).add(a),g(a,25).add(r).mul(n),n)}if(t>=4){const n=d.add(2*t);return y(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return h(d.mul(n).xor(l.mul(a))).mul(d)}return d}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),a=f(e,0).mul(u),r=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d);return y(g(a.add(r),43).add(g(s,30)).add(o),a.add(g(r.add(d),18)).add(s),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),a=f(e,0).mul(d),r=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d),i=g(a.add(r),43).add(g(s,30)).add(o),c=y(i,a.add(g(r.add(d),18)).add(s),n),l=f(e,16).mul(n),u=f(e,24),h=i.add(f(e,t-32)).mul(n),p=c.add(f(e,t-24)).mul(n);return y(g(l.add(u),43).add(g(h,30)).add(p),l.add(g(u.add(a),18)).add(h),n)}(e,t);let a=n,r=n.mul(u).add(113),s=h(r.mul(d).add(113)).mul(d),o=[i.UZERO,i.UZERO],c=[i.UZERO,i.UZERO];a=a.mul(d).add(f(e,0));let p=0;const v=64*(t-1>>6),x=v+(t-1&63)-63;do{a=g(a.add(r).add(o[0]).add(f(e,p+8)),37).mul(u),r=g(r.add(o[1]).add(f(e,p+48)),42).mul(u),a=a.xor(c[1]),r=r.add(o[0]).add(f(e,p+40)),s=g(s.add(c[0]),33).mul(u),o=b(e,p,o[1].mul(u),a.add(c[0])),c=b(e,p+32,s.add(c[1]),r.add(f(e,p+16))),[s,a]=[a,s],p+=64}while(p!==v);const w=u.add(s.and(255).shl(1));return p=x,c[0]=c[0].add(t-1&63),o[0]=o[0].add(c[0]),c[0]=c[0].add(o[0]),a=g(a.add(r).add(o[0]).add(f(e,p+8)),37).mul(w),r=g(r.add(o[1]).add(f(e,p+48)),42).mul(w),a=a.xor(c[1].mul(9)),r=r.add(o[0].mul(9).add(f(e,p+40))),s=g(s.add(c[0]),33).mul(w),o=b(e,p,o[1].mul(w),a.add(c[0])),c=b(e,p+32,s.add(c[1]),r.add(f(e,p+16))),[s,a]=[a,s],y(y(o[0],c[0],w).add(h(r).mul(l)).add(s),y(o[1],c[1],w).add(a),w)}function x(e,t){return"string"===t?I(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=C(e)),(0,a.OB)().getBool("DEBUG")&&s.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function k(){return(0,a.OB)().platform.now()}function S(e,t){return(0,a.OB)().platform.fetch(e,t)}function I(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,a.OB)().platform.encode(e,t)}function N(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,a.OB)().platform.decode(e,t)}function T(e){return null!=(0,a.OB)().platform.isTypedArray?(0,a.OB)().platform.isTypedArray(e):(0,r.j)(e)}function C(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||s.tI(e)||null==e||T(e)&&n)t.push(e);else if(Array.isArray(e)||T(e))for(let a=0;a<e.length;++a)C(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)C(e[r],t,n)}return t}},6147:(e,t,n)=>{"use strict";function a(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function r(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together "+"First array length was ".concat(e.length)+"Second array length was ".concat(t.length));let n=e.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,i(e,n,a),i(t,n,a)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2===0?e:e+1}function i(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function c(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function u(e,t){let n=0;for(let a=0;a<e.length;a++){const r=Number(e[a])-Number(t[a]);n+=r*r}return n}function d(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function h(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";d(y(e,t),(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}function p(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1===0}function v(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return a(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((r,s)=>{let o=0;const i=()=>{if(e())return void r();o++;const c=t(o);null!=n&&o>=n?s():null!=a?a(i,c):setTimeout(i,c)};i()}))}function I(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(s));a=s}else if(e[s]<0)throw Error("Shapes can not be < 0. Found ".concat(e[s]," at dim ").concat(s));if(-1===a){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const r=e.slice();return r[a]=t/n,r}function N(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e))),d(e.every((e=>b(e))),(()=>"All values in axis param must be integers but "+"got axis ".concat(e))),e.map((e=>e<0?n+e:e))}function T(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:N(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),a.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),a.push(i))}return{newShape:n,keptDims:a}}function C(e,t){return E(e,t)}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function _(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(a,"."))}}function A(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function R(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function D(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"===typeof e||e instanceof String}function M(e){return"boolean"===typeof e}function L(e){return"number"===typeof e}function z(e){return Array.isArray(e)?z(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":L(e)?"float32":O(e)?"string":M(e)?"bool":"float32"}function B(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function V(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function W(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=W(e+t*i,o,n,a)}return r}function U(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return W(0,e,t,n)}function G(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}function j(e,t){const n=H(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function q(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function X(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"].")))}))}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function Y(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function Q(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{AE:()=>v,Cq:()=>p,D2:()=>z,D5:()=>_,DK:()=>g,E7:()=>u,EC:()=>N,GN:()=>b,GX:()=>U,HD:()=>O,JZ:()=>I,KS:()=>G,LF:()=>i,LP:()=>A,Mu:()=>X,NA:()=>f,NE:()=>Y,QB:()=>R,Sm:()=>c,TV:()=>a,U$:()=>w,Ub:()=>D,WD:()=>S,WP:()=>C,YP:()=>x,bT:()=>F,bj:()=>l,bp:()=>T,cO:()=>y,d7:()=>r,e3:()=>V,hj:()=>L,hu:()=>d,jP:()=>P,jn:()=>M,k5:()=>h,l6:()=>q,mf:()=>B,nY:()=>o,oj:()=>k,p8:()=>j,qy:()=>K,rQ:()=>E,tI:()=>Q,uZ:()=>s,wT:()=>H,xH:()=>m})},8987:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},s={};function o(e,t){var n,a,o;return t?(o=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=c(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=c(e,e<0?-1:0,!1),o&&(r[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?i(-e,t).neg():c(e%h|0,e/h|0,t)}function c(e,t,a){return new n(e,t,a)}n.fromInt=o,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(e.substring(1),t,n).neg();for(var r=i(l(n,8)),s=g,o=0;o<e.length;o+=8){var c=Math.min(8,e.length-o),d=parseInt(e.substring(o,o+c),n);if(c<8){var h=i(l(n,c));s=s.mul(h).add(i(d))}else s=(s=s.mul(r)).add(i(d))}return s.unsigned=t,s}function d(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?u(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=u,n.fromValue=d;var h=4294967296,p=h*h,f=p/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var v=o(1,!0);n.UONE=v;var x=o(-1);n.NEG_ONE=x;var w=c(-1,2147483647,!1);n.MAX_VALUE=w;var k=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=c(0,-2147483648,!1);n.MIN_VALUE=S;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=i(l(e,6),this.unsigned),s=this,o="";;){var c=s.div(r),u=(s.sub(c.mul(r)).toInt()>>>0).toString(e);if((s=c).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1===(1&this.low)},I.isEven=function(){return 0===(1&this.low)},I.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},I.neg=I.negate,I.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,u=0,h=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,h+=(p+=r+l)>>>16,u+=(h+=n+i)>>>16,u+=t+o,c((p&=65535)<<16|(f&=65535),(u&=65535)<<16|(h&=65535),this.unsigned)},I.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=d(e)),t)return c(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,s=this.low>>>16,o=65535&this.low,l=e.high>>>16,u=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,v=0;return b+=(v+=o*p)>>>16,y+=(b+=s*p)>>>16,b&=65535,y+=(b+=o*h)>>>16,f+=(y+=r*p)>>>16,y&=65535,f+=(y+=s*h)>>>16,y&=65535,f+=(y+=o*u)>>>16,f+=n*p+r*h+s*u+o*l,c((b&=65535)<<16|(v&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,r,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;s=y}else{if(this.eq(S))return e.eq(b)||e.eq(x)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:x:(r=this.sub(e.mul(n)),s=n.add(r.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),u=o<=48?1:l(2,o-48),h=i(n),p=h.mul(e);p.isNegative()||p.gt(r);)p=(h=i(n-=u,this.unsigned)).mul(e);h.isZero()&&(h=b),s=s.add(h),r=r.sub(p)}return s},I.div=I.divide,I.modulo=function(e){return a(e)||(e=d(e)),t?c((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return c(~this.low,~this.high,this.unsigned)},I.and=function(e){return a(e)||(e=d(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return a(e)||(e=d(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return a(e)||(e=d(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},888:(e,t,n)=>{"use strict";var a=n(9047);function r(){}function s(){}s.resetWarningCache=r,e.exports=function(){function e(e,t,n,r,s,o){if(o!==a){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:s,resetWarningCache:r};return n.PropTypes=n,n}},2007:(e,t,n)=>{e.exports=n(888)()},9047:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},4463:(e,t,n)=>{"use strict";var a=n(2791),r=n(5296);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function c(e,t){l(e,t),l(e+"Capture",t)}function l(e,t){for(i[e]=t,e=0;e<t.length;e++)o.add(t[e])}var u=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=Object.prototype.hasOwnProperty,h=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,a,r,s,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function v(e,t,n,a){var r=g.hasOwnProperty(t)?g[t]:null;(null!==r?0!==r.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,a)&&(n=null),a||null===r?function(e){return!!d.call(f,e)||!d.call(p,e)&&(h.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,a=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),I=Symbol.for("react.strict_mode"),N=Symbol.for("react.profiler"),T=Symbol.for("react.provider"),C=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),_=Symbol.for("react.suspense"),A=Symbol.for("react.suspense_list"),R=Symbol.for("react.memo"),F=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function M(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=O&&e[O]||e["@@iterator"])?e:null}var L,z=Object.assign;function B(e){if(void 0===L)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);L=t&&t[1]||""}return"\n"+L+e}var P=!1;function V(e,t){if(!e||P)return"";P=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(l){var a=l}Reflect.construct(e,[],t)}else{try{t.call()}catch(l){a=l}e.call(t.prototype)}else{try{throw Error()}catch(l){a=l}e()}}catch(l){if(l&&a&&"string"===typeof l.stack){for(var r=l.stack.split("\n"),s=a.stack.split("\n"),o=r.length-1,i=s.length-1;1<=o&&0<=i&&r[o]!==s[i];)i--;for(;1<=o&&0<=i;o--,i--)if(r[o]!==s[i]){if(1!==o||1!==i)do{if(o--,0>--i||r[o]!==s[i]){var c="\n"+r[o].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=o&&0<=i);break}}}finally{P=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?B(e):""}function W(e){switch(e.tag){case 5:return B(e.type);case 16:return B("Lazy");case 13:return B("Suspense");case 19:return B("SuspenseList");case 0:case 2:case 15:return e=V(e.type,!1);case 11:return e=V(e.type.render,!1);case 1:return e=V(e.type,!0);default:return""}}function U(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case N:return"Profiler";case I:return"StrictMode";case _:return"Suspense";case A:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case T:return(e._context.displayName||"Context")+".Provider";case E:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case R:return null!==(t=e.displayName||null)?t:U(e.type)||"Memo";case F:t=e._payload,e=e._init;try{return U(e(t))}catch(n){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return U(t);case 8:return t===I?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function j(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function q(e){e._valueTracker||(e._valueTracker=function(e){var t=H(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=H(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function K(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Y(e,t){var n=t.checked;return z({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Q(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=j(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Z(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function J(e,t){Z(e,t);var n=j(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,j(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function $(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+j(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return z({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(s(92));if(te(n)){if(1<n.length)throw Error(s(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:j(n)}}function se(e,t){var n=j(t.value),a=j(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ce(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var le,ue,de=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((le=le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function he(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=me(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,r):e[n]=r}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ye=z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(s(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xe=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,Ie=null;function Ne(e){if(e=vr(e)){if("function"!==typeof ke)throw Error(s(280));var t=e.stateNode;t&&(t=wr(t),ke(e.stateNode,e.type,t))}}function Te(e){Se?Ie?Ie.push(e):Ie=[e]:Se=e}function Ce(){if(Se){var e=Se,t=Ie;if(Ie=Se=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function Ee(e,t){return e(t)}function _e(){}var Ae=!1;function Re(e,t,n){if(Ae)return e(t,n);Ae=!0;try{return Ee(e,t,n)}finally{Ae=!1,(null!==Se||null!==Ie)&&(_e(),Ce())}}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var a=wr(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(s(231,t,typeof n));return n}var De=!1;if(u)try{var Oe={};Object.defineProperty(Oe,"passive",{get:function(){De=!0}}),window.addEventListener("test",Oe,Oe),window.removeEventListener("test",Oe,Oe)}catch(ue){De=!1}function Me(e,t,n,a,r,s,o,i,c){var l=Array.prototype.slice.call(arguments,3);try{t.apply(n,l)}catch(u){this.onError(u)}}var Le=!1,ze=null,Be=!1,Pe=null,Ve={onError:function(e){Le=!0,ze=e}};function We(e,t,n,a,r,s,o,i,c){Le=!1,ze=null,Me.apply(Ve,arguments)}function Ue(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function je(e){if(Ue(e)!==e)throw Error(s(188))}function He(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ue(e)))throw Error(s(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var o=r.alternate;if(null===o){if(null!==(a=r.return)){n=a;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===n)return je(r),e;if(o===a)return je(r),t;o=o.sibling}throw Error(s(188))}if(n.return!==a.return)n=r,a=o;else{for(var i=!1,c=r.child;c;){if(c===n){i=!0,n=r,a=o;break}if(c===a){i=!0,a=r,n=o;break}c=c.sibling}if(!i){for(c=o.child;c;){if(c===n){i=!0,n=o,a=r;break}if(c===a){i=!0,a=o,n=r;break}c=c.sibling}if(!i)throw Error(s(189))}}if(n.alternate!==a)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?e:t}(e))?qe(e):null}function qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=qe(e);if(null!==t)return t;e=e.sibling}return null}var Xe=r.unstable_scheduleCallback,Ke=r.unstable_cancelCallback,Ye=r.unstable_shouldYield,Qe=r.unstable_requestPaint,Ze=r.unstable_now,Je=r.unstable_getCurrentPriorityLevel,$e=r.unstable_ImmediatePriority,et=r.unstable_UserBlockingPriority,tt=r.unstable_NormalPriority,nt=r.unstable_LowPriority,at=r.unstable_IdlePriority,rt=null,st=null;var ot=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(it(e)/ct|0)|0},it=Math.log,ct=Math.LN2;var lt=64,ut=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ht(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,r=e.suspendedLanes,s=e.pingedLanes,o=268435455&n;if(0!==o){var i=o&~r;0!==i?a=dt(i):0!==(s&=o)&&(a=dt(s))}else 0!==(o=n&~r)?a=dt(o):0!==s&&(a=dt(s));if(0===a)return 0;if(0!==t&&t!==a&&0===(t&r)&&((r=a&-a)>=(s=t&-t)||16===r&&0!==(4194240&s)))return t;if(0!==(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)r=1<<(n=31-ot(t)),a|=e[n],t&=~r;return a}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=lt;return 0===(4194240&(lt<<=1))&&(lt=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-ot(n),r=1<<a;r&t|e[a]&t&&(e[a]|=t),n&=~r}}var vt=0;function xt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,kt,St,It,Nt,Tt=!1,Ct=[],Et=null,_t=null,At=null,Rt=new Map,Ft=new Map,Dt=[],Ot="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Mt(e,t){switch(e){case"focusin":case"focusout":Et=null;break;case"dragenter":case"dragleave":_t=null;break;case"mouseover":case"mouseout":At=null;break;case"pointerover":case"pointerout":Rt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ft.delete(t.pointerId)}}function Lt(e,t,n,a,r,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:s,targetContainers:[r]},null!==t&&(null!==(t=vr(t))&&kt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function zt(e){var t=br(e.target);if(null!==t){var n=Ue(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void Nt(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Bt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=vr(n))&&kt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);xe=a,n.target.dispatchEvent(a),xe=null,t.shift()}return!0}function Pt(e,t,n){Bt(e)&&n.delete(t)}function Vt(){Tt=!1,null!==Et&&Bt(Et)&&(Et=null),null!==_t&&Bt(_t)&&(_t=null),null!==At&&Bt(At)&&(At=null),Rt.forEach(Pt),Ft.forEach(Pt)}function Wt(e,t){e.blockedOn===t&&(e.blockedOn=null,Tt||(Tt=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Vt)))}function Ut(e){function t(t){return Wt(t,e)}if(0<Ct.length){Wt(Ct[0],e);for(var n=1;n<Ct.length;n++){var a=Ct[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==Et&&Wt(Et,e),null!==_t&&Wt(_t,e),null!==At&&Wt(At,e),Rt.forEach(t),Ft.forEach(t),n=0;n<Dt.length;n++)(a=Dt[n]).blockedOn===e&&(a.blockedOn=null);for(;0<Dt.length&&null===(n=Dt[0]).blockedOn;)zt(n),null===n.blockedOn&&Dt.shift()}var Gt=x.ReactCurrentBatchConfig,jt=!0;function Ht(e,t,n,a){var r=vt,s=Gt.transition;Gt.transition=null;try{vt=1,Xt(e,t,n,a)}finally{vt=r,Gt.transition=s}}function qt(e,t,n,a){var r=vt,s=Gt.transition;Gt.transition=null;try{vt=4,Xt(e,t,n,a)}finally{vt=r,Gt.transition=s}}function Xt(e,t,n,a){if(jt){var r=Yt(e,t,n,a);if(null===r)ja(e,t,a,Kt,n),Mt(e,a);else if(function(e,t,n,a,r){switch(t){case"focusin":return Et=Lt(Et,e,t,n,a,r),!0;case"dragenter":return _t=Lt(_t,e,t,n,a,r),!0;case"mouseover":return At=Lt(At,e,t,n,a,r),!0;case"pointerover":var s=r.pointerId;return Rt.set(s,Lt(Rt.get(s)||null,e,t,n,a,r)),!0;case"gotpointercapture":return s=r.pointerId,Ft.set(s,Lt(Ft.get(s)||null,e,t,n,a,r)),!0}return!1}(r,e,t,n,a))a.stopPropagation();else if(Mt(e,a),4&t&&-1<Ot.indexOf(e)){for(;null!==r;){var s=vr(r);if(null!==s&&wt(s),null===(s=Yt(e,t,n,a))&&ja(e,t,a,Kt,n),s===r)break;r=s}null!==r&&a.stopPropagation()}else ja(e,t,a,null,n)}}var Kt=null;function Yt(e,t,n,a){if(Kt=null,null!==(e=br(e=we(a))))if(null===(t=Ue(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Kt=e,null}function Qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case $e:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Zt=null,Jt=null,$t=null;function en(){if($t)return $t;var e,t,n=Jt,a=n.length,r="value"in Zt?Zt.value:Zt.textContent,s=r.length;for(e=0;e<a&&n[e]===r[e];e++);var o=a-e;for(t=1;t<=o&&n[a-t]===r[s-t];t++);return $t=r.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function rn(e){function t(t,n,a,r,s){for(var o in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(r):r[o]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:an,this.isPropagationStopped=an,this}return z(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var sn,on,cn,ln={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=rn(ln),dn=z({},ln,{view:0,detail:0}),hn=rn(dn),pn=z({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Nn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(sn=e.screenX-cn.screenX,on=e.screenY-cn.screenY):on=sn=0,cn=e),sn)},movementY:function(e){return"movementY"in e?e.movementY:on}}),fn=rn(pn),mn=rn(z({},pn,{dataTransfer:0})),gn=rn(z({},dn,{relatedTarget:0})),yn=rn(z({},ln,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=z({},ln,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=rn(bn),xn=rn(z({},ln,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function In(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Nn(){return In}var Tn=z({},dn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Nn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Cn=rn(Tn),En=rn(z({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),_n=rn(z({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Nn})),An=rn(z({},ln,{propertyName:0,elapsedTime:0,pseudoElement:0})),Rn=z({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Fn=rn(Rn),Dn=[9,13,27,32],On=u&&"CompositionEvent"in window,Mn=null;u&&"documentMode"in document&&(Mn=document.documentMode);var Ln=u&&"TextEvent"in window&&!Mn,zn=u&&(!On||Mn&&8<Mn&&11>=Mn),Bn=String.fromCharCode(32),Pn=!1;function Vn(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Wn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function jn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function Hn(e,t,n,a){Te(a),0<(t=qa(t,"onChange")).length&&(n=new un("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var qn=null,Xn=null;function Kn(e){Ba(e,0)}function Yn(e){if(X(xr(e)))return e}function Qn(e,t){if("change"===e)return t}var Zn=!1;if(u){var Jn;if(u){var $n="oninput"in document;if(!$n){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),$n="function"===typeof ea.oninput}Jn=$n}else Jn=!1;Zn=Jn&&(!document.documentMode||9<document.documentMode)}function ta(){qn&&(qn.detachEvent("onpropertychange",na),Xn=qn=null)}function na(e){if("value"===e.propertyName&&Yn(Xn)){var t=[];Hn(t,Xn,e,we(e)),Re(Kn,t)}}function aa(e,t,n){"focusin"===e?(ta(),Xn=n,(qn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function ra(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yn(Xn)}function sa(e,t){if("click"===e)return Yn(t)}function oa(e,t){if("input"===e||"change"===e)return Yn(t)}var ia="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function ca(e,t){if(ia(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!d.call(t,r)||!ia(e[r],t[r]))return!1}return!0}function la(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ua(e,t){var n,a=la(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=la(a)}}function da(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?da(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function ha(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function pa(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fa(e){var t=ha(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&da(n.ownerDocument.documentElement,n)){if(null!==a&&pa(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var r=n.textContent.length,s=Math.min(a.start,r);a=void 0===a.end?s:Math.min(a.end,r),!e.extend&&s>a&&(r=a,a=s,s=r),r=ua(n,s);var o=ua(n,a);r&&o&&(1!==e.rangeCount||e.anchorNode!==r.node||e.anchorOffset!==r.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(r.node,r.offset),e.removeAllRanges(),s>a?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var ma=u&&"documentMode"in document&&11>=document.documentMode,ga=null,ya=null,ba=null,va=!1;function xa(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;va||null==ga||ga!==K(a)||("selectionStart"in(a=ga)&&pa(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ba&&ca(ba,a)||(ba=a,0<(a=qa(ya,"onSelect")).length&&(t=new un("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ga)))}function wa(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var ka={animationend:wa("Animation","AnimationEnd"),animationiteration:wa("Animation","AnimationIteration"),animationstart:wa("Animation","AnimationStart"),transitionend:wa("Transition","TransitionEnd")},Sa={},Ia={};function Na(e){if(Sa[e])return Sa[e];if(!ka[e])return e;var t,n=ka[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ia)return Sa[e]=n[t];return e}u&&(Ia=document.createElement("div").style,"AnimationEvent"in window||(delete ka.animationend.animation,delete ka.animationiteration.animation,delete ka.animationstart.animation),"TransitionEvent"in window||delete ka.transitionend.transition);var Ta=Na("animationend"),Ca=Na("animationiteration"),Ea=Na("animationstart"),_a=Na("transitionend"),Aa=new Map,Ra="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Fa(e,t){Aa.set(e,t),c(t,[e])}for(var Da=0;Da<Ra.length;Da++){var Oa=Ra[Da];Fa(Oa.toLowerCase(),"on"+(Oa[0].toUpperCase()+Oa.slice(1)))}Fa(Ta,"onAnimationEnd"),Fa(Ca,"onAnimationIteration"),Fa(Ea,"onAnimationStart"),Fa("dblclick","onDoubleClick"),Fa("focusin","onFocus"),Fa("focusout","onBlur"),Fa(_a,"onTransitionEnd"),l("onMouseEnter",["mouseout","mouseover"]),l("onMouseLeave",["mouseout","mouseover"]),l("onPointerEnter",["pointerout","pointerover"]),l("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ma="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),La=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ma));function za(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,r,o,i,c,l){if(We.apply(this,arguments),Le){if(!Le)throw Error(s(198));var u=ze;Le=!1,ze=null,Be||(Be=!0,Pe=u)}}(a,t,void 0,e),e.currentTarget=null}function Ba(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var s=void 0;if(t)for(var o=a.length-1;0<=o;o--){var i=a[o],c=i.instance,l=i.currentTarget;if(i=i.listener,c!==s&&r.isPropagationStopped())break e;za(r,i,l),s=c}else for(o=0;o<a.length;o++){if(c=(i=a[o]).instance,l=i.currentTarget,i=i.listener,c!==s&&r.isPropagationStopped())break e;za(r,i,l),s=c}}}if(Be)throw e=Pe,Be=!1,Pe=null,e}function Pa(e,t){var n=t[mr];void 0===n&&(n=t[mr]=new Set);var a=e+"__bubble";n.has(a)||(Ga(t,e,2,!1),n.add(a))}function Va(e,t,n){var a=0;t&&(a|=4),Ga(n,e,a,t)}var Wa="_reactListening"+Math.random().toString(36).slice(2);function Ua(e){if(!e[Wa]){e[Wa]=!0,o.forEach((function(t){"selectionchange"!==t&&(La.has(t)||Va(t,!1,e),Va(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Wa]||(t[Wa]=!0,Va("selectionchange",!1,t))}}function Ga(e,t,n,a){switch(Qt(t)){case 1:var r=Ht;break;case 4:r=qt;break;default:r=Xt}n=r.bind(null,t,n,e),r=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function ja(e,t,n,a,r){var s=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var o=a.tag;if(3===o||4===o){var i=a.stateNode.containerInfo;if(i===r||8===i.nodeType&&i.parentNode===r)break;if(4===o)for(o=a.return;null!==o;){var c=o.tag;if((3===c||4===c)&&((c=o.stateNode.containerInfo)===r||8===c.nodeType&&c.parentNode===r))return;o=o.return}for(;null!==i;){if(null===(o=br(i)))return;if(5===(c=o.tag)||6===c){a=s=o;continue e}i=i.parentNode}}a=a.return}Re((function(){var a=s,r=we(n),o=[];e:{var i=Aa.get(e);if(void 0!==i){var c=un,l=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":c=Cn;break;case"focusin":l="focus",c=gn;break;case"focusout":l="blur",c=gn;break;case"beforeblur":case"afterblur":c=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=_n;break;case Ta:case Ca:case Ea:c=yn;break;case _a:c=An;break;case"scroll":c=hn;break;case"wheel":c=Fn;break;case"copy":case"cut":case"paste":c=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=En}var u=0!==(4&t),d=!u&&"scroll"===e,h=u?null!==i?i+"Capture":null:i;u=[];for(var p,f=a;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==h&&(null!=(m=Fe(f,h))&&u.push(Ha(f,m,p)))),d)break;f=f.return}0<u.length&&(i=new c(i,l,null,n,r),o.push({event:i,listeners:u}))}}if(0===(7&t)){if(c="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===xe||!(l=n.relatedTarget||n.fromElement)||!br(l)&&!l[fr])&&(c||i)&&(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,c?(c=a,null!==(l=(l=n.relatedTarget||n.toElement)?br(l):null)&&(l!==(d=Ue(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(c=null,l=a),c!==l)){if(u=fn,m="onMouseLeave",h="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(u=En,m="onPointerLeave",h="onPointerEnter",f="pointer"),d=null==c?i:xr(c),p=null==l?i:xr(l),(i=new u(m,f+"leave",c,n,r)).target=d,i.relatedTarget=p,m=null,br(r)===a&&((u=new u(h,f+"enter",l,n,r)).target=p,u.relatedTarget=d,m=u),d=m,c&&l)e:{for(h=l,f=0,p=u=c;p;p=Xa(p))f++;for(p=0,m=h;m;m=Xa(m))p++;for(;0<f-p;)u=Xa(u),f--;for(;0<p-f;)h=Xa(h),p--;for(;f--;){if(u===h||null!==h&&u===h.alternate)break e;u=Xa(u),h=Xa(h)}u=null}else u=null;null!==c&&Ka(o,i,c,u,!1),null!==l&&null!==d&&Ka(o,d,l,u,!0)}if("select"===(c=(i=a?xr(a):window).nodeName&&i.nodeName.toLowerCase())||"input"===c&&"file"===i.type)var g=Qn;else if(jn(i))if(Zn)g=oa;else{g=ra;var y=aa}else(c=i.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=sa);switch(g&&(g=g(e,a))?Hn(o,g,n,r):(y&&y(e,i,a),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=a?xr(a):window,e){case"focusin":(jn(y)||"true"===y.contentEditable)&&(ga=y,ya=a,ba=null);break;case"focusout":ba=ya=ga=null;break;case"mousedown":va=!0;break;case"contextmenu":case"mouseup":case"dragend":va=!1,xa(o,n,r);break;case"selectionchange":if(ma)break;case"keydown":case"keyup":xa(o,n,r)}var b;if(On)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Un?Vn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(zn&&"ko"!==n.locale&&(Un||"onCompositionStart"!==v?"onCompositionEnd"===v&&Un&&(b=en()):(Jt="value"in(Zt=r)?Zt.value:Zt.textContent,Un=!0)),0<(y=qa(a,v)).length&&(v=new xn(v,e,null,n,r),o.push({event:v,listeners:y}),b?v.data=b:null!==(b=Wn(n))&&(v.data=b))),(b=Ln?function(e,t){switch(e){case"compositionend":return Wn(t);case"keypress":return 32!==t.which?null:(Pn=!0,Bn);case"textInput":return(e=t.data)===Bn&&Pn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!On&&Vn(e,t)?(e=en(),$t=Jt=Zt=null,Un=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return zn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=qa(a,"onBeforeInput")).length&&(r=new xn("onBeforeInput","beforeinput",null,n,r),o.push({event:r,listeners:a}),r.data=b))}Ba(o,t)}))}function Ha(e,t,n){return{instance:e,listener:t,currentTarget:n}}function qa(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,s=r.stateNode;5===r.tag&&null!==s&&(r=s,null!=(s=Fe(e,n))&&a.unshift(Ha(e,s,r)),null!=(s=Fe(e,t))&&a.push(Ha(e,s,r))),e=e.return}return a}function Xa(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ka(e,t,n,a,r){for(var s=t._reactName,o=[];null!==n&&n!==a;){var i=n,c=i.alternate,l=i.stateNode;if(null!==c&&c===a)break;5===i.tag&&null!==l&&(i=l,r?null!=(c=Fe(n,s))&&o.unshift(Ha(n,c,i)):r||null!=(c=Fe(n,s))&&o.push(Ha(n,c,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Ya=/\r\n?/g,Qa=/\u0000|\uFFFD/g;function Za(e){return("string"===typeof e?e:""+e).replace(Ya,"\n").replace(Qa,"")}function Ja(e,t,n){if(t=Za(t),Za(e)!==t&&n)throw Error(s(425))}function $a(){}var er=null,tr=null;function nr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ar="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,sr="function"===typeof Promise?Promise:void 0,or="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof sr?function(e){return sr.resolve(null).then(e).catch(ir)}:ar;function ir(e){setTimeout((function(){throw e}))}function cr(e,t){var n=t,a=0;do{var r=n.nextSibling;if(e.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===a)return e.removeChild(r),void Ut(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=r}while(n);Ut(t)}function lr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ur(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var dr=Math.random().toString(36).slice(2),hr="__reactFiber$"+dr,pr="__reactProps$"+dr,fr="__reactContainer$"+dr,mr="__reactEvents$"+dr,gr="__reactListeners$"+dr,yr="__reactHandles$"+dr;function br(e){var t=e[hr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fr]||n[hr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ur(e);null!==e;){if(n=e[hr])return n;e=ur(e)}return t}n=(e=n).parentNode}return null}function vr(e){return!(e=e[hr]||e[fr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function xr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function wr(e){return e[pr]||null}var kr=[],Sr=-1;function Ir(e){return{current:e}}function Nr(e){0>Sr||(e.current=kr[Sr],kr[Sr]=null,Sr--)}function Tr(e,t){Sr++,kr[Sr]=e.current,e.current=t}var Cr={},Er=Ir(Cr),_r=Ir(!1),Ar=Cr;function Rr(e,t){var n=e.type.contextTypes;if(!n)return Cr;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var r,s={};for(r in n)s[r]=t[r];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Fr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Dr(){Nr(_r),Nr(Er)}function Or(e,t,n){if(Er.current!==Cr)throw Error(s(168));Tr(Er,t),Tr(_r,n)}function Mr(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var r in a=a.getChildContext())if(!(r in t))throw Error(s(108,G(e)||"Unknown",r));return z({},n,a)}function Lr(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Cr,Ar=Er.current,Tr(Er,e),Tr(_r,_r.current),!0}function zr(e,t,n){var a=e.stateNode;if(!a)throw Error(s(169));n?(e=Mr(e,t,Ar),a.__reactInternalMemoizedMergedChildContext=e,Nr(_r),Nr(Er),Tr(Er,e)):Nr(_r),Tr(_r,n)}var Br=null,Pr=!1,Vr=!1;function Wr(e){null===Br?Br=[e]:Br.push(e)}function Ur(){if(!Vr&&null!==Br){Vr=!0;var e=0,t=vt;try{var n=Br;for(vt=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}Br=null,Pr=!1}catch(r){throw null!==Br&&(Br=Br.slice(e+1)),Xe($e,Ur),r}finally{vt=t,Vr=!1}}return null}var Gr=[],jr=0,Hr=null,qr=0,Xr=[],Kr=0,Yr=null,Qr=1,Zr="";function Jr(e,t){Gr[jr++]=qr,Gr[jr++]=Hr,Hr=e,qr=t}function $r(e,t,n){Xr[Kr++]=Qr,Xr[Kr++]=Zr,Xr[Kr++]=Yr,Yr=e;var a=Qr;e=Zr;var r=32-ot(a)-1;a&=~(1<<r),n+=1;var s=32-ot(t)+r;if(30<s){var o=r-r%5;s=(a&(1<<o)-1).toString(32),a>>=o,r-=o,Qr=1<<32-ot(t)+r|n<<r|a,Zr=s+e}else Qr=1<<s|n<<r|a,Zr=e}function es(e){null!==e.return&&(Jr(e,1),$r(e,1,0))}function ts(e){for(;e===Hr;)Hr=Gr[--jr],Gr[jr]=null,qr=Gr[--jr],Gr[jr]=null;for(;e===Yr;)Yr=Xr[--Kr],Xr[Kr]=null,Zr=Xr[--Kr],Xr[Kr]=null,Qr=Xr[--Kr],Xr[Kr]=null}var ns=null,as=null,rs=!1,ss=null;function os(e,t){var n=Fl(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function is(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ns=e,as=lr(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ns=e,as=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Yr?{id:Qr,overflow:Zr}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Fl(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ns=e,as=null,!0);default:return!1}}function cs(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ls(e){if(rs){var t=as;if(t){var n=t;if(!is(e,t)){if(cs(e))throw Error(s(418));t=lr(n.nextSibling);var a=ns;t&&is(e,t)?os(a,n):(e.flags=-4097&e.flags|2,rs=!1,ns=e)}}else{if(cs(e))throw Error(s(418));e.flags=-4097&e.flags|2,rs=!1,ns=e}}}function us(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ns=e}function ds(e){if(e!==ns)return!1;if(!rs)return us(e),rs=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nr(e.type,e.memoizedProps)),t&&(t=as)){if(cs(e))throw hs(),Error(s(418));for(;t;)os(e,t),t=lr(t.nextSibling)}if(us(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){as=lr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}as=null}}else as=ns?lr(e.stateNode.nextSibling):null;return!0}function hs(){for(var e=as;e;)e=lr(e.nextSibling)}function ps(){as=ns=null,rs=!1}function fs(e){null===ss?ss=[e]:ss.push(e)}var ms=x.ReactCurrentBatchConfig;function gs(e,t){if(e&&e.defaultProps){for(var n in t=z({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var ys=Ir(null),bs=null,vs=null,xs=null;function ws(){xs=vs=bs=null}function ks(e){var t=ys.current;Nr(ys),e._currentValue=t}function Ss(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function Is(e,t){bs=e,xs=vs=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(xi=!0),e.firstContext=null)}function Ns(e){var t=e._currentValue;if(xs!==e)if(e={context:e,memoizedValue:t,next:null},null===vs){if(null===bs)throw Error(s(308));vs=e,bs.dependencies={lanes:0,firstContext:e}}else vs=vs.next=e;return t}var Ts=null;function Cs(e){null===Ts?Ts=[e]:Ts.push(e)}function Es(e,t,n,a){var r=t.interleaved;return null===r?(n.next=n,Cs(t)):(n.next=r.next,r.next=n),t.interleaved=n,_s(e,a)}function _s(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var As=!1;function Rs(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Fs(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ds(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Os(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&_c)){var r=a.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),a.pending=t,_s(e,n)}return null===(r=a.interleaved)?(t.next=t,Cs(a)):(t.next=r.next,r.next=t),a.interleaved=t,_s(e,n)}function Ms(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Ls(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?r=s=o:s=s.next=o,n=n.next}while(null!==n);null===s?r=s=t:s=s.next=t}else r=s=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:s,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function zs(e,t,n,a){var r=e.updateQueue;As=!1;var s=r.firstBaseUpdate,o=r.lastBaseUpdate,i=r.shared.pending;if(null!==i){r.shared.pending=null;var c=i,l=c.next;c.next=null,null===o?s=l:o.next=l,o=c;var u=e.alternate;null!==u&&((i=(u=u.updateQueue).lastBaseUpdate)!==o&&(null===i?u.firstBaseUpdate=l:i.next=l,u.lastBaseUpdate=c))}if(null!==s){var d=r.baseState;for(o=0,u=l=c=null,i=s;;){var h=i.lane,p=i.eventTime;if((a&h)===h){null!==u&&(u=u.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=e,m=i;switch(h=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){d=f.call(p,d,h);break e}d=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(h="function"===typeof(f=m.payload)?f.call(p,d,h):f)||void 0===h)break e;d=z({},d,h);break e;case 2:As=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(h=r.effects)?r.effects=[i]:h.push(i))}else p={eventTime:p,lane:h,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===u?(l=u=p,c=d):u=u.next=p,o|=h;if(null===(i=i.next)){if(null===(i=r.shared.pending))break;i=(h=i).next,h.next=null,r.lastBaseUpdate=h,r.shared.pending=null}}if(null===u&&(c=d),r.baseState=c,r.firstBaseUpdate=l,r.lastBaseUpdate=u,null!==(t=r.shared.interleaved)){r=t;do{o|=r.lane,r=r.next}while(r!==t)}else null===s&&(r.shared.lanes=0);zc|=o,e.lanes=o,e.memoizedState=d}}function Bs(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(s(191,r));r.call(a)}}}var Ps=(new a.Component).refs;function Vs(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:z({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Ws={isMounted:function(e){return!!(e=e._reactInternals)&&Ue(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=tl(),r=nl(e),s=Ds(a,r);s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Os(e,s,r))&&(al(t,e,r,a),Ms(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=tl(),r=nl(e),s=Ds(a,r);s.tag=1,s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Os(e,s,r))&&(al(t,e,r,a),Ms(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=tl(),a=nl(e),r=Ds(n,a);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=Os(e,r,a))&&(al(t,e,a,n),Ms(t,e,a))}};function Us(e,t,n,a,r,s,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,s,o):!t.prototype||!t.prototype.isPureReactComponent||(!ca(n,a)||!ca(r,s))}function Gs(e,t,n){var a=!1,r=Cr,s=t.contextType;return"object"===typeof s&&null!==s?s=Ns(s):(r=Fr(t)?Ar:Er.current,s=(a=null!==(a=t.contextTypes)&&void 0!==a)?Rr(e,r):Cr),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Ws,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=s),t}function js(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&Ws.enqueueReplaceState(t,t.state,null)}function Hs(e,t,n,a){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs=Ps,Rs(e);var s=t.contextType;"object"===typeof s&&null!==s?r.context=Ns(s):(s=Fr(t)?Ar:Er.current,r.context=Rr(e,s)),r.state=e.memoizedState,"function"===typeof(s=t.getDerivedStateFromProps)&&(Vs(e,t,s,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&Ws.enqueueReplaceState(r,r.state,null),zs(e,n,r,a),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}function qs(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var a=n.stateNode}if(!a)throw Error(s(147,e));var r=a,o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;t===Ps&&(t=r.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!==typeof e)throw Error(s(284));if(!n._owner)throw Error(s(290,e))}return e}function Xs(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Ks(e){return(0,e._init)(e._payload)}function Ys(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=Ol(e,t)).index=0,e.sibling=null,e}function o(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function c(e,t,n,a){return null===t||6!==t.tag?((t=Bl(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function l(e,t,n,a){var s=n.type;return s===S?d(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===F&&Ks(s)===t.type)?((a=r(t,n.props)).ref=qs(e,t,n),a.return=e,a):((a=Ml(n.type,n.key,n.props,null,e.mode,a)).ref=qs(e,t,n),a.return=e,a)}function u(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Pl(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function d(e,t,n,a,s){return null===t||7!==t.tag?((t=Ll(n,e.mode,a,s)).return=e,t):((t=r(t,n)).return=e,t)}function h(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Bl(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Ml(t.type,t.key,t.props,null,e.mode,n)).ref=qs(e,null,t),n.return=e,n;case k:return(t=Pl(t,e.mode,n)).return=e,t;case F:return h(e,(0,t._init)(t._payload),n)}if(te(t)||M(t))return(t=Ll(t,e.mode,n,null)).return=e,t;Xs(e,t)}return null}function p(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:c(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===r?l(e,t,n,a):null;case k:return n.key===r?u(e,t,n,a):null;case F:return p(e,t,(r=n._init)(n._payload),a)}if(te(n)||M(n))return null!==r?null:d(e,t,n,a,null);Xs(e,n)}return null}function f(e,t,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a)return c(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case w:return l(t,e=e.get(null===a.key?n:a.key)||null,a,r);case k:return u(t,e=e.get(null===a.key?n:a.key)||null,a,r);case F:return f(e,t,n,(0,a._init)(a._payload),r)}if(te(a)||M(a))return d(t,e=e.get(n)||null,a,r,null);Xs(t,a)}return null}function m(r,s,i,c){for(var l=null,u=null,d=s,m=s=0,g=null;null!==d&&m<i.length;m++){d.index>m?(g=d,d=null):g=d.sibling;var y=p(r,d,i[m],c);if(null===y){null===d&&(d=g);break}e&&d&&null===y.alternate&&t(r,d),s=o(y,s,m),null===u?l=y:u.sibling=y,u=y,d=g}if(m===i.length)return n(r,d),rs&&Jr(r,m),l;if(null===d){for(;m<i.length;m++)null!==(d=h(r,i[m],c))&&(s=o(d,s,m),null===u?l=d:u.sibling=d,u=d);return rs&&Jr(r,m),l}for(d=a(r,d);m<i.length;m++)null!==(g=f(d,r,m,i[m],c))&&(e&&null!==g.alternate&&d.delete(null===g.key?m:g.key),s=o(g,s,m),null===u?l=g:u.sibling=g,u=g);return e&&d.forEach((function(e){return t(r,e)})),rs&&Jr(r,m),l}function g(r,i,c,l){var u=M(c);if("function"!==typeof u)throw Error(s(150));if(null==(c=u.call(c)))throw Error(s(151));for(var d=u=null,m=i,g=i=0,y=null,b=c.next();null!==m&&!b.done;g++,b=c.next()){m.index>g?(y=m,m=null):y=m.sibling;var v=p(r,m,b.value,l);if(null===v){null===m&&(m=y);break}e&&m&&null===v.alternate&&t(r,m),i=o(v,i,g),null===d?u=v:d.sibling=v,d=v,m=y}if(b.done)return n(r,m),rs&&Jr(r,g),u;if(null===m){for(;!b.done;g++,b=c.next())null!==(b=h(r,b.value,l))&&(i=o(b,i,g),null===d?u=b:d.sibling=b,d=b);return rs&&Jr(r,g),u}for(m=a(r,m);!b.done;g++,b=c.next())null!==(b=f(m,r,g,b.value,l))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),i=o(b,i,g),null===d?u=b:d.sibling=b,d=b);return e&&m.forEach((function(e){return t(r,e)})),rs&&Jr(r,g),u}return function e(a,s,o,c){if("object"===typeof o&&null!==o&&o.type===S&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case w:e:{for(var l=o.key,u=s;null!==u;){if(u.key===l){if((l=o.type)===S){if(7===u.tag){n(a,u.sibling),(s=r(u,o.props.children)).return=a,a=s;break e}}else if(u.elementType===l||"object"===typeof l&&null!==l&&l.$$typeof===F&&Ks(l)===u.type){n(a,u.sibling),(s=r(u,o.props)).ref=qs(a,u,o),s.return=a,a=s;break e}n(a,u);break}t(a,u),u=u.sibling}o.type===S?((s=Ll(o.props.children,a.mode,c,o.key)).return=a,a=s):((c=Ml(o.type,o.key,o.props,null,a.mode,c)).ref=qs(a,s,o),c.return=a,a=c)}return i(a);case k:e:{for(u=o.key;null!==s;){if(s.key===u){if(4===s.tag&&s.stateNode.containerInfo===o.containerInfo&&s.stateNode.implementation===o.implementation){n(a,s.sibling),(s=r(s,o.children||[])).return=a,a=s;break e}n(a,s);break}t(a,s),s=s.sibling}(s=Pl(o,a.mode,c)).return=a,a=s}return i(a);case F:return e(a,s,(u=o._init)(o._payload),c)}if(te(o))return m(a,s,o,c);if(M(o))return g(a,s,o,c);Xs(a,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==s&&6===s.tag?(n(a,s.sibling),(s=r(s,o)).return=a,a=s):(n(a,s),(s=Bl(o,a.mode,c)).return=a,a=s),i(a)):n(a,s)}}var Qs=Ys(!0),Zs=Ys(!1),Js={},$s=Ir(Js),eo=Ir(Js),to=Ir(Js);function no(e){if(e===Js)throw Error(s(174));return e}function ao(e,t){switch(Tr(to,t),Tr(eo,e),Tr($s,Js),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ce(null,"");break;default:t=ce(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Nr($s),Tr($s,t)}function ro(){Nr($s),Nr(eo),Nr(to)}function so(e){no(to.current);var t=no($s.current),n=ce(t,e.type);t!==n&&(Tr(eo,e),Tr($s,n))}function oo(e){eo.current===e&&(Nr($s),Nr(eo))}var io=Ir(0);function co(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var lo=[];function uo(){for(var e=0;e<lo.length;e++)lo[e]._workInProgressVersionPrimary=null;lo.length=0}var ho=x.ReactCurrentDispatcher,po=x.ReactCurrentBatchConfig,fo=0,mo=null,go=null,yo=null,bo=!1,vo=!1,xo=0,wo=0;function ko(){throw Error(s(321))}function So(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ia(e[n],t[n]))return!1;return!0}function Io(e,t,n,a,r,o){if(fo=o,mo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ho.current=null===e||null===e.memoizedState?ii:ci,e=n(a,r),vo){o=0;do{if(vo=!1,xo=0,25<=o)throw Error(s(301));o+=1,yo=go=null,t.updateQueue=null,ho.current=li,e=n(a,r)}while(vo)}if(ho.current=oi,t=null!==go&&null!==go.next,fo=0,yo=go=mo=null,bo=!1,t)throw Error(s(300));return e}function No(){var e=0!==xo;return xo=0,e}function To(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===yo?mo.memoizedState=yo=e:yo=yo.next=e,yo}function Co(){if(null===go){var e=mo.alternate;e=null!==e?e.memoizedState:null}else e=go.next;var t=null===yo?mo.memoizedState:yo.next;if(null!==t)yo=t,go=e;else{if(null===e)throw Error(s(310));e={memoizedState:(go=e).memoizedState,baseState:go.baseState,baseQueue:go.baseQueue,queue:go.queue,next:null},null===yo?mo.memoizedState=yo=e:yo=yo.next=e}return yo}function Eo(e,t){return"function"===typeof t?t(e):t}function _o(e){var t=Co(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=go,r=a.baseQueue,o=n.pending;if(null!==o){if(null!==r){var i=r.next;r.next=o.next,o.next=i}a.baseQueue=r=o,n.pending=null}if(null!==r){o=r.next,a=a.baseState;var c=i=null,l=null,u=o;do{var d=u.lane;if((fo&d)===d)null!==l&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),a=u.hasEagerState?u.eagerState:e(a,u.action);else{var h={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===l?(c=l=h,i=a):l=l.next=h,mo.lanes|=d,zc|=d}u=u.next}while(null!==u&&u!==o);null===l?i=a:l.next=c,ia(a,t.memoizedState)||(xi=!0),t.memoizedState=a,t.baseState=i,t.baseQueue=l,n.lastRenderedState=a}if(null!==(e=n.interleaved)){r=e;do{o=r.lane,mo.lanes|=o,zc|=o,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Ao(e){var t=Co(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,o=t.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{o=e(o,i.action),i=i.next}while(i!==r);ia(o,t.memoizedState)||(xi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,a]}function Ro(){}function Fo(e,t){var n=mo,a=Co(),r=t(),o=!ia(a.memoizedState,r);if(o&&(a.memoizedState=r,xi=!0),a=a.queue,jo(Mo.bind(null,n,a,e),[e]),a.getSnapshot!==t||o||null!==yo&&1&yo.memoizedState.tag){if(n.flags|=2048,Po(9,Oo.bind(null,n,a,r,t),void 0,null),null===Ac)throw Error(s(349));0!==(30&fo)||Do(n,t,r)}return r}function Do(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=mo.updateQueue)?(t={lastEffect:null,stores:null},mo.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Oo(e,t,n,a){t.value=n,t.getSnapshot=a,Lo(t)&&zo(e)}function Mo(e,t,n){return n((function(){Lo(t)&&zo(e)}))}function Lo(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ia(e,n)}catch(a){return!0}}function zo(e){var t=_s(e,1);null!==t&&al(t,e,1,-1)}function Bo(e){var t=To();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Eo,lastRenderedState:e},t.queue=e,e=e.dispatch=ni.bind(null,mo,e),[t.memoizedState,e]}function Po(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=mo.updateQueue)?(t={lastEffect:null,stores:null},mo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function Vo(){return Co().memoizedState}function Wo(e,t,n,a){var r=To();mo.flags|=e,r.memoizedState=Po(1|t,n,void 0,void 0===a?null:a)}function Uo(e,t,n,a){var r=Co();a=void 0===a?null:a;var s=void 0;if(null!==go){var o=go.memoizedState;if(s=o.destroy,null!==a&&So(a,o.deps))return void(r.memoizedState=Po(t,n,s,a))}mo.flags|=e,r.memoizedState=Po(1|t,n,s,a)}function Go(e,t){return Wo(8390656,8,e,t)}function jo(e,t){return Uo(2048,8,e,t)}function Ho(e,t){return Uo(4,2,e,t)}function qo(e,t){return Uo(4,4,e,t)}function Xo(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ko(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Uo(4,4,Xo.bind(null,t,e),n)}function Yo(){}function Qo(e,t){var n=Co();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&So(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Zo(e,t){var n=Co();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&So(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function Jo(e,t,n){return 0===(21&fo)?(e.baseState&&(e.baseState=!1,xi=!0),e.memoizedState=n):(ia(n,t)||(n=mt(),mo.lanes|=n,zc|=n,e.baseState=!0),t)}function $o(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var a=po.transition;po.transition={};try{e(!1),t()}finally{vt=n,po.transition=a}}function ei(){return Co().memoizedState}function ti(e,t,n){var a=nl(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},ai(e))ri(t,n);else if(null!==(n=Es(e,t,n,a))){al(n,e,a,tl()),si(n,t,a)}}function ni(e,t,n){var a=nl(e),r={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(ai(e))ri(t,r);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=s(o,n);if(r.hasEagerState=!0,r.eagerState=i,ia(i,o)){var c=t.interleaved;return null===c?(r.next=r,Cs(t)):(r.next=c.next,c.next=r),void(t.interleaved=r)}}catch(l){}null!==(n=Es(e,t,r,a))&&(al(n,e,a,r=tl()),si(n,t,a))}}function ai(e){var t=e.alternate;return e===mo||null!==t&&t===mo}function ri(e,t){vo=bo=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function si(e,t,n){if(0!==(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}var oi={readContext:Ns,useCallback:ko,useContext:ko,useEffect:ko,useImperativeHandle:ko,useInsertionEffect:ko,useLayoutEffect:ko,useMemo:ko,useReducer:ko,useRef:ko,useState:ko,useDebugValue:ko,useDeferredValue:ko,useTransition:ko,useMutableSource:ko,useSyncExternalStore:ko,useId:ko,unstable_isNewReconciler:!1},ii={readContext:Ns,useCallback:function(e,t){return To().memoizedState=[e,void 0===t?null:t],e},useContext:Ns,useEffect:Go,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Wo(4194308,4,Xo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Wo(4194308,4,e,t)},useInsertionEffect:function(e,t){return Wo(4,2,e,t)},useMemo:function(e,t){var n=To();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=To();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=ti.bind(null,mo,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},To().memoizedState=e},useState:Bo,useDebugValue:Yo,useDeferredValue:function(e){return To().memoizedState=e},useTransition:function(){var e=Bo(!1),t=e[0];return e=$o.bind(null,e[1]),To().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=mo,r=To();if(rs){if(void 0===n)throw Error(s(407));n=n()}else{if(n=t(),null===Ac)throw Error(s(349));0!==(30&fo)||Do(a,t,n)}r.memoizedState=n;var o={value:n,getSnapshot:t};return r.queue=o,Go(Mo.bind(null,a,o,e),[e]),a.flags|=2048,Po(9,Oo.bind(null,a,o,n,t),void 0,null),n},useId:function(){var e=To(),t=Ac.identifierPrefix;if(rs){var n=Zr;t=":"+t+"R"+(n=(Qr&~(1<<32-ot(Qr)-1)).toString(32)+n),0<(n=xo++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=wo++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ci={readContext:Ns,useCallback:Qo,useContext:Ns,useEffect:jo,useImperativeHandle:Ko,useInsertionEffect:Ho,useLayoutEffect:qo,useMemo:Zo,useReducer:_o,useRef:Vo,useState:function(){return _o(Eo)},useDebugValue:Yo,useDeferredValue:function(e){return Jo(Co(),go.memoizedState,e)},useTransition:function(){return[_o(Eo)[0],Co().memoizedState]},useMutableSource:Ro,useSyncExternalStore:Fo,useId:ei,unstable_isNewReconciler:!1},li={readContext:Ns,useCallback:Qo,useContext:Ns,useEffect:jo,useImperativeHandle:Ko,useInsertionEffect:Ho,useLayoutEffect:qo,useMemo:Zo,useReducer:Ao,useRef:Vo,useState:function(){return Ao(Eo)},useDebugValue:Yo,useDeferredValue:function(e){var t=Co();return null===go?t.memoizedState=e:Jo(t,go.memoizedState,e)},useTransition:function(){return[Ao(Eo)[0],Co().memoizedState]},useMutableSource:Ro,useSyncExternalStore:Fo,useId:ei,unstable_isNewReconciler:!1};function ui(e,t){try{var n="",a=t;do{n+=W(a),a=a.return}while(a);var r=n}catch(s){r="\nError generating stack: "+s.message+"\n"+s.stack}return{value:e,source:t,stack:r,digest:null}}function di(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function hi(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var pi="function"===typeof WeakMap?WeakMap:Map;function fi(e,t,n){(n=Ds(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){Hc||(Hc=!0,qc=a),hi(0,t)},n}function mi(e,t,n){(n=Ds(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var r=t.value;n.payload=function(){return a(r)},n.callback=function(){hi(0,t)}}var s=e.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){hi(0,t),"function"!==typeof a&&(null===Xc?Xc=new Set([this]):Xc.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function gi(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new pi;var r=new Set;a.set(t,r)}else void 0===(r=a.get(t))&&(r=new Set,a.set(t,r));r.has(n)||(r.add(n),e=Tl.bind(null,e,t,n),t.then(e,e))}function yi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function bi(e,t,n,a,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Ds(-1,1)).tag=2,Os(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}var vi=x.ReactCurrentOwner,xi=!1;function wi(e,t,n,a){t.child=null===e?Zs(t,null,n,a):Qs(t,e.child,n,a)}function ki(e,t,n,a,r){n=n.render;var s=t.ref;return Is(t,r),a=Io(e,t,n,a,s,r),n=No(),null===e||xi?(rs&&n&&es(t),t.flags|=1,wi(e,t,a,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function Si(e,t,n,a,r){if(null===e){var s=n.type;return"function"!==typeof s||Dl(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ml(n.type,null,a,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,Ii(e,t,s,a,r))}if(s=e.child,0===(e.lanes&r)){var o=s.memoizedProps;if((n=null!==(n=n.compare)?n:ca)(o,a)&&e.ref===t.ref)return Hi(e,t,r)}return t.flags|=1,(e=Ol(s,a)).ref=t.ref,e.return=t,t.child=e}function Ii(e,t,n,a,r){if(null!==e){var s=e.memoizedProps;if(ca(s,a)&&e.ref===t.ref){if(xi=!1,t.pendingProps=a=s,0===(e.lanes&r))return t.lanes=e.lanes,Hi(e,t,r);0!==(131072&e.flags)&&(xi=!0)}}return Ci(e,t,n,a,r)}function Ni(e,t,n){var a=t.pendingProps,r=a.children,s=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Tr(Oc,Dc),Dc|=n;else{if(0===(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Tr(Oc,Dc),Dc|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==s?s.baseLanes:n,Tr(Oc,Dc),Dc|=a}else null!==s?(a=s.baseLanes|n,t.memoizedState=null):a=n,Tr(Oc,Dc),Dc|=a;return wi(e,t,r,n),t.child}function Ti(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Ci(e,t,n,a,r){var s=Fr(n)?Ar:Er.current;return s=Rr(t,s),Is(t,r),n=Io(e,t,n,a,s,r),a=No(),null===e||xi?(rs&&a&&es(t),t.flags|=1,wi(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function Ei(e,t,n,a,r){if(Fr(n)){var s=!0;Lr(t)}else s=!1;if(Is(t,r),null===t.stateNode)ji(e,t),Gs(t,n,a),Hs(t,n,a,r),a=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var c=o.context,l=n.contextType;"object"===typeof l&&null!==l?l=Ns(l):l=Rr(t,l=Fr(n)?Ar:Er.current);var u=n.getDerivedStateFromProps,d="function"===typeof u||"function"===typeof o.getSnapshotBeforeUpdate;d||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==a||c!==l)&&js(t,o,a,l),As=!1;var h=t.memoizedState;o.state=h,zs(t,a,o,r),c=t.memoizedState,i!==a||h!==c||_r.current||As?("function"===typeof u&&(Vs(t,n,u,a),c=t.memoizedState),(i=As||Us(t,n,i,a,h,c,l))?(d||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4194308)):("function"===typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=c),o.props=a,o.state=c,o.context=l,a=i):("function"===typeof o.componentDidMount&&(t.flags|=4194308),a=!1)}else{o=t.stateNode,Fs(e,t),i=t.memoizedProps,l=t.type===t.elementType?i:gs(t.type,i),o.props=l,d=t.pendingProps,h=o.context,"object"===typeof(c=n.contextType)&&null!==c?c=Ns(c):c=Rr(t,c=Fr(n)?Ar:Er.current);var p=n.getDerivedStateFromProps;(u="function"===typeof p||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==d||h!==c)&&js(t,o,a,c),As=!1,h=t.memoizedState,o.state=h,zs(t,a,o,r);var f=t.memoizedState;i!==d||h!==f||_r.current||As?("function"===typeof p&&(Vs(t,n,p,a),f=t.memoizedState),(l=As||Us(t,n,l,a,h,f,c)||!1)?(u||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(a,f,c),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(a,f,c)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=f),o.props=a,o.state=f,o.context=c,a=l):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),a=!1)}return _i(e,t,n,a,s,r)}function _i(e,t,n,a,r,s){Ti(e,t);var o=0!==(128&t.flags);if(!a&&!o)return r&&zr(t,n,!1),Hi(e,t,s);a=t.stateNode,vi.current=t;var i=o&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&o?(t.child=Qs(t,e.child,null,s),t.child=Qs(t,null,i,s)):wi(e,t,i,s),t.memoizedState=a.state,r&&zr(t,n,!0),t.child}function Ai(e){var t=e.stateNode;t.pendingContext?Or(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Or(0,t.context,!1),ao(e,t.containerInfo)}function Ri(e,t,n,a,r){return ps(),fs(r),t.flags|=256,wi(e,t,n,a),t.child}var Fi,Di,Oi,Mi,Li={dehydrated:null,treeContext:null,retryLane:0};function zi(e){return{baseLanes:e,cachePool:null,transitions:null}}function Bi(e,t,n){var a,r=t.pendingProps,o=io.current,i=!1,c=0!==(128&t.flags);if((a=c)||(a=(null===e||null!==e.memoizedState)&&0!==(2&o)),a?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Tr(io,1&o),null===e)return ls(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(c=r.children,e=r.fallback,i?(r=t.mode,i=t.child,c={mode:"hidden",children:c},0===(1&r)&&null!==i?(i.childLanes=0,i.pendingProps=c):i=zl(c,r,0,null),e=Ll(e,r,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=zi(n),t.memoizedState=Li,e):Pi(t,c));if(null!==(o=e.memoizedState)&&null!==(a=o.dehydrated))return function(e,t,n,a,r,o,i){if(n)return 256&t.flags?(t.flags&=-257,Vi(e,t,i,a=di(Error(s(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=a.fallback,r=t.mode,a=zl({mode:"visible",children:a.children},r,0,null),(o=Ll(o,r,i,null)).flags|=2,a.return=t,o.return=t,a.sibling=o,t.child=a,0!==(1&t.mode)&&Qs(t,e.child,null,i),t.child.memoizedState=zi(i),t.memoizedState=Li,o);if(0===(1&t.mode))return Vi(e,t,i,null);if("$!"===r.data){if(a=r.nextSibling&&r.nextSibling.dataset)var c=a.dgst;return a=c,Vi(e,t,i,a=di(o=Error(s(419)),a,void 0))}if(c=0!==(i&e.childLanes),xi||c){if(null!==(a=Ac)){switch(i&-i){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(a.suspendedLanes|i))?0:r)&&r!==o.retryLane&&(o.retryLane=r,_s(e,r),al(a,e,r,-1))}return gl(),Vi(e,t,i,a=di(Error(s(421))))}return"$?"===r.data?(t.flags|=128,t.child=e.child,t=El.bind(null,e),r._reactRetry=t,null):(e=o.treeContext,as=lr(r.nextSibling),ns=t,rs=!0,ss=null,null!==e&&(Xr[Kr++]=Qr,Xr[Kr++]=Zr,Xr[Kr++]=Yr,Qr=e.id,Zr=e.overflow,Yr=t),t=Pi(t,a.children),t.flags|=4096,t)}(e,t,c,r,a,o,n);if(i){i=r.fallback,c=t.mode,a=(o=e.child).sibling;var l={mode:"hidden",children:r.children};return 0===(1&c)&&t.child!==o?((r=t.child).childLanes=0,r.pendingProps=l,t.deletions=null):(r=Ol(o,l)).subtreeFlags=14680064&o.subtreeFlags,null!==a?i=Ol(a,i):(i=Ll(i,c,n,null)).flags|=2,i.return=t,r.return=t,r.sibling=i,t.child=r,r=i,i=t.child,c=null===(c=e.child.memoizedState)?zi(n):{baseLanes:c.baseLanes|n,cachePool:null,transitions:c.transitions},i.memoizedState=c,i.childLanes=e.childLanes&~n,t.memoizedState=Li,r}return e=(i=e.child).sibling,r=Ol(i,{mode:"visible",children:r.children}),0===(1&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Pi(e,t){return(t=zl({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Vi(e,t,n,a){return null!==a&&fs(a),Qs(t,e.child,null,n),(e=Pi(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Wi(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Ss(e.return,t,n)}function Ui(e,t,n,a,r){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=a,s.tail=n,s.tailMode=r)}function Gi(e,t,n){var a=t.pendingProps,r=a.revealOrder,s=a.tail;if(wi(e,t,a.children,n),0!==(2&(a=io.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wi(e,n,t);else if(19===e.tag)Wi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Tr(io,a),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===co(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Ui(t,!1,r,n,s);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===co(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Ui(t,!0,n,null,s);break;case"together":Ui(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function ji(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Hi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),zc|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(n=Ol(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ol(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function qi(e,t){if(!rs)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function Xi(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=14680064&r.subtreeFlags,a|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function Ki(e,t,n){var a=t.pendingProps;switch(ts(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Xi(t),null;case 1:case 17:return Fr(t.type)&&Dr(),Xi(t),null;case 3:return a=t.stateNode,ro(),Nr(_r),Nr(Er),uo(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(ds(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ss&&(il(ss),ss=null))),Di(e,t),Xi(t),null;case 5:oo(t);var r=no(to.current);if(n=t.type,null!==e&&null!=t.stateNode)Oi(e,t,n,a,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(s(166));return Xi(t),null}if(e=no($s.current),ds(t)){a=t.stateNode,n=t.type;var o=t.memoizedProps;switch(a[hr]=t,a[pr]=o,e=0!==(1&t.mode),n){case"dialog":Pa("cancel",a),Pa("close",a);break;case"iframe":case"object":case"embed":Pa("load",a);break;case"video":case"audio":for(r=0;r<Ma.length;r++)Pa(Ma[r],a);break;case"source":Pa("error",a);break;case"img":case"image":case"link":Pa("error",a),Pa("load",a);break;case"details":Pa("toggle",a);break;case"input":Q(a,o),Pa("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!o.multiple},Pa("invalid",a);break;case"textarea":re(a,o),Pa("invalid",a)}for(var c in be(n,o),r=null,o)if(o.hasOwnProperty(c)){var l=o[c];"children"===c?"string"===typeof l?a.textContent!==l&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",l]):"number"===typeof l&&a.textContent!==""+l&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",""+l]):i.hasOwnProperty(c)&&null!=l&&"onScroll"===c&&Pa("scroll",a)}switch(n){case"input":q(a),$(a,o,!0);break;case"textarea":q(a),oe(a);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(a.onclick=$a)}a=r,t.updateQueue=a,null!==a&&(t.flags|=4)}else{c=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=c.createElement(n,{is:a.is}):(e=c.createElement(n),"select"===n&&(c=e,a.multiple?c.multiple=!0:a.size&&(c.size=a.size))):e=c.createElementNS(e,n),e[hr]=t,e[pr]=a,Fi(e,t,!1,!1),t.stateNode=e;e:{switch(c=ve(n,a),n){case"dialog":Pa("cancel",e),Pa("close",e),r=a;break;case"iframe":case"object":case"embed":Pa("load",e),r=a;break;case"video":case"audio":for(r=0;r<Ma.length;r++)Pa(Ma[r],e);r=a;break;case"source":Pa("error",e),r=a;break;case"img":case"image":case"link":Pa("error",e),Pa("load",e),r=a;break;case"details":Pa("toggle",e),r=a;break;case"input":Q(e,a),r=Y(e,a),Pa("invalid",e);break;case"option":default:r=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},r=z({},a,{value:void 0}),Pa("invalid",e);break;case"textarea":re(e,a),r=ae(e,a),Pa("invalid",e)}for(o in be(n,r),l=r)if(l.hasOwnProperty(o)){var u=l[o];"style"===o?ge(e,u):"dangerouslySetInnerHTML"===o?null!=(u=u?u.__html:void 0)&&de(e,u):"children"===o?"string"===typeof u?("textarea"!==n||""!==u)&&he(e,u):"number"===typeof u&&he(e,""+u):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=u&&"onScroll"===o&&Pa("scroll",e):null!=u&&v(e,o,u,c))}switch(n){case"input":q(e),$(e,a,!1);break;case"textarea":q(e),oe(e);break;case"option":null!=a.value&&e.setAttribute("value",""+j(a.value));break;case"select":e.multiple=!!a.multiple,null!=(o=a.value)?ne(e,!!a.multiple,o,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=$a)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Xi(t),null;case 6:if(e&&null!=t.stateNode)Mi(e,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(s(166));if(n=no(to.current),no($s.current),ds(t)){if(a=t.stateNode,n=t.memoizedProps,a[hr]=t,(o=a.nodeValue!==n)&&null!==(e=ns))switch(e.tag){case 3:Ja(a.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Ja(a.nodeValue,n,0!==(1&e.mode))}o&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[hr]=t,t.stateNode=a}return Xi(t),null;case 13:if(Nr(io),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(rs&&null!==as&&0!==(1&t.mode)&&0===(128&t.flags))hs(),ps(),t.flags|=98560,o=!1;else if(o=ds(t),null!==a&&null!==a.dehydrated){if(null===e){if(!o)throw Error(s(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(s(317));o[hr]=t}else ps(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Xi(t),o=!1}else null!==ss&&(il(ss),ss=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&io.current)?0===Mc&&(Mc=3):gl())),null!==t.updateQueue&&(t.flags|=4),Xi(t),null);case 4:return ro(),Di(e,t),null===e&&Ua(t.stateNode.containerInfo),Xi(t),null;case 10:return ks(t.type._context),Xi(t),null;case 19:if(Nr(io),null===(o=t.memoizedState))return Xi(t),null;if(a=0!==(128&t.flags),null===(c=o.rendering))if(a)qi(o,!1);else{if(0!==Mc||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(c=co(e))){for(t.flags|=128,qi(o,!1),null!==(a=c.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(o=n).flags&=14680066,null===(c=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=c.childLanes,o.lanes=c.lanes,o.child=c.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=c.memoizedProps,o.memoizedState=c.memoizedState,o.updateQueue=c.updateQueue,o.type=c.type,e=c.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Tr(io,1&io.current|2),t.child}e=e.sibling}null!==o.tail&&Ze()>Gc&&(t.flags|=128,a=!0,qi(o,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=co(c))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),qi(o,!0),null===o.tail&&"hidden"===o.tailMode&&!c.alternate&&!rs)return Xi(t),null}else 2*Ze()-o.renderingStartTime>Gc&&1073741824!==n&&(t.flags|=128,a=!0,qi(o,!1),t.lanes=4194304);o.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=o.last)?n.sibling=c:t.child=c,o.last=c)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Ze(),t.sibling=null,n=io.current,Tr(io,a?1&n|2:1&n),t):(Xi(t),null);case 22:case 23:return hl(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!==(1&t.mode)?0!==(1073741824&Dc)&&(Xi(t),6&t.subtreeFlags&&(t.flags|=8192)):Xi(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}function Yi(e,t){switch(ts(t),t.tag){case 1:return Fr(t.type)&&Dr(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ro(),Nr(_r),Nr(Er),uo(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return oo(t),null;case 13:if(Nr(io),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));ps()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Nr(io),null;case 4:return ro(),null;case 10:return ks(t.type._context),null;case 22:case 23:return hl(),null;default:return null}}Fi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Di=function(){},Oi=function(e,t,n,a){var r=e.memoizedProps;if(r!==a){e=t.stateNode,no($s.current);var s,o=null;switch(n){case"input":r=Y(e,r),a=Y(e,a),o=[];break;case"select":r=z({},r,{value:void 0}),a=z({},a,{value:void 0}),o=[];break;case"textarea":r=ae(e,r),a=ae(e,a),o=[];break;default:"function"!==typeof r.onClick&&"function"===typeof a.onClick&&(e.onclick=$a)}for(u in be(n,a),n=null,r)if(!a.hasOwnProperty(u)&&r.hasOwnProperty(u)&&null!=r[u])if("style"===u){var c=r[u];for(s in c)c.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(i.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in a){var l=a[u];if(c=null!=r?r[u]:void 0,a.hasOwnProperty(u)&&l!==c&&(null!=l||null!=c))if("style"===u)if(c){for(s in c)!c.hasOwnProperty(s)||l&&l.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in l)l.hasOwnProperty(s)&&c[s]!==l[s]&&(n||(n={}),n[s]=l[s])}else n||(o||(o=[]),o.push(u,n)),n=l;else"dangerouslySetInnerHTML"===u?(l=l?l.__html:void 0,c=c?c.__html:void 0,null!=l&&c!==l&&(o=o||[]).push(u,l)):"children"===u?"string"!==typeof l&&"number"!==typeof l||(o=o||[]).push(u,""+l):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(i.hasOwnProperty(u)?(null!=l&&"onScroll"===u&&Pa("scroll",e),o||c===l||(o=[])):(o=o||[]).push(u,l))}n&&(o=o||[]).push("style",n);var u=o;(t.updateQueue=u)&&(t.flags|=4)}},Mi=function(e,t,n,a){n!==a&&(t.flags|=4)};var Qi=!1,Zi=!1,Ji="function"===typeof WeakSet?WeakSet:Set,$i=null;function ec(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){Nl(e,t,a)}else n.current=null}function tc(e,t,n){try{n()}catch(a){Nl(e,t,a)}}var nc=!1;function ac(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var r=a=a.next;do{if((r.tag&e)===e){var s=r.destroy;r.destroy=void 0,void 0!==s&&tc(t,n,s)}r=r.next}while(r!==a)}}function rc(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function sc(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function oc(e){var t=e.alternate;null!==t&&(e.alternate=null,oc(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[hr],delete t[pr],delete t[mr],delete t[gr],delete t[yr])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ic(e){return 5===e.tag||3===e.tag||4===e.tag}function cc(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ic(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function lc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=$a));else if(4!==a&&null!==(e=e.child))for(lc(e,t,n),e=e.sibling;null!==e;)lc(e,t,n),e=e.sibling}function uc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(uc(e,t,n),e=e.sibling;null!==e;)uc(e,t,n),e=e.sibling}var dc=null,hc=!1;function pc(e,t,n){for(n=n.child;null!==n;)fc(e,t,n),n=n.sibling}function fc(e,t,n){if(st&&"function"===typeof st.onCommitFiberUnmount)try{st.onCommitFiberUnmount(rt,n)}catch(i){}switch(n.tag){case 5:Zi||ec(n,t);case 6:var a=dc,r=hc;dc=null,pc(e,t,n),hc=r,null!==(dc=a)&&(hc?(e=dc,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):dc.removeChild(n.stateNode));break;case 18:null!==dc&&(hc?(e=dc,n=n.stateNode,8===e.nodeType?cr(e.parentNode,n):1===e.nodeType&&cr(e,n),Ut(e)):cr(dc,n.stateNode));break;case 4:a=dc,r=hc,dc=n.stateNode.containerInfo,hc=!0,pc(e,t,n),dc=a,hc=r;break;case 0:case 11:case 14:case 15:if(!Zi&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){r=a=a.next;do{var s=r,o=s.destroy;s=s.tag,void 0!==o&&(0!==(2&s)||0!==(4&s))&&tc(n,t,o),r=r.next}while(r!==a)}pc(e,t,n);break;case 1:if(!Zi&&(ec(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(i){Nl(n,t,i)}pc(e,t,n);break;case 21:pc(e,t,n);break;case 22:1&n.mode?(Zi=(a=Zi)||null!==n.memoizedState,pc(e,t,n),Zi=a):pc(e,t,n);break;default:pc(e,t,n)}}function mc(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Ji),t.forEach((function(t){var a=_l.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function gc(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a];try{var o=e,i=t,c=i;e:for(;null!==c;){switch(c.tag){case 5:dc=c.stateNode,hc=!1;break e;case 3:case 4:dc=c.stateNode.containerInfo,hc=!0;break e}c=c.return}if(null===dc)throw Error(s(160));fc(o,i,r),dc=null,hc=!1;var l=r.alternate;null!==l&&(l.return=null),r.return=null}catch(u){Nl(r,t,u)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)yc(t,e),t=t.sibling}function yc(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(gc(t,e),bc(e),4&a){try{ac(3,e,e.return),rc(3,e)}catch(g){Nl(e,e.return,g)}try{ac(5,e,e.return)}catch(g){Nl(e,e.return,g)}}break;case 1:gc(t,e),bc(e),512&a&&null!==n&&ec(n,n.return);break;case 5:if(gc(t,e),bc(e),512&a&&null!==n&&ec(n,n.return),32&e.flags){var r=e.stateNode;try{he(r,"")}catch(g){Nl(e,e.return,g)}}if(4&a&&null!=(r=e.stateNode)){var o=e.memoizedProps,i=null!==n?n.memoizedProps:o,c=e.type,l=e.updateQueue;if(e.updateQueue=null,null!==l)try{"input"===c&&"radio"===o.type&&null!=o.name&&Z(r,o),ve(c,i);var u=ve(c,o);for(i=0;i<l.length;i+=2){var d=l[i],h=l[i+1];"style"===d?ge(r,h):"dangerouslySetInnerHTML"===d?de(r,h):"children"===d?he(r,h):v(r,d,h,u)}switch(c){case"input":J(r,o);break;case"textarea":se(r,o);break;case"select":var p=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!o.multiple;var f=o.value;null!=f?ne(r,!!o.multiple,f,!1):p!==!!o.multiple&&(null!=o.defaultValue?ne(r,!!o.multiple,o.defaultValue,!0):ne(r,!!o.multiple,o.multiple?[]:"",!1))}r[pr]=o}catch(g){Nl(e,e.return,g)}}break;case 6:if(gc(t,e),bc(e),4&a){if(null===e.stateNode)throw Error(s(162));r=e.stateNode,o=e.memoizedProps;try{r.nodeValue=o}catch(g){Nl(e,e.return,g)}}break;case 3:if(gc(t,e),bc(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Ut(t.containerInfo)}catch(g){Nl(e,e.return,g)}break;case 4:default:gc(t,e),bc(e);break;case 13:gc(t,e),bc(e),8192&(r=e.child).flags&&(o=null!==r.memoizedState,r.stateNode.isHidden=o,!o||null!==r.alternate&&null!==r.alternate.memoizedState||(Uc=Ze())),4&a&&mc(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Zi=(u=Zi)||d,gc(t,e),Zi=u):gc(t,e),bc(e),8192&a){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!d&&0!==(1&e.mode))for($i=e,d=e.child;null!==d;){for(h=$i=d;null!==$i;){switch(f=(p=$i).child,p.tag){case 0:case 11:case 14:case 15:ac(4,p,p.return);break;case 1:ec(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){a=p,n=p.return;try{t=a,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Nl(a,n,g)}}break;case 5:ec(p,p.return);break;case 22:if(null!==p.memoizedState){kc(h);continue}}null!==f?(f.return=p,$i=f):kc(h)}d=d.sibling}e:for(d=null,h=e;;){if(5===h.tag){if(null===d){d=h;try{r=h.stateNode,u?"function"===typeof(o=r.style).setProperty?o.setProperty("display","none","important"):o.display="none":(c=h.stateNode,i=void 0!==(l=h.memoizedProps.style)&&null!==l&&l.hasOwnProperty("display")?l.display:null,c.style.display=me("display",i))}catch(g){Nl(e,e.return,g)}}}else if(6===h.tag){if(null===d)try{h.stateNode.nodeValue=u?"":h.memoizedProps}catch(g){Nl(e,e.return,g)}}else if((22!==h.tag&&23!==h.tag||null===h.memoizedState||h===e)&&null!==h.child){h.child.return=h,h=h.child;continue}if(h===e)break e;for(;null===h.sibling;){if(null===h.return||h.return===e)break e;d===h&&(d=null),h=h.return}d===h&&(d=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:gc(t,e),bc(e),4&a&&mc(e);case 21:}}function bc(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(ic(n)){var a=n;break e}n=n.return}throw Error(s(160))}switch(a.tag){case 5:var r=a.stateNode;32&a.flags&&(he(r,""),a.flags&=-33),uc(e,cc(e),r);break;case 3:case 4:var o=a.stateNode.containerInfo;lc(e,cc(e),o);break;default:throw Error(s(161))}}catch(i){Nl(e,e.return,i)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function vc(e,t,n){$i=e,xc(e,t,n)}function xc(e,t,n){for(var a=0!==(1&e.mode);null!==$i;){var r=$i,s=r.child;if(22===r.tag&&a){var o=null!==r.memoizedState||Qi;if(!o){var i=r.alternate,c=null!==i&&null!==i.memoizedState||Zi;i=Qi;var l=Zi;if(Qi=o,(Zi=c)&&!l)for($i=r;null!==$i;)c=(o=$i).child,22===o.tag&&null!==o.memoizedState?Sc(r):null!==c?(c.return=o,$i=c):Sc(r);for(;null!==s;)$i=s,xc(s,t,n),s=s.sibling;$i=r,Qi=i,Zi=l}wc(e)}else 0!==(8772&r.subtreeFlags)&&null!==s?(s.return=r,$i=s):wc(e)}}function wc(e){for(;null!==$i;){var t=$i;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Zi||rc(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Zi)if(null===n)a.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:gs(t.type,n.memoizedProps);a.componentDidUpdate(r,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Bs(t,o,a);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Bs(t,i,n)}break;case 5:var c=t.stateNode;if(null===n&&4&t.flags){n=c;var l=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&n.focus();break;case"img":l.src&&(n.src=l.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var h=d.dehydrated;null!==h&&Ut(h)}}}break;default:throw Error(s(163))}Zi||512&t.flags&&sc(t)}catch(p){Nl(t,t.return,p)}}if(t===e){$i=null;break}if(null!==(n=t.sibling)){n.return=t.return,$i=n;break}$i=t.return}}function kc(e){for(;null!==$i;){var t=$i;if(t===e){$i=null;break}var n=t.sibling;if(null!==n){n.return=t.return,$i=n;break}$i=t.return}}function Sc(e){for(;null!==$i;){var t=$i;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{rc(4,t)}catch(c){Nl(t,n,c)}break;case 1:var a=t.stateNode;if("function"===typeof a.componentDidMount){var r=t.return;try{a.componentDidMount()}catch(c){Nl(t,r,c)}}var s=t.return;try{sc(t)}catch(c){Nl(t,s,c)}break;case 5:var o=t.return;try{sc(t)}catch(c){Nl(t,o,c)}}}catch(c){Nl(t,t.return,c)}if(t===e){$i=null;break}var i=t.sibling;if(null!==i){i.return=t.return,$i=i;break}$i=t.return}}var Ic,Nc=Math.ceil,Tc=x.ReactCurrentDispatcher,Cc=x.ReactCurrentOwner,Ec=x.ReactCurrentBatchConfig,_c=0,Ac=null,Rc=null,Fc=0,Dc=0,Oc=Ir(0),Mc=0,Lc=null,zc=0,Bc=0,Pc=0,Vc=null,Wc=null,Uc=0,Gc=1/0,jc=null,Hc=!1,qc=null,Xc=null,Kc=!1,Yc=null,Qc=0,Zc=0,Jc=null,$c=-1,el=0;function tl(){return 0!==(6&_c)?Ze():-1!==$c?$c:$c=Ze()}function nl(e){return 0===(1&e.mode)?1:0!==(2&_c)&&0!==Fc?Fc&-Fc:null!==ms.transition?(0===el&&(el=mt()),el):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Qt(e.type)}function al(e,t,n,a){if(50<Zc)throw Zc=0,Jc=null,Error(s(185));yt(e,n,a),0!==(2&_c)&&e===Ac||(e===Ac&&(0===(2&_c)&&(Bc|=n),4===Mc&&cl(e,Fc)),rl(e,a),1===n&&0===_c&&0===(1&t.mode)&&(Gc=Ze()+500,Pr&&Ur()))}function rl(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,s=e.pendingLanes;0<s;){var o=31-ot(s),i=1<<o,c=r[o];-1===c?0!==(i&n)&&0===(i&a)||(r[o]=pt(i,t)):c<=t&&(e.expiredLanes|=i),s&=~i}}(e,t);var a=ht(e,e===Ac?Fc:0);if(0===a)null!==n&&Ke(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&Ke(n),1===t)0===e.tag?function(e){Pr=!0,Wr(e)}(ll.bind(null,e)):Wr(ll.bind(null,e)),or((function(){0===(6&_c)&&Ur()})),n=null;else{switch(xt(a)){case 1:n=$e;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=Al(n,sl.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function sl(e,t){if($c=-1,el=0,0!==(6&_c))throw Error(s(327));var n=e.callbackNode;if(Sl()&&e.callbackNode!==n)return null;var a=ht(e,e===Ac?Fc:0);if(0===a)return null;if(0!==(30&a)||0!==(a&e.expiredLanes)||t)t=yl(e,a);else{t=a;var r=_c;_c|=2;var o=ml();for(Ac===e&&Fc===t||(jc=null,Gc=Ze()+500,pl(e,t));;)try{vl();break}catch(c){fl(e,c)}ws(),Tc.current=o,_c=r,null!==Rc?t=0:(Ac=null,Fc=0,t=Mc)}if(0!==t){if(2===t&&(0!==(r=ft(e))&&(a=r,t=ol(e,r))),1===t)throw n=Lc,pl(e,0),cl(e,a),rl(e,Ze()),n;if(6===t)cl(e,a);else{if(r=e.current.alternate,0===(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var r=n[a],s=r.getSnapshot;r=r.value;try{if(!ia(s(),r))return!1}catch(i){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=yl(e,a))&&(0!==(o=ft(e))&&(a=o,t=ol(e,o))),1===t))throw n=Lc,pl(e,0),cl(e,a),rl(e,Ze()),n;switch(e.finishedWork=r,e.finishedLanes=a,t){case 0:case 1:throw Error(s(345));case 2:case 5:kl(e,Wc,jc);break;case 3:if(cl(e,a),(130023424&a)===a&&10<(t=Uc+500-Ze())){if(0!==ht(e,0))break;if(((r=e.suspendedLanes)&a)!==a){tl(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=ar(kl.bind(null,e,Wc,jc),t);break}kl(e,Wc,jc);break;case 4:if(cl(e,a),(4194240&a)===a)break;for(t=e.eventTimes,r=-1;0<a;){var i=31-ot(a);o=1<<i,(i=t[i])>r&&(r=i),a&=~o}if(a=r,10<(a=(120>(a=Ze()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Nc(a/1960))-a)){e.timeoutHandle=ar(kl.bind(null,e,Wc,jc),a);break}kl(e,Wc,jc);break;default:throw Error(s(329))}}}return rl(e,Ze()),e.callbackNode===n?sl.bind(null,e):null}function ol(e,t){var n=Vc;return e.current.memoizedState.isDehydrated&&(pl(e,t).flags|=256),2!==(e=yl(e,t))&&(t=Wc,Wc=n,null!==t&&il(t)),e}function il(e){null===Wc?Wc=e:Wc.push.apply(Wc,e)}function cl(e,t){for(t&=~Pc,t&=~Bc,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),a=1<<n;e[n]=-1,t&=~a}}function ll(e){if(0!==(6&_c))throw Error(s(327));Sl();var t=ht(e,0);if(0===(1&t))return rl(e,Ze()),null;var n=yl(e,t);if(0!==e.tag&&2===n){var a=ft(e);0!==a&&(t=a,n=ol(e,a))}if(1===n)throw n=Lc,pl(e,0),cl(e,t),rl(e,Ze()),n;if(6===n)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,kl(e,Wc,jc),rl(e,Ze()),null}function ul(e,t){var n=_c;_c|=1;try{return e(t)}finally{0===(_c=n)&&(Gc=Ze()+500,Pr&&Ur())}}function dl(e){null!==Yc&&0===Yc.tag&&0===(6&_c)&&Sl();var t=_c;_c|=1;var n=Ec.transition,a=vt;try{if(Ec.transition=null,vt=1,e)return e()}finally{vt=a,Ec.transition=n,0===(6&(_c=t))&&Ur()}}function hl(){Dc=Oc.current,Nr(Oc)}function pl(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==Rc)for(n=Rc.return;null!==n;){var a=n;switch(ts(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&Dr();break;case 3:ro(),Nr(_r),Nr(Er),uo();break;case 5:oo(a);break;case 4:ro();break;case 13:case 19:Nr(io);break;case 10:ks(a.type._context);break;case 22:case 23:hl()}n=n.return}if(Ac=e,Rc=e=Ol(e.current,null),Fc=Dc=t,Mc=0,Lc=null,Pc=Bc=zc=0,Wc=Vc=null,null!==Ts){for(t=0;t<Ts.length;t++)if(null!==(a=(n=Ts[t]).interleaved)){n.interleaved=null;var r=a.next,s=n.pending;if(null!==s){var o=s.next;s.next=r,a.next=o}n.pending=a}Ts=null}return e}function fl(e,t){for(;;){var n=Rc;try{if(ws(),ho.current=oi,bo){for(var a=mo.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}bo=!1}if(fo=0,yo=go=mo=null,vo=!1,xo=0,Cc.current=null,null===n||null===n.return){Mc=1,Lc=t,Rc=null;break}e:{var o=e,i=n.return,c=n,l=t;if(t=Fc,c.flags|=32768,null!==l&&"object"===typeof l&&"function"===typeof l.then){var u=l,d=c,h=d.tag;if(0===(1&d.mode)&&(0===h||11===h||15===h)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var f=yi(i);if(null!==f){f.flags&=-257,bi(f,i,c,0,t),1&f.mode&&gi(o,u,t),l=u;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(l),t.updateQueue=g}else m.add(l);break e}if(0===(1&t)){gi(o,u,t),gl();break e}l=Error(s(426))}else if(rs&&1&c.mode){var y=yi(i);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),bi(y,i,c,0,t),fs(ui(l,c));break e}}o=l=ui(l,c),4!==Mc&&(Mc=2),null===Vc?Vc=[o]:Vc.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Ls(o,fi(0,l,t));break e;case 1:c=l;var b=o.type,v=o.stateNode;if(0===(128&o.flags)&&("function"===typeof b.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===Xc||!Xc.has(v)))){o.flags|=65536,t&=-t,o.lanes|=t,Ls(o,mi(o,c,t));break e}}o=o.return}while(null!==o)}wl(n)}catch(x){t=x,Rc===n&&null!==n&&(Rc=n=n.return);continue}break}}function ml(){var e=Tc.current;return Tc.current=oi,null===e?oi:e}function gl(){0!==Mc&&3!==Mc&&2!==Mc||(Mc=4),null===Ac||0===(268435455&zc)&&0===(268435455&Bc)||cl(Ac,Fc)}function yl(e,t){var n=_c;_c|=2;var a=ml();for(Ac===e&&Fc===t||(jc=null,pl(e,t));;)try{bl();break}catch(r){fl(e,r)}if(ws(),_c=n,Tc.current=a,null!==Rc)throw Error(s(261));return Ac=null,Fc=0,Mc}function bl(){for(;null!==Rc;)xl(Rc)}function vl(){for(;null!==Rc&&!Ye();)xl(Rc)}function xl(e){var t=Ic(e.alternate,e,Dc);e.memoizedProps=e.pendingProps,null===t?wl(e):Rc=t,Cc.current=null}function wl(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Ki(n,t,Dc)))return void(Rc=n)}else{if(null!==(n=Yi(n,t)))return n.flags&=32767,void(Rc=n);if(null===e)return Mc=6,void(Rc=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Rc=t);Rc=t=e}while(null!==t);0===Mc&&(Mc=5)}function kl(e,t,n){var a=vt,r=Ec.transition;try{Ec.transition=null,vt=1,function(e,t,n,a){do{Sl()}while(null!==Yc);if(0!==(6&_c))throw Error(s(327));n=e.finishedWork;var r=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-ot(n),s=1<<r;t[r]=0,a[r]=-1,e[r]=-1,n&=~s}}(e,o),e===Ac&&(Rc=Ac=null,Fc=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Kc||(Kc=!0,Al(tt,(function(){return Sl(),null}))),o=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||o){o=Ec.transition,Ec.transition=null;var i=vt;vt=1;var c=_c;_c|=4,Cc.current=null,function(e,t){if(er=jt,pa(e=ha())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,o=a.focusNode;a=a.focusOffset;try{n.nodeType,o.nodeType}catch(w){n=null;break e}var i=0,c=-1,l=-1,u=0,d=0,h=e,p=null;t:for(;;){for(var f;h!==n||0!==r&&3!==h.nodeType||(c=i+r),h!==o||0!==a&&3!==h.nodeType||(l=i+a),3===h.nodeType&&(i+=h.nodeValue.length),null!==(f=h.firstChild);)p=h,h=f;for(;;){if(h===e)break t;if(p===n&&++u===r&&(c=i),p===o&&++d===a&&(l=i),null!==(f=h.nextSibling))break;p=(h=p).parentNode}h=f}n=-1===c||-1===l?null:{start:c,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(tr={focusedElem:e,selectionRange:n},jt=!1,$i=t;null!==$i;)if(e=(t=$i).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,$i=e;else for(;null!==$i;){t=$i;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,v=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:gs(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var x=t.stateNode.containerInfo;1===x.nodeType?x.textContent="":9===x.nodeType&&x.documentElement&&x.removeChild(x.documentElement);break;default:throw Error(s(163))}}catch(w){Nl(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,$i=e;break}$i=t.return}m=nc,nc=!1}(e,n),yc(n,e),fa(tr),jt=!!er,tr=er=null,e.current=n,vc(n,e,r),Qe(),_c=c,vt=i,Ec.transition=o}else e.current=n;if(Kc&&(Kc=!1,Yc=e,Qc=r),o=e.pendingLanes,0===o&&(Xc=null),function(e){if(st&&"function"===typeof st.onCommitFiberRoot)try{st.onCommitFiberRoot(rt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),rl(e,Ze()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)r=t[n],a(r.value,{componentStack:r.stack,digest:r.digest});if(Hc)throw Hc=!1,e=qc,qc=null,e;0!==(1&Qc)&&0!==e.tag&&Sl(),o=e.pendingLanes,0!==(1&o)?e===Jc?Zc++:(Zc=0,Jc=e):Zc=0,Ur()}(e,t,n,a)}finally{Ec.transition=r,vt=a}return null}function Sl(){if(null!==Yc){var e=xt(Qc),t=Ec.transition,n=vt;try{if(Ec.transition=null,vt=16>e?16:e,null===Yc)var a=!1;else{if(e=Yc,Yc=null,Qc=0,0!==(6&_c))throw Error(s(331));var r=_c;for(_c|=4,$i=e.current;null!==$i;){var o=$i,i=o.child;if(0!==(16&$i.flags)){var c=o.deletions;if(null!==c){for(var l=0;l<c.length;l++){var u=c[l];for($i=u;null!==$i;){var d=$i;switch(d.tag){case 0:case 11:case 15:ac(8,d,o)}var h=d.child;if(null!==h)h.return=d,$i=h;else for(;null!==$i;){var p=(d=$i).sibling,f=d.return;if(oc(d),d===u){$i=null;break}if(null!==p){p.return=f,$i=p;break}$i=f}}}var m=o.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}$i=o}}if(0!==(2064&o.subtreeFlags)&&null!==i)i.return=o,$i=i;else e:for(;null!==$i;){if(0!==(2048&(o=$i).flags))switch(o.tag){case 0:case 11:case 15:ac(9,o,o.return)}var b=o.sibling;if(null!==b){b.return=o.return,$i=b;break e}$i=o.return}}var v=e.current;for($i=v;null!==$i;){var x=(i=$i).child;if(0!==(2064&i.subtreeFlags)&&null!==x)x.return=i,$i=x;else e:for(i=v;null!==$i;){if(0!==(2048&(c=$i).flags))try{switch(c.tag){case 0:case 11:case 15:rc(9,c)}}catch(k){Nl(c,c.return,k)}if(c===i){$i=null;break e}var w=c.sibling;if(null!==w){w.return=c.return,$i=w;break e}$i=c.return}}if(_c=r,Ur(),st&&"function"===typeof st.onPostCommitFiberRoot)try{st.onPostCommitFiberRoot(rt,e)}catch(k){}a=!0}return a}finally{vt=n,Ec.transition=t}}return!1}function Il(e,t,n){e=Os(e,t=fi(0,t=ui(n,t),1),1),t=tl(),null!==e&&(yt(e,1,t),rl(e,t))}function Nl(e,t,n){if(3===e.tag)Il(e,e,n);else for(;null!==t;){if(3===t.tag){Il(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===Xc||!Xc.has(a))){t=Os(t,e=mi(t,e=ui(n,e),1),1),e=tl(),null!==t&&(yt(t,1,e),rl(t,e));break}}t=t.return}}function Tl(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=tl(),e.pingedLanes|=e.suspendedLanes&n,Ac===e&&(Fc&n)===n&&(4===Mc||3===Mc&&(130023424&Fc)===Fc&&500>Ze()-Uc?pl(e,0):Pc|=n),rl(e,t)}function Cl(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ut,0===(130023424&(ut<<=1))&&(ut=4194304)));var n=tl();null!==(e=_s(e,t))&&(yt(e,t,n),rl(e,n))}function El(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Cl(e,n)}function _l(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(s(314))}null!==a&&a.delete(t),Cl(e,n)}function Al(e,t){return Xe(e,t)}function Rl(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Fl(e,t,n,a){return new Rl(e,t,n,a)}function Dl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ol(e,t){var n=e.alternate;return null===n?((n=Fl(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ml(e,t,n,a,r,o){var i=2;if(a=e,"function"===typeof e)Dl(e)&&(i=1);else if("string"===typeof e)i=5;else e:switch(e){case S:return Ll(n.children,r,o,t);case I:i=8,r|=8;break;case N:return(e=Fl(12,n,t,2|r)).elementType=N,e.lanes=o,e;case _:return(e=Fl(13,n,t,r)).elementType=_,e.lanes=o,e;case A:return(e=Fl(19,n,t,r)).elementType=A,e.lanes=o,e;case D:return zl(n,r,o,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case T:i=10;break e;case C:i=9;break e;case E:i=11;break e;case R:i=14;break e;case F:i=16,a=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=Fl(i,n,t,r)).elementType=e,t.type=a,t.lanes=o,t}function Ll(e,t,n,a){return(e=Fl(7,e,a,t)).lanes=n,e}function zl(e,t,n,a){return(e=Fl(22,e,a,t)).elementType=D,e.lanes=n,e.stateNode={isHidden:!1},e}function Bl(e,t,n){return(e=Fl(6,e,null,t)).lanes=n,e}function Pl(e,t,n){return(t=Fl(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Vl(e,t,n,a,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=a,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function Wl(e,t,n,a,r,s,o,i,c){return e=new Vl(e,t,n,i,c),1===t?(t=1,!0===s&&(t|=8)):t=0,s=Fl(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Rs(s),e}function Ul(e){if(!e)return Cr;e:{if(Ue(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Fr(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var n=e.type;if(Fr(n))return Mr(e,n,t)}return t}function Gl(e,t,n,a,r,s,o,i,c){return(e=Wl(n,a,!0,e,0,s,0,i,c)).context=Ul(null),n=e.current,(s=Ds(a=tl(),r=nl(n))).callback=void 0!==t&&null!==t?t:null,Os(n,s,r),e.current.lanes=r,yt(e,r,a),rl(e,a),e}function jl(e,t,n,a){var r=t.current,s=tl(),o=nl(r);return n=Ul(n),null===t.context?t.context=n:t.pendingContext=n,(t=Ds(s,o)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Os(r,t,o))&&(al(e,r,o,s),Ms(e,r,o)),o}function Hl(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function ql(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Xl(e,t){ql(e,t),(e=e.alternate)&&ql(e,t)}Ic=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||_r.current)xi=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return xi=!1,function(e,t,n){switch(t.tag){case 3:Ai(t),ps();break;case 5:so(t);break;case 1:Fr(t.type)&&Lr(t);break;case 4:ao(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,r=t.memoizedProps.value;Tr(ys,a._currentValue),a._currentValue=r;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Tr(io,1&io.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Bi(e,t,n):(Tr(io,1&io.current),null!==(e=Hi(e,t,n))?e.sibling:null);Tr(io,1&io.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(128&e.flags)){if(a)return Gi(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Tr(io,io.current),a)break;return null;case 22:case 23:return t.lanes=0,Ni(e,t,n)}return Hi(e,t,n)}(e,t,n);xi=0!==(131072&e.flags)}else xi=!1,rs&&0!==(1048576&t.flags)&&$r(t,qr,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;ji(e,t),e=t.pendingProps;var r=Rr(t,Er.current);Is(t,n),r=Io(null,t,a,e,r,n);var o=No();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Fr(a)?(o=!0,Lr(t)):o=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,Rs(t),r.updater=Ws,t.stateNode=r,r._reactInternals=t,Hs(t,a,e,n),t=_i(null,t,a,!0,o,n)):(t.tag=0,rs&&o&&es(t),wi(null,t,r,n),t=t.child),t;case 16:a=t.elementType;e:{switch(ji(e,t),e=t.pendingProps,a=(r=a._init)(a._payload),t.type=a,r=t.tag=function(e){if("function"===typeof e)return Dl(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===E)return 11;if(e===R)return 14}return 2}(a),e=gs(a,e),r){case 0:t=Ci(null,t,a,e,n);break e;case 1:t=Ei(null,t,a,e,n);break e;case 11:t=ki(null,t,a,e,n);break e;case 14:t=Si(null,t,a,gs(a.type,e),n);break e}throw Error(s(306,a,""))}return t;case 0:return a=t.type,r=t.pendingProps,Ci(e,t,a,r=t.elementType===a?r:gs(a,r),n);case 1:return a=t.type,r=t.pendingProps,Ei(e,t,a,r=t.elementType===a?r:gs(a,r),n);case 3:e:{if(Ai(t),null===e)throw Error(s(387));a=t.pendingProps,r=(o=t.memoizedState).element,Fs(e,t),zs(t,a,null,n);var i=t.memoizedState;if(a=i.element,o.isDehydrated){if(o={element:a,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Ri(e,t,a,n,r=ui(Error(s(423)),t));break e}if(a!==r){t=Ri(e,t,a,n,r=ui(Error(s(424)),t));break e}for(as=lr(t.stateNode.containerInfo.firstChild),ns=t,rs=!0,ss=null,n=Zs(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ps(),a===r){t=Hi(e,t,n);break e}wi(e,t,a,n)}t=t.child}return t;case 5:return so(t),null===e&&ls(t),a=t.type,r=t.pendingProps,o=null!==e?e.memoizedProps:null,i=r.children,nr(a,r)?i=null:null!==o&&nr(a,o)&&(t.flags|=32),Ti(e,t),wi(e,t,i,n),t.child;case 6:return null===e&&ls(t),null;case 13:return Bi(e,t,n);case 4:return ao(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=Qs(t,null,a,n):wi(e,t,a,n),t.child;case 11:return a=t.type,r=t.pendingProps,ki(e,t,a,r=t.elementType===a?r:gs(a,r),n);case 7:return wi(e,t,t.pendingProps,n),t.child;case 8:case 12:return wi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,r=t.pendingProps,o=t.memoizedProps,i=r.value,Tr(ys,a._currentValue),a._currentValue=i,null!==o)if(ia(o.value,i)){if(o.children===r.children&&!_r.current){t=Hi(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var c=o.dependencies;if(null!==c){i=o.child;for(var l=c.firstContext;null!==l;){if(l.context===a){if(1===o.tag){(l=Ds(-1,n&-n)).tag=2;var u=o.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?l.next=l:(l.next=d.next,d.next=l),u.pending=l}}o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Ss(o.return,n,t),c.lanes|=n;break}l=l.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(s(341));i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Ss(i,n,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}wi(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,a=t.pendingProps.children,Is(t,n),a=a(r=Ns(r)),t.flags|=1,wi(e,t,a,n),t.child;case 14:return r=gs(a=t.type,t.pendingProps),Si(e,t,a,r=gs(a.type,r),n);case 15:return Ii(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,r=t.pendingProps,r=t.elementType===a?r:gs(a,r),ji(e,t),t.tag=1,Fr(a)?(e=!0,Lr(t)):e=!1,Is(t,n),Gs(t,a,r),Hs(t,a,r,n),_i(null,t,a,!0,e,n);case 19:return Gi(e,t,n);case 22:return Ni(e,t,n)}throw Error(s(156,t.tag))};var Kl="function"===typeof reportError?reportError:function(e){console.error(e)};function Yl(e){this._internalRoot=e}function Ql(e){this._internalRoot=e}function Zl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Jl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function $l(){}function eu(e,t,n,a,r){var s=n._reactRootContainer;if(s){var o=s;if("function"===typeof r){var i=r;r=function(){var e=Hl(o);i.call(e)}}jl(t,o,e,r)}else o=function(e,t,n,a,r){if(r){if("function"===typeof a){var s=a;a=function(){var e=Hl(o);s.call(e)}}var o=Gl(t,a,e,0,null,!1,0,"",$l);return e._reactRootContainer=o,e[fr]=o.current,Ua(8===e.nodeType?e.parentNode:e),dl(),o}for(;r=e.lastChild;)e.removeChild(r);if("function"===typeof a){var i=a;a=function(){var e=Hl(c);i.call(e)}}var c=Wl(e,0,!1,null,0,!1,0,"",$l);return e._reactRootContainer=c,e[fr]=c.current,Ua(8===e.nodeType?e.parentNode:e),dl((function(){jl(t,c,n,a)})),c}(n,t,e,r,a);return Hl(o)}Ql.prototype.render=Yl.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));jl(e,t,null,null)},Ql.prototype.unmount=Yl.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;dl((function(){jl(null,e,null,null)})),t[fr]=null}},Ql.prototype.unstable_scheduleHydration=function(e){if(e){var t=It();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Dt.length&&0!==t&&t<Dt[n].priority;n++);Dt.splice(n,0,e),0===n&&zt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(bt(t,1|n),rl(t,Ze()),0===(6&_c)&&(Gc=Ze()+500,Ur()))}break;case 13:dl((function(){var t=_s(e,1);if(null!==t){var n=tl();al(t,e,1,n)}})),Xl(e,1)}},kt=function(e){if(13===e.tag){var t=_s(e,134217728);if(null!==t)al(t,e,134217728,tl());Xl(e,134217728)}},St=function(e){if(13===e.tag){var t=nl(e),n=_s(e,t);if(null!==n)al(n,e,t,tl());Xl(e,t)}},It=function(){return vt},Nt=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},ke=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=wr(a);if(!r)throw Error(s(90));X(a),J(a,r)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ee=ul,_e=dl;var tu={usingClientEntryPoint:!1,Events:[vr,xr,wr,Te,Ce,ul]},nu={findFiberByHostInstance:br,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},au={bundleType:nu.bundleType,version:nu.version,rendererPackageName:nu.rendererPackageName,rendererConfig:nu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:nu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ru=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ru.isDisabled&&ru.supportsFiber)try{rt=ru.inject(au),st=ru}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tu,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zl(t))throw Error(s(200));return function(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Zl(e))throw Error(s(299));var n=!1,a="",r=Kl;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(r=t.onRecoverableError)),t=Wl(e,1,!1,null,0,n,0,a,r),e[fr]=t.current,Ua(8===e.nodeType?e.parentNode:e),new Yl(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return e=null===(e=He(t))?null:e.stateNode},t.flushSync=function(e){return dl(e)},t.hydrate=function(e,t,n){if(!Jl(t))throw Error(s(200));return eu(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Zl(e))throw Error(s(405));var a=null!=n&&n.hydratedSources||null,r=!1,o="",i=Kl;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Gl(t,null,e,1,null!=n?n:null,r,0,o,i),e[fr]=t.current,Ua(e),a)for(e=0;e<a.length;e++)r=(r=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,r]:t.mutableSourceEagerHydrationData.push(n,r);return new Ql(t)},t.render=function(e,t,n){if(!Jl(t))throw Error(s(200));return eu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Jl(e))throw Error(s(40));return!!e._reactRootContainer&&(dl((function(){eu(null,null,e,!1,(function(){e._reactRootContainer=null,e[fr]=null}))})),!0)},t.unstable_batchedUpdates=ul,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Jl(n))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return eu(e,t,n,!1,a)},t.version="18.2.0-next-9e3b772b8-20220608"},1250:(e,t,n)=>{"use strict";var a=n(4164);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},4164:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(4463)},5731:function(e,t,n){"use strict";var a=this&&this.__extends||function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},e(t,n)};return function(t,n){function a(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(a.prototype=n.prototype,new a)}}(),r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=r(n(2007)),o=r(n(2791)),i=function(e){function t(n){var a=e.call(this,n)||this;return a.resetDragging=function(){a.frameDragCounter=0,a.setState({draggingOverFrame:!1,draggingOverTarget:!1})},a.handleWindowDragOverOrDrop=function(e){e.preventDefault()},a.handleFrameDrag=function(e){if(t.eventHasFiles(e))return a.frameDragCounter+="dragenter"===e.type?1:-1,1===a.frameDragCounter?(a.setState({draggingOverFrame:!0}),void(a.props.onFrameDragEnter&&a.props.onFrameDragEnter(e))):0===a.frameDragCounter?(a.setState({draggingOverFrame:!1}),void(a.props.onFrameDragLeave&&a.props.onFrameDragLeave(e))):void 0},a.handleFrameDrop=function(e){a.state.draggingOverTarget||(a.resetDragging(),a.props.onFrameDrop&&a.props.onFrameDrop(e))},a.handleDragOver=function(e){t.eventHasFiles(e)&&(a.setState({draggingOverTarget:!0}),!t.isIE()&&a.props.dropEffect&&(e.dataTransfer.dropEffect=a.props.dropEffect),a.props.onDragOver&&a.props.onDragOver(e))},a.handleDragLeave=function(e){a.setState({draggingOverTarget:!1}),a.props.onDragLeave&&a.props.onDragLeave(e)},a.handleDrop=function(e){if(a.props.onDrop&&t.eventHasFiles(e)){var n=e.dataTransfer?e.dataTransfer.files:null;a.props.onDrop(n,e)}a.resetDragging()},a.handleTargetClick=function(e){a.props.onTargetClick&&a.props.onTargetClick(e),a.resetDragging()},a.stopFrameListeners=function(e){e&&(e.removeEventListener("dragenter",a.handleFrameDrag),e.removeEventListener("dragleave",a.handleFrameDrag),e.removeEventListener("drop",a.handleFrameDrop))},a.startFrameListeners=function(e){e&&(e.addEventListener("dragenter",a.handleFrameDrag),e.addEventListener("dragleave",a.handleFrameDrag),e.addEventListener("drop",a.handleFrameDrop))},a.frameDragCounter=0,a.state={draggingOverFrame:!1,draggingOverTarget:!1},a}return a(t,e),t.prototype.componentDidMount=function(){this.startFrameListeners(this.props.frame),this.resetDragging(),window.addEventListener("dragover",this.handleWindowDragOverOrDrop),window.addEventListener("drop",this.handleWindowDragOverOrDrop)},t.prototype.componentDidUpdate=function(e){e.frame!==this.props.frame&&(this.resetDragging(),this.stopFrameListeners(e.frame),this.startFrameListeners(this.props.frame))},t.prototype.componentWillUnmount=function(){this.stopFrameListeners(this.props.frame),window.removeEventListener("dragover",this.handleWindowDragOverOrDrop),window.removeEventListener("drop",this.handleWindowDragOverOrDrop)},t.prototype.render=function(){var e=this.props,t=e.children,n=e.className,a=e.targetClassName,r=e.draggingOverFrameClassName,s=e.draggingOverTargetClassName,i=this.state,c=i.draggingOverTarget,l=a;return i.draggingOverFrame&&(l+=" "+r),c&&(l+=" "+s),o.default.createElement("div",{className:n,onDragOver:this.handleDragOver,onDragLeave:this.handleDragLeave,onDrop:this.handleDrop},o.default.createElement("div",{className:l,onClick:this.handleTargetClick},t))},t.isIE=function(){return"undefined"!==typeof window&&(-1!==window.navigator.userAgent.indexOf("MSIE")||window.navigator.appVersion.indexOf("Trident/")>0)},t.eventHasFiles=function(e){var t=!1;if(e.dataTransfer){var n=e.dataTransfer.types;for(var a in n)if("Files"===n[a]){t=!0;break}}return t},t.propTypes={className:s.default.string,targetClassName:s.default.string,draggingOverFrameClassName:s.default.string,draggingOverTargetClassName:s.default.string,onDragOver:s.default.func,onDragLeave:s.default.func,onDrop:s.default.func,onTargetClick:s.default.func,dropEffect:s.default.oneOf(["copy","move","link","none"]),frame:function(e,t,n){var a=e[t];return null==a?new Error("Warning: Required prop `"+t+"` was not specified in `"+n+"`"):a===document||a instanceof HTMLElement?void 0:new Error("Warning: Prop `"+t+"` must be one of the following: document, HTMLElement!")},onFrameDragEnter:s.default.func,onFrameDragLeave:s.default.func,onFrameDrop:s.default.func},t.defaultProps={dropEffect:"copy",frame:"undefined"===typeof window?void 0:window.document,className:"file-drop",targetClassName:"file-drop-target",draggingOverFrameClassName:"file-drop-dragging-over-frame",draggingOverTargetClassName:"file-drop-dragging-over-target"},t}(o.default.PureComponent);t.FileDrop=i},6374:(e,t,n)=>{"use strict";var a=n(2791),r=Symbol.for("react.element"),s=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,i=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var a,s={},l=null,u=null;for(a in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(u=t.ref),t)o.call(t,a)&&!c.hasOwnProperty(a)&&(s[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===s[a]&&(s[a]=t[a]);return{$$typeof:r,type:e,key:l,ref:u,props:s,_owner:i.current}}t.Fragment=s,t.jsx=l,t.jsxs=l},9117:(e,t)=>{"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),c=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var x=v.prototype=new b;x.constructor=v,m(x,y.prototype),x.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},I={key:!0,ref:!0,__self:!0,__source:!0};function N(e,t,a){var r,s={},o=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)k.call(t,r)&&!I.hasOwnProperty(r)&&(s[r]=t[r]);var c=arguments.length-2;if(1===c)s.children=a;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];s.children=l}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===s[r]&&(s[r]=c[r]);return{$$typeof:n,type:e,key:o,ref:i,props:s,_owner:S.current}}function T(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var C=/\/+/g;function E(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function _(e,t,r,s,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case n:case a:c=!0}}if(c)return o=o(c=e),e=""===s?"."+E(c,0):s,w(o)?(r="",null!=e&&(r=e.replace(C,"$&/")+"/"),_(o,t,r,"",(function(e){return e}))):null!=o&&(T(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,r+(!o.key||c&&c.key===o.key?"":(""+o.key).replace(C,"$&/")+"/")+e)),t.push(o)),1;if(c=0,s=""===s?".":s+":",w(e))for(var l=0;l<e.length;l++){var u=s+E(i=e[l],l);c+=_(i,t,r,u,o)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),l=0;!(i=e.next()).done;)c+=_(i=i.value,t,r,u=s+E(i,l++),o);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return c}function A(e,t,n){if(null==e)return e;var a=[],r=0;return _(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function R(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var F={current:null},D={transition:null},O={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:D,ReactCurrentOwner:S};t.Children={map:A,forEach:function(e,t,n){A(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return A(e,(function(){t++})),t},toArray:function(e){return A(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=r,t.Profiler=o,t.PureComponent=v,t.StrictMode=s,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=m({},e.props),s=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=S.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(l in t)k.call(t,l)&&!I.hasOwnProperty(l)&&(r[l]=void 0===t[l]&&void 0!==c?c[l]:t[l])}var l=arguments.length-2;if(1===l)r.children=a;else if(1<l){c=Array(l);for(var u=0;u<l;u++)c[u]=arguments[u+2];r.children=c}return{$$typeof:n,type:e.type,key:s,ref:o,props:r,_owner:i}},t.createContext=function(e){return(e={$$typeof:c,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=N,t.createFactory=function(e){var t=N.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:R}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=D.transition;D.transition={};try{e()}finally{D.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return F.current.useCallback(e,t)},t.useContext=function(e){return F.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return F.current.useDeferredValue(e)},t.useEffect=function(e,t){return F.current.useEffect(e,t)},t.useId=function(){return F.current.useId()},t.useImperativeHandle=function(e,t,n){return F.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return F.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return F.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return F.current.useMemo(e,t)},t.useReducer=function(e,t,n){return F.current.useReducer(e,t,n)},t.useRef=function(e){return F.current.useRef(e)},t.useState=function(e){return F.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return F.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return F.current.useTransition()},t.version="18.2.0"},2791:(e,t,n)=>{"use strict";e.exports=n(9117)},184:(e,t,n)=>{"use strict";e.exports=n(6374)},6813:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,r=e[a];if(!(0<s(r,t)))break e;e[a]=t,e[n]=r,n=a}}function a(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length,o=r>>>1;a<o;){var i=2*(a+1)-1,c=e[i],l=i+1,u=e[l];if(0>s(c,n))l<r&&0>s(u,c)?(e[a]=u,e[l]=n,a=l):(e[a]=c,e[i]=n,a=i);else{if(!(l<r&&0>s(u,n)))break e;e[a]=u,e[l]=n,a=l}}}return t}function s(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,c=i.now();t.unstable_now=function(){return i.now()-c}}var l=[],u=[],d=1,h=null,p=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function x(e){for(var t=a(u);null!==t;){if(null===t.callback)r(u);else{if(!(t.startTime<=e))break;r(u),t.sortIndex=t.expirationTime,n(l,t)}t=a(u)}}function w(e){if(g=!1,x(e),!m)if(null!==a(l))m=!0,D(k);else{var t=a(u);null!==t&&O(w,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,b(T),T=-1),f=!0;var s=p;try{for(x(n),h=a(l);null!==h&&(!(h.expirationTime>n)||e&&!_());){var o=h.callback;if("function"===typeof o){h.callback=null,p=h.priorityLevel;var i=o(h.expirationTime<=n);n=t.unstable_now(),"function"===typeof i?h.callback=i:h===a(l)&&r(l),x(n)}else r(l);h=a(l)}if(null!==h)var c=!0;else{var d=a(u);null!==d&&O(w,d.startTime-n),c=!1}return c}finally{h=null,p=s,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,I=!1,N=null,T=-1,C=5,E=-1;function _(){return!(t.unstable_now()-E<C)}function A(){if(null!==N){var e=t.unstable_now();E=e;var n=!0;try{n=N(!0,e)}finally{n?S():(I=!1,N=null)}}else I=!1}if("function"===typeof v)S=function(){v(A)};else if("undefined"!==typeof MessageChannel){var R=new MessageChannel,F=R.port2;R.port1.onmessage=A,S=function(){F.postMessage(null)}}else S=function(){y(A,0)};function D(e){N=e,I||(I=!0,S())}function O(e,n){T=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,D(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return a(l)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,r,s){var o=t.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?o+s:o:s=o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:d++,callback:r,priorityLevel:e,startTime:s,expirationTime:i=s+i,sortIndex:-1},s>o?(e.sortIndex=s,n(u,e),null===a(l)&&e===a(u)&&(g?(b(T),T=-1):g=!0,O(w,s-o))):(e.sortIndex=i,n(l,e),m||f||(m=!0,D(k))),e},t.unstable_shouldYield=_,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},5296:(e,t,n)=>{"use strict";e.exports=n(6813)},6699:(e,t,n)=>{var a=n(2501),r=n(9112),s=n(2132),o=n(890),i=n(4113),c=n(1725),l=n(3411);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=c,e.exports=l},2501:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function c(e,t){var n=new o(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.alea=c}(0,e=n.nmd(e),n.amdD)},1725:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.tychei=c}(0,e=n.nmd(e),n.amdD)},9112:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor128=c}(0,e=n.nmd(e),n.amdD)},4113:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,o,i=[],c=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,c=Math.max(c,t.length)),r=0,s=-32;s<c;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+1640531527|0,r=0==(n=i[127&s]^=a+o)?r+1:0);for(r>=128&&(i[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;e.w=o,e.X=i,e.i=r}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor4096=c}(0,e=n.nmd(e),n.amdD)},890:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorshift7=c}(0,e=n.nmd(e),n.amdD)},2132:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorwow=c}(0,e=n.nmd(e),n.amdD)},3411:function(e,t,n){var a;!function(r,s,o){var i,c=256,l=o.pow(c,6),u=o.pow(2,52),d=2*u,h=c-1;function p(e,t,n){var a=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(c):(e=new Uint8Array(c),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(a){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(s)]}}():e,3),a),p=new f(a),v=function(){for(var e=p.g(6),t=l,n=0;e<u;)e=(e+n)*c,t*=c,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,y(b(p.S),s),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,p),e.state=function(){return m(p,{})}),n?(o.random=e,t):e})(v,h,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<c;)o[r]=r++;for(r=0;r<c;r++)o[r]=o[s=h&s+e[r%n]+(t=o[r])],o[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,o=a.S;e--;)t=o[r=h&r+1],n=n*c+o[h&(o[r]=o[s=h&s+t])+(o[s]=t)];return a.i=r,a.j=s,n})(c)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(s){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[h&r]=h&(n^=19*t[h&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),s),e.exports){e.exports=p;try{i=n(5042)}catch(v){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)},5410:()=>{},8628:()=>{},1601:()=>{},7792:()=>{},4977:()=>{},5042:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var s=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,a)=>(n.f[a](e,t),t)),[])),n.u=e=>"static/js/"+e+".a8631782.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="mediapipe_web_app:";n.l=(a,r,s,o)=>{if(e[a])e[a].push(r);else{var i,c;if(void 0!==s)for(var l=document.getElementsByTagName("script"),u=0;u<l.length;u++){var d=l[u];if(d.getAttribute("src")==a||d.getAttribute("data-webpack")==t+s){i=d;break}}i||(c=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,n.nc&&i.setAttribute("nonce",n.nc),i.setAttribute("data-webpack",t+s),i.src=a),e[a]=[r];var h=(t,n)=>{i.onerror=i.onload=null,clearTimeout(p);var r=e[a];if(delete e[a],i.parentNode&&i.parentNode.removeChild(i),r&&r.forEach((e=>e(n))),t)return t(n)},p=setTimeout(h.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=h.bind(null,i.onerror),i.onload=h.bind(null,i.onload),c&&document.head.appendChild(i)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/mediapipe_web_app/",(()=>{var e={179:0};n.f.j=(t,a)=>{var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)a.push(r[2]);else{var s=new Promise(((n,a)=>r=e[t]=[n,a]));a.push(r[2]=s);var o=n.p+n.u(t),i=new Error;n.l(o,(a=>{if(n.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var s=a&&("load"===a.type?"missing":a.type),o=a&&a.target&&a.target.src;i.message="Loading chunk "+t+" failed.\n("+s+": "+o+")",i.name="ChunkLoadError",i.type=s,i.request=o,r[1](i)}}),"chunk-"+t,t)}};var t=(t,a)=>{var r,s,o=a[0],i=a[1],c=a[2],l=0;if(o.some((t=>0!==e[t]))){for(r in i)n.o(i,r)&&(n.m[r]=i[r]);if(c)c(n)}for(t&&t(a);l<o.length;l++)s=o[l],n.o(e,s)&&e[s]&&e[s][0](),e[s]=0},a=self.webpackChunkmediapipe_web_app=self.webpackChunkmediapipe_web_app||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})(),(()=>{"use strict";var e={};n.r(e),n.d(e,{addImpl:()=>$u,bincountImpl:()=>Hd,bincountReduceImpl:()=>qd,bitwiseAndImpl:()=>Kd,castImpl:()=>Ku,ceilImpl:()=>Jd,concatImpl:()=>rh,equalImpl:()=>Uh,expImpl:()=>$h,expm1Impl:()=>rp,floorImpl:()=>wp,gatherNdImpl:()=>_p,gatherV2Impl:()=>Rp,greaterEqualImpl:()=>Lp,greaterImpl:()=>Dp,lessEqualImpl:()=>Yp,lessImpl:()=>qp,linSpaceImpl:()=>Jp,logImpl:()=>ef,maxImpl:()=>gf,maximumImpl:()=>vf,minimumImpl:()=>_f,multiplyImpl:()=>Oh,negImpl:()=>Pf,notEqualImpl:()=>Xf,prodImpl:()=>om,raggedGatherImpl:()=>dm,raggedRangeImpl:()=>fm,raggedTensorToTensorImpl:()=>xm,rangeImpl:()=>km,rsqrtImpl:()=>Om,scatterImpl:()=>zm,sigmoidImpl:()=>Pu,simpleAbsImpl:()=>cd,sliceImpl:()=>Wd,sparseFillEmptyRowsImpl:()=>ag,sparseReshapeImpl:()=>sg,sparseSegmentReductionImpl:()=>ig,sqrtImpl:()=>hg,staticRegexReplaceImpl:()=>vg,stridedSliceImpl:()=>Ig,stringNGramsImpl:()=>Cg,stringSplitImpl:()=>Ag,stringToHashBucketFastImpl:()=>Fg,subImpl:()=>up,tileImpl:()=>Pg,topKImpl:()=>Gg,transposeImpl:()=>md,uniqueImpl:()=>Qg});var t=n(2791),a=n(1250),r=n(8377),s=n(3613),o=n(2145),i=n(9118),c=n(651),l=n(4031);const u={kernelName:o.SYM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.d)(e,(0,l.N)((0,i.p)(n,"float32"),-1))}}};var d=n(5750),h=n(4362),p=n(7067),f=n(6902),m=n(7391),g=n(4774);const y={kernelName:o.VGw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,m.h)((0,i.p)(n,"float32")),a=(0,f._)((0,g.l)((0,p.i)(1),t));return(0,h.W)((0,d.h)(e,a))}}}},b={kernelName:o.SpW,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,f._)((0,g.l)((0,m.h)((0,i.p)(n,"float32")),1));return(0,d.h)(e,t)}}}};var v=n(5774),x=n(5561),w=n(227);const k={kernelName:o.mm_,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=v.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let t=e;const a=v.getReductionAxes(n.shape,r);return a.length>0&&(t=(0,w.S)(t,a)),(0,x.X)(t,n.shape)},b:()=>{let t=e;const n=v.getReductionAxes(a.shape,r);return n.length>0&&(t=(0,w.S)(t,n)),(0,x.X)(t,a.shape)}}}},S={kernelName:o.Xze,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}};var I=n(7293);const N={kernelName:o.sJF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,I.P)(n)}}},T={kernelName:o.aJk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,I.P)(n)}}},C={kernelName:o.M2y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,d.h)(e,(0,f._)((0,g.l)((0,p.i)(1),(0,m.h)((0,i.p)(n,"float32")))))}}};var E=n(3312);const _={kernelName:o.qw7,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,f._)((0,E.I)((0,p.i)(1),(0,m.h)((0,i.p)(n,"float32"))));return(0,d.h)(e,t)}}}},A={kernelName:o.QCc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,v.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,E.I)((0,m.h)(n),(0,m.h)(a));let s=(0,c.d)(e,(0,d.h)(a,t));const o=(0,v.getReductionAxes)(n.shape,r);return o.length>0&&(s=(0,w.S)(s,o)),(0,x.X)(s,n.shape)},b:()=>{const t=(0,E.I)((0,m.h)(n),(0,m.h)(a));let s=(0,h.W)((0,c.d)(e,(0,d.h)(n,t)));const o=(0,v.getReductionAxes)(a.shape,r);return o.length>0&&(s=(0,w.S)(s,o)),(0,x.X)(s,a.shape)}}}},R={kernelName:o.jMg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,d.h)(e,(0,E.I)((0,m.h)((0,i.p)(n,"float32")),1))}}},F={kernelName:o.Oyi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,d.h)(e,(0,g.l)((0,p.i)(1),(0,m.h)((0,i.p)(n,"float32"))))}}};var D=n(318),O=n(8354),M=n(6147),L=n(9151),z=n(8640);const B=(0,z.op)({avgPool3dGrad_:function(e,t,n,a,r,s){const i=(0,O._1)(e,"dy","avgPool3dGrad"),c=(0,O._1)(t,"input","avgPool3dGrad");let l=i,u=c,d=!1;4===c.rank&&(d=!0,l=(0,x.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=(0,x.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),M.hu(5===l.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(l.rank,"."))),M.hu(5===u.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(u.rank,"."))),(0,L.m)("avgPool3dGrad",r,s);const h={dy:l,input:u},p={filterSize:n,strides:a,pad:r,dimRoundingMode:s},f=D.BV.runKernel(o.IMb,h,p);return d?(0,x.X)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),P={kernelName:o._k9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o,dimRoundingMode:i}=n;return{x:()=>B(e,a,r,s,o,i)}}};const V=(0,z.op)({avgPoolGrad_:function(e,t,n,a,r){const s=(0,O._1)(e,"dy","avgPoolGrad"),i=(0,O._1)(t,"input","avgPoolGrad");M.hu(i.rank===s.rank,(()=>"Rank of input (".concat(i.rank,") does not match rank of dy (").concat(s.rank,")")));let c=i,l=s,u=!1;3===i.rank&&(u=!0,c=(0,x.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=(0,x.X)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),M.hu(4===l.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(l.rank,"."))),M.hu(4===c.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,".")));const d={dy:l,input:c},h={filterSize:n,strides:a,pad:r},p=D.BV.runKernel(o.ROF,d,h);return u?(0,x.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),W={kernelName:o.JhU,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o}=n;return{x:()=>V(e,a,r,s,o)}}};var U=n(7221);const G={kernelName:o.XLW,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>(0,U.O)(e,r,!1,!1),b:()=>(0,U.O)(e,a,!0,!1)}:s&&!o?{a:()=>(0,U.O)(r,e,!1,!0),b:()=>(0,U.O)(a,e,!1,!1)}:{a:()=>(0,U.O)(r,e,!0,!0),b:()=>(0,U.O)(e,a,!0,!0)}:{a:()=>(0,U.O)(e,r,!1,!0),b:()=>(0,U.O)(a,e,!0,!1)}}};var j=n(5696);const H={kernelName:o.zws,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>(0,j.f)(e,a,r)}}},q={kernelName:o.Ly9,gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,s=a.shape,o=Array.from(s);for(let c=r.length-1;c>=0;c--)if(r[c]===s[c])o[c]=1;else if(1!==r[c])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>(0,w.S)(e,i,!0)}}},X={kernelName:o.RFZ,gradFunc:e=>({x:()=>e.clone()})},K={kernelName:o.gJX,gradFunc:e=>({x:()=>(0,I.P)(e)})};var Y=n(8327),Q=n(2642),Z=n(2177),J=n(329);const $={kernelName:o.xnO,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>(0,J.a)((0,Z.H)((0,Y.b)(a,r),(0,Q.z)(a,s)),e,(0,I.P)(e))}}},ee={kernelName:o.yj2,inputsToSave:["x"],gradFunc:u.gradFunc};var te=n(2588);const ne={kernelName:o.Eh3,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,s=(0,M.EC)(r,t[0].shape)[0],o=a.map((e=>e[s]));return(0,te.V)(e,o,s).map((e=>()=>e))}};var ae=n(8744),re=n(1045);const se={kernelName:o.mhS,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:s,strides:o,pad:i,dataFormat:c}=n;return M.hu(L.I0(s),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'"))),{x:()=>(0,re._)(a.shape,e,r,o,i,c),filter:()=>(0,ae.p)(a,e,r.shape,o,i,c)}}};var oe=n(3457);const ie={kernelName:o.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>(0,oe.T)(e,r,s,o,i,1,c),filter:()=>(0,ae.p)(e,a,r.shape,s,o,i,c)}}};const ce=(0,z.op)({conv3DBackpropFilter_:function(e,t,n,a,r){let s=e;4===e.rank&&(s=(0,x.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=(0,x.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),M.hu(5===s.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(s.shape,"."))),M.hu(5===i.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(i.shape,"."))),M.hu(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),M.hu(s.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(s.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),M.hu(i.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(i.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const c={x:s,dy:i},l={strides:a,pad:r,filterShape:n};return D.BV.runKernel(o.o2y,c,l)}});var le=n(1873);const ue={kernelName:o.x12,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s}=n;M.hu((0,L.I0)(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[o,i]=t;return{x:()=>(0,le._)(o.shape,e,i,r,s),filter:()=>ce(o,e,i.shape,r,s)}}};var de=n(7254);const he={kernelName:o.mc4,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.d)((0,h.W)((0,de.O)((0,i.p)(n,"float32"))),e)}}};var pe=n(7657);const fe={kernelName:o.TR1,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.d)((0,pe.R)((0,i.p)(n,"float32")),e)}}};var me=n(8473),ge=n(8862),ye=n(1240);const be={kernelName:o.iHb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:s,reverse:o}=n;return{x:()=>{const t=(0,me.Q3)([r],a.rank);let n=(0,ge.z)(e,r,s,!o);return null!=t&&(n=(0,ye.p)(n,t)),n}}}};var ve=n(288),xe=n(6939);const we={kernelName:o.cie,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:o}=n,i=null==a?[1,1]:a;M.hu(L.I0(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=t;return M.hu(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),M.hu(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),M.hu(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),M.hu(L.jT(r,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'."))),L.m("depthwiseConv2d",s,o),{x:()=>(0,xe.v)(c.shape,e,l,r,s,i,o),filter:()=>(0,ve.z)(c,e,l.shape,r,s,i,o)}}},ke={kernelName:o.p4S,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,s={x:a,filter:r,dy:e},i={x:a,filter:r,dy:e};return{x:()=>D.BV.runKernel(o.ekb,s,n),filter:()=>D.BV.runKernel(o.Vn9,i,n)}}},Se={kernelName:o.SX0,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>D.BV.runKernel(o.HEU,a)}}};var Ie=n(411);const Ne={kernelName:o.Omj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=(0,c.d)((0,Ie.Q)((0,h.W)((0,m.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,c.d)(e,a)}}},Te={kernelName:o.NEP,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.d)(e,n)}}},Ce={kernelName:o.YFo,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,x.X)(e,n.shape)}}},Ee={kernelName:o.Y0y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.d)(e,(0,Ie.Q)(n))}}},_e={kernelName:o.OR,gradFunc:e=>({x:()=>(0,I.P)(e)})},Ae={kernelName:o.jeX,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,v.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,d.h)(e,(0,i.p)(a,"float32")),s=(0,v.getReductionAxes)(n.shape,r);return s.length>0?(0,x.X)((0,w.S)(t,s),n.shape):t},b:()=>{let t=(0,c.d)(e,(0,i.p)(n,"float32"));const s=(0,v.getReductionAxes)(a.shape,r);s.length>0&&(t=(0,x.X)((0,w.S)(t,s),a.shape));const o=(0,m.h)(a);return(0,h.W)((0,d.h)(t,(0,i.p)(o,"float32")))}}}};var Re=n(5115),Fe=n(2343);const De={kernelName:o.sHE,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,s,o,i]=t,l=null==i?(0,p.i)(1):i,u=(0,v.getReductionAxes)(s.shape,r.shape),d=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)d.push(r.shape[e]);d.push(1)}const h=(0,g.l)(r,s),f=(0,c.d)(e,l),m=(0,Re.b)((0,E.I)(o,(0,p.i)(a))),y=(0,c.d)((0,c.d)((0,c.d)(m,m),m),(0,p.i)(-.5));return{x:()=>1===s.rank?(0,x.X)((0,c.d)((0,c.d)(e,(0,Fe.G)((0,x.X)(m,[1,1,1,s.shape[0]]),d)),l),r.shape):(0,x.X)((0,c.d)((0,c.d)(e,m),l),r.shape),mean:()=>{let e=(0,c.d)((0,c.d)(m,(0,p.i)(-1)),f);return 1===s.rank&&(e=(0,w.S)(e,u)),(0,x.X)(e,s.shape)},variance:()=>{let e=(0,c.d)((0,c.d)(y,h),f);return 1===s.rank&&(e=(0,w.S)(e,u)),(0,x.X)(e,s.shape)},scale:()=>{const t=(0,c.d)(h,m);let n=(0,c.d)(e,t);return 1===s.rank&&(n=(0,w.S)(n,u)),(0,x.X)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=(0,w.S)(t,u)),(0,x.X)(t,s.shape)}}}};var Oe=n(8306),Me=n(6918);const Le={kernelName:o.qi_,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:s,batchDims:o}=n,i=(0,M.EC)(s,a.shape)[0],c=(e,t,n)=>()=>{const a=e.shape,r=t.size,o=a.slice(0,i),c=o.length,l=a.slice(s,a.length).slice(1),u=l.length,d=ze(0,c),h=ze(c+1,c+1+u),p=Be([o,[r],l]),f=(0,x.X)(n,p),m=(0,x.X)(t,[r]),g=Be([[c],d,h]),y=(0,ye.p)(f,g);let b=(0,Me.p)(y,m,e.shape[i]);const v=(0,me.LJ)(g);return b=(0,ye.p)(b,v),b};if(1===o){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=(0,Oe.k)(n.map(((t,n)=>c(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(a.shape)},indices:()=>r}}return{x:c(a,r,e),indices:()=>r}}};function ze(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function Be(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const Pe={kernelName:o.Acj,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,I.P)(n),b:()=>(0,I.P)(a)}}},Ve={kernelName:o.iJz,gradFunc:e=>({x:()=>(0,i.p)(e,"float32")})},We={kernelName:o.avt,gradFunc:e=>({x:()=>(0,I.P)(e)})},Ue={kernelName:o.iWB,gradFunc:e=>({x:()=>(0,I.P)(e)})},Ge={kernelName:o.r7n,gradFunc:e=>({x:()=>(0,I.P)(e)})};var je=n(5014);const He={kernelName:o.J$2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,s=(0,je.p)(a,0);return{x:()=>(0,J.a)(s,e,(0,c.d)(e,r))}}},qe={kernelName:o.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,d.h)(e,(0,E.I)(n,1))}}},Xe={kernelName:o.ZbH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,d.h)(e,(0,i.p)(n,"float32"))}}},Ke={kernelName:o.qCd,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=(0,Ie.Q)(a);return(0,g.l)(e,(0,c.d)((0,w.S)(e,r,!0),t))}}}};const Ye=(0,z.op)({localResponseNormalizationBackprop_:function(e,t,n){const a={x:e,y:t,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return D.BV.runKernel(o.Hhh,a,r)}}),Qe={kernelName:o.eZ0,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:s,bias:o,alpha:i,beta:c}=n;return{x:()=>Ye(a,r,e,s,o,i,c)}}};var Ze=n(3254);function Je(e,t,n,a){return t.rank<n.rank&&(t=(0,x.X)(t,me.rv(t.shape,a))),e.rank<n.rank&&(e=(0,x.X)(e,me.rv(e.shape,a))),{x:()=>(0,c.d)(e,(0,i.p)((0,Ze.D)(n,t),e.dtype))}}const $e={kernelName:o.YoZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,s=t[0],o=Je(e,t[1],s,M.EC(r,s.shape));return{x:()=>o.x()}}};var et=n(4920);const tt={kernelName:o.BMI,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,c.d)(e,(0,i.p)((0,Y.b)(n,a),"float32")),b:()=>(0,c.d)(e,(0,i.p)((0,et.d)(n,a),"float32"))}}};const nt=(0,z.op)({maxPool3dGrad_:function(e,t,n,a,r,s,i){const c=(0,O._1)(e,"dy","maxPool3dGrad"),l=(0,O._1)(t,"input","maxPool3dGrad"),u=(0,O._1)(n,"output","maxPool3dGrad");let d=c,h=l,p=u,f=!1;4===l.rank&&(f=!0,d=(0,x.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),h=(0,x.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=(0,x.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),M.hu(5===d.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(d.rank,"."))),M.hu(5===h.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,"."))),M.hu(5===p.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(p.rank,"."))),(0,L.m)("maxPool3dGrad",s,i);const m={dy:d,input:h,output:p},g={filterSize:a,strides:r,pad:s,dimRoundingMode:i},y=D.BV.runKernel(o.OU7,m,g);return f?(0,x.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),at={kernelName:o.OAf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>nt(e,a,r,s,o,i,c)}}};const rt=(0,z.op)({maxPoolGrad_:function(e,t,n,a,r,s,i){const c=(0,O._1)(e,"dy","maxPoolGrad"),l=(0,O._1)(t,"input","maxPoolGrad"),u=(0,O._1)(n,"output","maxPoolGrad");M.hu(l.rank===c.rank,(()=>"Rank of input (".concat(l.rank,") does not match rank of dy ")+"(".concat(c.rank,")"))),M.hu(4===c.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),M.hu(4===l.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(l.rank,"."))),L.m("maxPoolGrad",s,i);const d={dy:c,input:l,output:u},h={filterSize:a,strides:r,pad:s,dimRoundingMode:i};return D.BV.runKernel(o.OV7,d,h)}}),st={kernelName:o.mTV,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>rt(e,a,r,s,o,i)}}};var ot=n(6100);const it={kernelName:o.q2K,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,s=M.EC(r,a.shape),o=(0,me.kz)(a.shape,s)[1],i=M.NA(o);return{x:()=>{const t=a.shape.slice();s.forEach((e=>{t[e]=1}));const n=(0,x.X)(e,t);return(0,d.h)((0,c.d)(n,(0,ot.i)(a.shape,"float32")),i)}}}},ct={kernelName:o.c17,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[s,o]=t,i=Je(e,o,s,M.EC(r,s.shape));return{x:()=>i.x()}}},lt={kernelName:o.q8u,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,c.d)(e,(0,i.p)((0,Q.z)(n,a),"float32")),b:()=>(0,c.d)(e,(0,i.p)((0,je.p)(n,a),"float32"))}}};var ut=n(9238);const dt={kernelName:o.jQs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>(0,ut.t)(e,s,a.shape)}}};var ht=n(2628);const pt={kernelName:o.Vbg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,v.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,v.getReductionAxes)(n.shape,r);return t.length>0?(0,x.X)((0,w.S)(e,t),n.shape):e},b:()=>{const t=(0,c.d)(e,(0,h.W)((0,ht.G)((0,d.h)(n,a)))),s=(0,v.getReductionAxes)(a.shape,r);return s.length>0?(0,x.X)((0,w.S)(t,s),a.shape):t}}}},ft={kernelName:o.wYn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,v.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,c.d)(e,(0,i.p)(a,"float32")),s=(0,v.getReductionAxes)(n.shape,r);return s.length>0?(0,x.X)((0,w.S)(t,s),n.shape):t},b:()=>{const t=(0,c.d)(e,(0,i.p)(n,"float32")),s=(0,v.getReductionAxes)(a.shape,r);return s.length>0?(0,x.X)((0,w.S)(t,s),a.shape):t}}}},mt={kernelName:o.kuV,gradFunc:e=>({x:()=>(0,h.W)(e)})};var gt=n(7742);const yt={kernelName:o.we_,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,gt.l)(n.shape,"float32")}}},bt={kernelName:o.qWM,gradFunc:e=>({x:()=>(0,I.P)(e)})};var vt=n(4566);const xt={kernelName:o.QiL,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return(0,vt.H)(e,a).map((e=>()=>e))}},wt={kernelName:o.lyA,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>(0,ut.t)(e,s,a.shape)}}};var kt=n(378),St=n(4334);const It={kernelName:o.pe_,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,s=n,o=a,l=v.assertAndGetBroadcastShape(s.shape,o.shape);return{a:()=>{const t=(0,i.p)(o,"float32");let n=(0,c.d)(e,(0,c.d)(t,(0,St.s)(s,(0,g.l)(t,(0,p.i)(1)))));const a=v.getReductionAxes(s.shape,l);return a.length>0&&(n=(0,w.S)(n,a)),(0,x.X)(n,s.shape)},b:()=>{const t=(0,je.p)(s,0),n=(0,J.a)(t,(0,kt.c)(s),(0,I.P)(s));let a=(0,c.d)(e,(0,c.d)(r,n));const i=v.getReductionAxes(o.shape,l);return i.length>0&&(a=(0,w.S)(a,i)),(0,x.X)(a,o.shape)}}}},Nt={kernelName:o.o0g,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,je.p)(n,0);return{x:()=>(0,J.a)(r,e,(0,c.d)(e,a)),alpha:()=>{let t=(0,J.a)(r,(0,I.P)(e),(0,c.d)(e,n));const s=(0,v.getReductionAxes)(a.shape,e.shape);return s.length>0&&(t=(0,w.S)(t,s)),(0,x.X)(t,a.shape)}}}};var Tt=n(9457);function Ct(e,t,n){const a=e.shape.length,r=a-n.length,s=me.Q3(n,a);let o=e;null!=s&&(o=(0,ye.p)(e,s));const i=o.shape.slice(),l=i.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(l);let u=function(e,t,n){const a=e.shape.slice();a[n]=1;const r=(0,x.X)(t,a),s=(0,Tt.$)(e,n,!0,!1),o=(0,Tt.$)(e,n,!0,!0),i=(0,c.d)(s,o);return(0,c.d)(r,i)}(o.reshape(i),t,r);if(u=u.reshape(o.shape),null!=s){const e=me.LJ(s);u=(0,ye.p)(u,e)}return u}const Et={kernelName:o.DlI,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;let s=[];return s=void 0===r||null===r?a.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>Ct(a,e,s)}}},_t={kernelName:o.oHH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=v.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{const t=(0,d.h)(e,(0,i.p)(a,"float32")),s=v.getReductionAxes(n.shape,r);return s.length>0?(0,x.X)((0,w.S)(t,s),n.shape):t},b:()=>{let t=(0,c.d)(e,(0,i.p)(n,"float32"));const s=v.getReductionAxes(a.shape,r);s.length>0&&(t=(0,x.X)((0,w.S)(t,s),a.shape));const o=(0,m.h)(a);return(0,h.W)((0,d.h)(t,(0,i.p)(o,"float32")))}}}},At={kernelName:o.$HU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,d.h)(e,(0,h.W)((0,m.h)(n)))}}},Rt={kernelName:o.SbG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=(0,c.d)((0,Q.z)(n,6),(0,l.N)(n));return{x:()=>(0,c.d)(e,(0,i.p)(a,"float32"))}}},Ft={kernelName:o.qkr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.d)(e,(0,i.p)((0,l.N)(n),"float32"))}}},Dt={kernelName:o.HZH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,x.X)(e,n.shape)}}},Ot={kernelName:o._Yw,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>D.BV.runKernel(o.zbQ,r,n)}}},Mt={kernelName:o.dpD,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>D.BV.runKernel(o.Hmb,r,n)}}};var Lt=n(4933);const zt={kernelName:o.mKl,gradFunc:(e,t,n)=>{const{dims:a}=n,r=(0,M.EC)(a,e.shape);return{x:()=>(0,Lt.G)(e,r)}}},Bt={kernelName:o.e07,gradFunc:e=>({x:()=>(0,I.P)(e)})},Pt={kernelName:o.bV0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,h.W)((0,d.h)(e,(0,c.d)((0,St.s)(n,1.5),2)))}}};var Vt=n(875);const Wt={kernelName:o.PhF,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,i.p)((0,I.P)(n),"float32"),t:()=>(0,c.d)(e,(0,i.p)(n,e.dtype)),e:()=>(0,c.d)(e,(0,i.p)((0,Vt.h)(n),e.dtype))}}};var Ut=n(349);const Gt={kernelName:o.oFR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,je.p)(n,(0,p.i)(0)),a=(0,p.i)(Ut.y),r=(0,p.i)(Ut.$),s=(0,c.d)(e,r),o=(0,c.d)((0,c.d)(e,a),(0,Ie.Q)((0,i.p)(n,"float32")));return(0,J.a)(t,s,o)}}}},jt={kernelName:o.a5O,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.d)(e,(0,c.d)(n,(0,g.l)((0,p.i)(1),n)))}}},Ht={kernelName:o.i5y,gradFunc:e=>({x:()=>(0,I.P)(e)})};var qt=n(1227);const Xt={kernelName:o.RQH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.d)((0,qt.m)((0,i.p)(n,"float32")),e)}}};var Kt=n(6679);const Yt={kernelName:o.wYB,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.d)((0,Kt.f)((0,i.p)(n,"float32")),e)}}};var Qt=n(1970),Zt=n(2875);const Jt={kernelName:o.p2w,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:s}=n,o=a.shape,[i,c]=(0,Zt.parseSliceParams)(a,r,s),l=[];for(let u=0;u<e.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>(0,Qt.v)(e,l)}}},$t={kernelName:o.Gcp,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,s=(0,c.d)(e,a);return{logits:()=>(0,g.l)(s,(0,c.d)((0,w.S)(s,[r],true),a))}}};var en=n(7643);const tn={kernelName:o.MRv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.d)(e,(0,en.X)(n))}}};var nn=n(6994);const an={kernelName:o.TQc,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>(0,nn.E)(e,a,r)}}};var rn=n(4836);const sn={kernelName:o.L8s,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>(0,rn.z)(e,a)}}},on={kernelName:o.FKq,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,d.h)(e,(0,c.d)((0,f._)((0,i.p)(n,"float32")),2))}}},cn={kernelName:o.bK0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.d)(e,(0,c.d)((0,i.p)(n,"float32"),2))}}},ln={kernelName:o._tC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,p.i)(2);return{a:()=>(0,c.d)(e,(0,c.d)(r,(0,g.l)(n,a))),b:()=>(0,c.d)(e,(0,c.d)(r,(0,g.l)(a,n)))}}},un={kernelName:o.h8e,gradFunc:e=>({x:()=>(0,I.P)(e)})},dn={kernelName:o.Tr8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=v.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let t=e;const a=v.getReductionAxes(n.shape,r);return a.length>0&&(t=(0,w.S)(t,a)),(0,x.X)(t,n.shape)},b:()=>{let t=e;const n=v.getReductionAxes(a.shape,r);return n.length>0&&(t=(0,w.S)(t,n)),(0,x.X)((0,h.W)(t),a.shape)}}}},hn={kernelName:o.GBy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:s}=n;(0,M.EC)(s,a.shape).forEach((e=>{r[e]=1}));const o=(0,x.X)(e,r),i=(0,c.d)(o,(0,ot.i)(a.shape,"float32"));return{x:()=>i}}},pn={kernelName:o.sEM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,d.h)(e,(0,m.h)((0,qt.m)(n)))}}},fn={kernelName:o.MIZ,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,c.d)((0,g.l)((0,p.i)(1),(0,m.h)(n)),e)}}},mn={kernelName:o.n9L,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=(0,I.P)(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=(0,E.I)(t,(0,ut.t)(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=(0,E.I)(t,(0,ut.t)(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)t=(0,E.I)(t,(0,ut.t)(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)for(let i=0;i<r[3];++i)t=(0,E.I)(t,(0,ut.t)(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},gn={kernelName:o.G3Y,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,s=me.LJ(r);return{x:()=>(0,ye.p)(e,s)}}},yn={kernelName:o.ToN,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>(0,Oe.k)(e,r)}}};var bn=n(2975),vn=n(9498),xn=n(705);const wn={kernelName:o.Qvg,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,xn.g)(t,(0,I.P)(t)),a=(0,vn.I)(e,n);let r=(0,Y.b)(t,(0,p.i)(0,"int32"));const s=a.rank-r.rank;for(let i=0;i<s;++i)r=(0,bn.d)(r,i+1);r=(0,Z.H)(r,(0,ot.i)(a.shape,"bool"));const o=(0,I.P)(a);return(0,J.a)(r,a,o)}(e,n)}}};const kn={kernelName:o.RuY,gradFunc:e=>({x:()=>(0,I.P)(e)})};var Sn=n(8864);const In=[u,y,b,k,S,N,T,C,_,A,R,F,P,W,G,H,q,X,K,$,ee,ne,ie,se,ue,he,fe,be,we,ke,_t,Se,Ne,Te,Ce,Ee,Ae,_e,De,Le,Pe,Ve,We,Ue,Ge,He,qe,Xe,Ke,Qe,$e,$e,tt,at,st,it,ct,lt,dt,pt,ft,mt,yt,bt,xt,wt,wt,It,Nt,Et,At,Rt,Ft,Dt,Ot,Mt,zt,Bt,Pt,Wt,Gt,jt,Ht,Xt,Yt,Jt,$t,tn,an,an,sn,sn,on,ln,cn,un,dn,hn,pn,fn,mn,gn,yn,wn,kn];for(const n of In)(0,Sn.Li)(n);var Nn=n(7613),Tn=n(4376);(0,Tn.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,Nn.W)(this)};var Cn=n(1719);(0,Tn.t3)().prototype.acos=function(){return this.throwIfDisposed(),(0,Cn.K)(this)};var En=n(4502);(0,Tn.t3)().prototype.acosh=function(){return this.throwIfDisposed(),(0,En._)(this)},(0,Tn.t3)().prototype.add=function(e){return this.throwIfDisposed(),(0,E.I)(this,e)};var _n=n(4108);(0,Tn.t3)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,_n.$)(this,e,t)};var An=n(8543);(0,Tn.t3)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,An.Y)(this,e,t)};var Rn=n(9995);(0,Tn.t3)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,Rn.N)(this,e)};var Fn=n(5157);(0,Tn.t3)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,Fn.v)(this,e)},(0,Tn.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,M.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,x.X)(this,[])},(0,Tn.t3)().prototype.asType=function(e){return this.throwIfDisposed(),(0,i.p)(this,e)},(0,Tn.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,x.X)(this,[this.size])},(0,Tn.t3)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,x.X)(this,[e,t])},(0,Tn.t3)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,x.X)(this,[e,t,n])},(0,Tn.t3)().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),(0,x.X)(this,[e,t,n,a])},(0,Tn.t3)().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),(0,x.X)(this,[e,t,n,a,r])};var Dn=n(3053);(0,Tn.t3)().prototype.asin=function(){return this.throwIfDisposed(),(0,Dn.Z)(this)};var On=n(54);(0,Tn.t3)().prototype.asinh=function(){return this.throwIfDisposed(),(0,On.V)(this)};var Mn=n(4778);(0,Tn.t3)().prototype.atan=function(){return this.throwIfDisposed(),(0,Mn.z)(this)};var Ln=n(2227);(0,Tn.t3)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,Ln.f)(this,e)};var zn=n(7897);(0,Tn.t3)().prototype.atanh=function(){return this.throwIfDisposed(),(0,zn.C)(this)};var Bn=n(9204);(0,Tn.t3)().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),(0,Bn.w)(this,e,t,n,a)},(0,Tn.t3)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,nn.E)(this,e,t)};var Pn=n(3700);(0,Tn.t3)().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),(0,Pn.t)(this,e,t,n,a,r)};var Vn=n(9742);(0,Tn.t3)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,Vn.U)(this,e)},(0,Tn.t3)().prototype.cast=function(e){return this.throwIfDisposed(),(0,i.p)(this,e)};var Wn=n(1396);(0,Tn.t3)().prototype.ceil=function(){return this.throwIfDisposed(),(0,Wn.m)(this)};var Un=n(9836);(0,Tn.t3)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,Un.i)(this,e,t)},(0,Tn.t3)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Tn.es&&(e=[e]),(0,rn.z)([this,...e],t)};var Gn=n(4918);(0,Tn.t3)().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,Gn.P)(this,e,t,n,a,r,s)};var jn=n(1732);(0,Tn.t3)().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),(0,jn.b)(this,e,t,n,a,r)},(0,Tn.t3)().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,oe.T)(this,e,t,n,a,r,s)},(0,Tn.t3)().prototype.cos=function(){return this.throwIfDisposed(),(0,qt.m)(this)},(0,Tn.t3)().prototype.cosh=function(){return this.throwIfDisposed(),(0,Kt.f)(this)},(0,Tn.t3)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),(0,Tt.$)(this,e,t,n)},(0,Tn.t3)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,ge.z)(this,e,t,n)};var Hn=n(1878);(0,Tn.t3)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,Hn.n)(this,e,t)};var qn=n(1147);(0,Tn.t3)().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,qn.B)(this,e,t,n,a,r,s)};var Xn=n(7580);(0,Tn.t3)().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),(0,Xn.W)(this,e,t,n,a,r)};var Kn=n(5923);(0,Tn.t3)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,Kn.N)(this,e)},(0,Tn.t3)().prototype.div=function(e){return this.throwIfDisposed(),(0,d.h)(this,e)};var Yn=n(5043);(0,Tn.t3)().prototype.dot=function(e){return this.throwIfDisposed(),(0,Yn.A)(this,e)};var Qn=n(2353);(0,Tn.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,Qn.p)(this)},(0,Tn.t3)().prototype.equal=function(e){return this.throwIfDisposed(),(0,Ze.D)(this,e)};var Zn=n(3891);(0,Tn.t3)().prototype.erf=function(){return this.throwIfDisposed(),(0,Zn.q)(this)};var Jn=n(3313);(0,Tn.t3)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,Jn.d)(this,e,t)},(0,Tn.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,Ie.Q)(this)},(0,Tn.t3)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,bn.d)(this,e)};var $n=n(5682);(0,Tn.t3)().prototype.expm1=function(){return this.throwIfDisposed(),(0,$n.t)(this)};var ea=n(7635);(0,Tn.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,ea.k)(this)},(0,Tn.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,x.X)(this,[this.size])},(0,Tn.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,ht.G)(this)};var ta=n(7145);(0,Tn.t3)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,ta.q)(this,e)},(0,Tn.t3)().prototype.gather=function(e,t,n){return this.throwIfDisposed(),(0,vn.I)(this,e,t,n)},(0,Tn.t3)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,Y.b)(this,e)},(0,Tn.t3)().prototype.greater=function(e){return this.throwIfDisposed(),(0,je.p)(this,e)};var na=n(530);(0,Tn.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,na.S)(this)};var aa=n(774);(0,Tn.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,aa.w)(this)};var ra=n(300);(0,Tn.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,ra.x)(this)};var sa=n(4652);(0,Tn.t3)().prototype.isInf=function(){return this.throwIfDisposed(),(0,sa.U)(this)};var oa=n(7005);(0,Tn.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,oa.i)(this)};var ia=n(4419);(0,Tn.t3)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,ia.h)(this,e)},(0,Tn.t3)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,Q.z)(this,e)},(0,Tn.t3)().prototype.less=function(e){return this.throwIfDisposed(),(0,et.d)(this,e)};var ca=n(936);(0,Tn.t3)().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),(0,ca.G)(this,e,t,n,a)};var la=n(5113);(0,Tn.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,la.e)(this)};var ua=n(4561);(0,Tn.t3)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,ua.C)(this,e)};var da=n(5530);(0,Tn.t3)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,da.l)(this,e,t)},(0,Tn.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,kt.c)(this)};var ha=n(5341);(0,Tn.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,ha.K)(this)},(0,Tn.t3)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,Z.H)(this,e)},(0,Tn.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Vt.h)(this)};var pa=n(5117);(0,Tn.t3)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,pa.K)(this,e)};var fa=n(1712);(0,Tn.t3)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,fa.e)(this,e)},(0,Tn.t3)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,U.O)(this,e,t,n)};var ma=n(5777);(0,Tn.t3)().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),(0,ma._)(this,e,t,n,a)};var ga=n(6176);(0,Tn.t3)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,ga.F)(this,e,t)},(0,Tn.t3)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,xn.g)(this,e)};var ya=n(6568);(0,Tn.t3)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,ya.J)(this,e,t)};var ba=n(7891);(0,Tn.t3)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,ba.V)(this,e,t)};var va=n(2273);(0,Tn.t3)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,va.L)(this,e)};var xa=n(9719);(0,Tn.t3)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,xa.V)(this,e,t)};var wa=n(4645);(0,Tn.t3)().prototype.mod=function(e){return this.throwIfDisposed(),(0,wa.w)(this,e)},(0,Tn.t3)().prototype.mul=function(e){return this.throwIfDisposed(),(0,c.d)(this,e)},(0,Tn.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,h.W)(this)};var ka=n(6662);(0,Tn.t3)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,ka.K)(this,e,t,n)};var Sa=n(5549);(0,Tn.t3)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,Sa.Q)(this,e)};var Ia=n(4326);(0,Tn.t3)().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),(0,Ia.l)(this,e,t,n)};var Na=n(773);(0,Tn.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Na.J)(this)},(0,Tn.t3)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,Qt.v)(this,e,t)};var Ta=n(7226);(0,Tn.t3)().prototype.pool=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,Ta.d)(this,e,t,n,a,r,s)},(0,Tn.t3)().prototype.pow=function(e){return this.throwIfDisposed(),(0,St.s)(this,e)};var Ca=n(6859);(0,Tn.t3)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,Ca.A)(this,e)};var Ea=n(7722);(0,Tn.t3)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Ea.W)(this,e,t)};var _a=n(2209);(0,Tn.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,_a.M)(this)};var Aa=n(7539);(0,Tn.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,Aa.U)(this)};var Ra=n(5900);(0,Tn.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Ra.b)(this)},(0,Tn.t3)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,x.X)(this,e.shape)},(0,Tn.t3)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,x.X)(this,e)};var Fa=n(464);(0,Tn.t3)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Fa.I)(this,e,t,n)};var Da=n(8600);(0,Tn.t3)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,Da.j)(this,e,t,n)},(0,Tn.t3)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,Lt.G)(this,e)};var Oa=n(4617);(0,Tn.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Oa.Q)(this)};var Ma=n(766);(0,Tn.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,Ma.N)(this)},(0,Tn.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,Re.b)(this)};var La=n(413);(0,Tn.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,La.U)(this)};var za=n(119);(0,Tn.t3)().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,za.U)(this,e,t,n,a,r,s)},(0,Tn.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,en.X)(this)};var Ba=n(2070);(0,Tn.t3)().prototype.sign=function(){return this.throwIfDisposed(),(0,Ba.X)(this)},(0,Tn.t3)().prototype.sin=function(){return this.throwIfDisposed(),(0,de.O)(this)},(0,Tn.t3)().prototype.sinh=function(){return this.throwIfDisposed(),(0,pe.R)(this)},(0,Tn.t3)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,ut.t)(this,e,t)};var Pa=n(4910);(0,Tn.t3)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,Pa.X)(this,e)};var Va=n(4626);(0,Tn.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,Va.W)(this)},(0,Tn.t3)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,j.f)(this,e,t)},(0,Tn.t3)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,te.V)(this,e,t)},(0,Tn.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,f._)(this)},(0,Tn.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,m.h)(this)};var Wa=n(7993);(0,Tn.t3)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,Wa.$)(this,e)};var Ua=n(3931);(0,Tn.t3)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,Ua.L)(this,e)},(0,Tn.t3)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Tn.es?[this,e]:[this,...e];return(0,Oe.k)(n,t)},(0,Tn.t3)().prototype.step=function(e){return this.throwIfDisposed(),(0,l.N)(this,e)};var Ga=n(9017);(0,Tn.t3)().prototype.stridedSlice=function(e,t,n,a,r,s,o,i){return this.throwIfDisposed(),(0,Ga.N)(this,e,t,n,a,r,s,o,i)},(0,Tn.t3)().prototype.sub=function(e){return this.throwIfDisposed(),(0,g.l)(this,e)},(0,Tn.t3)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,w.S)(this,e,t)};var ja=n(6999);(0,Tn.t3)().prototype.tan=function(){return this.throwIfDisposed(),(0,ja.O)(this)};var Ha=n(1744);(0,Tn.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Ha.A)(this)},(0,Tn.t3)().prototype.tile=function(e){return this.throwIfDisposed(),(0,Fe.G)(this,e)},(0,Tn.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,i.p)(this,"bool")},(0,Tn.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,i.p)(this,"float32")},(0,Tn.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,i.p)(this,"int32")};var qa=n(9085);(0,Tn.t3)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,qa.h)(this,e,t)},(0,Tn.t3)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,ye.p)(this,e)};var Xa=n(4860);(0,Tn.t3)().prototype.unique=function(e){return this.throwIfDisposed(),(0,Xa.T)(this,e)},(0,Tn.t3)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,Me.p)(this,e,t)},(0,Tn.t3)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,vt.H)(this,e)},(0,Tn.t3)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,J.a)(e,this,t)},(0,Tn.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,I.P)(this)};class Ka extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ka.prototype)}}class Ya extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ya.prototype)}}class Qa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qa.prototype)}}class Za extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Za.prototype)}}class Ja extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ja.prototype)}}class $a{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(e,"."));if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function er(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function tr(e,t){if(!e)throw new Ja(t)}function nr(e,t){let n=0;for(const a of e)a===t&&n++;return n}function ar(e){return 1===e.length?e[0]:e}function rr(e){return Array.isArray(e)?e:[e]}function sr(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function or(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let ir={};function cr(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function lr(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>lr(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?lr(t):e[n]=t.value)}}}function ur(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const r=e;let s;if(r in n)s=n[r];else if(r in ir)s=ir[r];else if(s=t[r],null==s)throw new Qa("Unknown ".concat(a,": ").concat(e,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=e;if(null==s.className||null==s.config)throw new Qa("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(s),".\n")+"'className' and 'config' must set.");const o=s.className;let i,c;if(o in n?[i,c]=n[o]:o in ir?[i,c]=ir.className:o in t&&([i,c]=t[o]),null==i)throw new Qa("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const e={};for(const n of Object.keys(ir))e[n]=ir[n];for(const r of Object.keys(n))e[r]=n[r];s.config.customObjects=e;const t=Object.assign({},ir);for(const r of Object.keys(n))ir[r]=n[r];lr(s.config);const a=c(i,s.config,n,r);return ir=Object.assign({},t),a}{const e=Object.assign({},ir);for(const a of Object.keys(n))ir[a]=n[a];const t=new i(s.config);return ir=Object.assign({},e),t}}}function dr(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function hr(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function pr(e){if(null==e)throw new Qa("Invalid value in obj: ".concat(JSON.stringify(e)));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function fr(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Qa("".concat(n," is not a valid ").concat(t,".  Valid values are ").concat(e," or null/undefined."))}function mr(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return tr(n>=0),tr(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function gr(e,t){Array.isArray(e)?(s.util.assert(e.length>0,(()=>"".concat(t," is unexpectedly an empty array."))),e.forEach(((e,n)=>gr(e,"element ".concat(n+1," of ").concat(t))))):s.util.assert(Number.isInteger(e)&&e>0,(()=>"Expected ".concat(t," to be a positive integer, but got ")+"".concat(yr(e),".")))}function yr(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>yr(e))).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}function br(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let vr=0;function xr(){return vr++}const wr={};function kr(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in wr||(wr[e]=0),wr[e]+=1,e+wr[e].toString()}const Sr=["channelsFirst","channelsLast"],Ir=["nearest","bilinear"],Nr=["valid","same","causal"],Tr=["max","avg"],Cr=["sum","mul","concat","ave"],Er=new Map;function _r(e){fr(Sr,"DataFormat",e)}function Ar(e){fr(Nr,"PaddingMode",e)}function Rr(e){fr(Tr,"PoolMode",e)}const Fr=[],Dr="/";function Or(e,t){Fr.push(e);try{const e=t();return Fr.pop(),e}catch(n){throw Fr.pop(),n}}function Mr(e){if(!Br(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Fr.length?"":Fr.join(Dr)+Dr)+e}function Lr(e){if(!Br(e))throw new Error("Not a valid tensor name: '"+e+"'");Er.has(e)||Er.set(e,0);const t=Er.get(e);if(Er.set(e,Er.get(e)+1),t>0){const n="".concat(e,"_").concat(t);return Er.set(n,1),n}return e}const zr=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Br(e){return!!e.match(zr)}function Pr(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function Vr(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function Wr(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function Ur(e,t){if(t<e)throw new Qa("end (".concat(t,") < begin (").concat(e,") is forbidden."));const n=[];for(let a=e;a<t;++a)n.push(a);return n}let Gr;function jr(){return null==Gr&&(Gr=(0,s.backend)().epsilon()),Gr}function Hr(e,t){return s.cast(e,t)}function qr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),s.reshape(e,n)}function Xr(e,t,n){return(0,s.tidy)((()=>{switch(e.rank){case 1:return s.slice1d(e,t,n);case 2:return s.slice2d(e,[t,0],[n,e.shape[1]]);case 3:return s.slice3d(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return s.slice4d(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return s.slice(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return s.slice(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Qa("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Kr(e,t,n){return(0,s.tidy)((()=>{switch(e.rank){case 1:return s.slice1d(e,t,n);case 2:return s.slice2d(e,[0,t],[e.shape[0],n]);case 3:return s.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return s.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Qa("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Yr(e,t,n,a){return(0,s.tidy)((()=>{switch(e.rank){case 1:return s.slice1d(e,t,n);case 2:switch(a){case 1:return Xr(e,t,n);case 2:return Kr(e,t,n);default:throw new Qa("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return Xr(e,t,n);case 2:return s.slice3d(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Kr(e,t,n);default:throw new Qa("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return Xr(e,t,n);case 2:return s.slice4d(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return s.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Kr(e,t,n);default:throw new Qa("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new Qa("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Qr(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),s.concat(e,n)}function Zr(e,t){switch(e.rank){case 1:return s.concat1d([e,t]);case 2:return s.concat2d([e,t],0);case 3:return s.concat3d([e,t],0);case 4:return s.concat4d([e,t],0);default:throw new Qa("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(e.rank))}}function Jr(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Qa("The length of input n (".concat(t.length,") does not match ")+"the number of dimensions in input x (".concat(e.rank,")"));return s.tile(e,t)}function $r(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;return s.randomNormal(e,t,n,a,r)}function es(e,t,n,a){if(e.rank<2||t.rank<2)throw new Za("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(e.shape," and y shape = ").concat(t.shape));if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Za("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(e.shape," and ")+" y shape = ".concat(t.shape))}if(2===e.rank&&2===t.rank){const r=!1,o=!1;return s.fused.matMul({a:e,b:t,transposeA:r,transposeB:o,bias:a?as(e.rank,a,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),o=r.pop();e=s.reshape(e,[-1,o]);const i=t.shape.slice(),c=i.pop(),l=i.pop(),u=[...i,c],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=s.reshape(s.transpose(t,d),[l,-1]);const h=[...r,...u],p=!1,f=!1;return s.reshape(s.fused.matMul({a:e,b:t,transposeA:p,transposeB:f,bias:a?as(e.rank,a,"channelsLast"):null,activation:n}),h)}}function ts(e,t,n){return(0,s.tidy)((()=>(t=Array.isArray(t)?(0,s.tensor1d)(t,"int32"):s.cast(t,"int32"),s.gather(e,t,n))))}function ns(e){return s.mul(e,e)}function as(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new Qa("Unexpected bias dimensions: ".concat(t.rank)+"; expected it to be 1 or ".concat(e));if(5===e){if("channelsFirst"===n)return 1===a.length?s.reshape(t,[1,a[0],1,1,1]):s.reshape(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?s.reshape(t,[1,1,1,1,a[0]]):s.reshape(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?s.reshape(t,[1,a[0],1,1]):s.reshape(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?s.reshape(t,[1,1,1,a[0]]):s.reshape(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?s.reshape(t,[1,a[0],1]):s.reshape(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?s.reshape(t,[1,1,a[0]]):s.reshape(t,[1].concat(a))}else if(e<3)return t;throw new Qa("Unsupported input rank by biasAdd: ".concat(t.rank))}function rs(e,t,n){return(0,s.tidy)((()=>(null==n&&(n="channelsLast"),_r(n),s.add(e,as(e.rank,t,n)))))}function ss(e,t,n,a){return(0,s.tidy)((()=>s.dropout(e,t,n,a)))}function os(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const is=["fanIn","fanOut","fanAvg"],cs=["normal","uniform","truncatedNormal"];class ls extends s.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class us extends ls{apply(e,t){return(0,s.zeros)(e,t)}}us.className="Zeros",s.serialization.registerClass(us);class ds extends ls{apply(e,t){return(0,s.ones)(e,t)}}ds.className="Ones",s.serialization.registerClass(ds);class hs extends ls{constructor(e){if(super(),"object"!==typeof e)throw new Qa("Expected argument of type ConstantConfig but got ".concat(e));if(void 0===e.value)throw new Qa("config must have value set but got ".concat(e));this.value=e.value}apply(e,t){return(0,s.tidy)((()=>(0,s.mul)((0,s.scalar)(this.value),(0,s.ones)(e,t))))}getConfig(){return{value:this.value}}}hs.className="Constant",s.serialization.registerClass(hs);class ps extends ls{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,s.randomUniform)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ps.className="RandomUniform",s.serialization.registerClass(ps);class fs extends ls{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Za("randomNormal does not support dType ".concat(t,"."));return $r(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}fs.className="RandomNormal",s.serialization.registerClass(fs);class ms extends ls{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Za("truncatedNormal does not support dType ".concat(t,"."));return(0,s.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ms.className="TruncatedNormal",s.serialization.registerClass(ms);class gs extends ls{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,s.tidy)((()=>{if(2!==e.length||e[0]!==e[1])throw new Qa("Identity matrix initializer can only be used for 2D square matrices.");return(0,s.mul)(this.gain,(0,s.eye)(e[0]))}))}getConfig(){return{gain:this.gain}}}gs.className="Identity",s.serialization.registerClass(gs);class ys extends ls{constructor(e){if(super(),e.scale<0)throw new Qa("scale must be a positive float. Got: ".concat(e.scale));var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,fr(is,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){fr(cs,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(_r(a),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===a){const a=Pr(e,2);t=e[1]*a,n=e[0]*a}else if("channelsLast"===a){const a=Pr(e,0,e.length-2);t=e[e.length-2]*a,n=e[e.length-1]*a}}else{const a=Pr(e);t=Math.sqrt(a),n=Math.sqrt(a)}return[t,n]}(e),a=n[0],r=n[1];let o=this.scale;if("fanIn"===this.mode?o/=Math.max(1,a):"fanOut"===this.mode?o/=Math.max(1,r):o/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(o);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Za("".concat(this.getClassName()," does not support dType ").concat(t,"."));return(0,s.truncatedNormal)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*o);return(0,s.randomUniform)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ys.className="VarianceScaling",s.serialization.registerClass(ys);class bs extends ys{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ys.className}}bs.className="GlorotUniform",s.serialization.registerClass(bs);class vs extends ys{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ys.className}}vs.className="GlorotNormal",s.serialization.registerClass(vs);class xs extends ys{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ys.className}}xs.className="HeNormal",s.serialization.registerClass(xs);class ws extends ys{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ys.className}}ws.className="HeUniform",s.serialization.registerClass(ws);class ks extends ys{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ys.className}}ks.className="LeCunNormal",s.serialization.registerClass(ks);class Ss extends ys{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ys.className}}Ss.className="LeCunUniform",s.serialization.registerClass(Ss);class Is extends ls{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,s.tidy)((()=>{if(e.length<2)throw new Za("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError("Unsupported data type ".concat(t,"."));const n=s.util.sizeFromShape(e.slice(0,-1)),a=e[e.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(r,") elements: ")+"Slowness may result.");const o=$r([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),i=s.linalg.qr(o,!1);let c=i[0];const l=i[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return c=(0,s.mul)(c,l.sign()),n<a&&(c=c.transpose()),(0,s.mul)((0,s.scalar)(this.gain),c.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Is.className="Orthogonal",s.serialization.registerClass(Is);const Ns={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ts(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ur(e,s.serialization.SerializationMap.getMap().classNameMap,t,"initializer")}function Cs(e){return cr(e)}function Es(e){if("string"===typeof e){const t=e in Ns?Ns[e]:e;if("GlorotNormal"===t)return new vs;if("GlorotUniform"===t)return new bs;if("HeNormal"===t)return new xs;if("HeUniform"===t)return new ws;if("LeCunNormal"===t)return new ks;if("LeCunUniform"===t)return new Ss;{const e={};return e.className=t,e.config={},Ts(e)}}return e instanceof ls?e:Ts(e)}function _s(e){return Array.isArray(e)&&Array.isArray(e[0])}function As(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Rs(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Qa("Expected Tensor length to be 1; got ".concat(e.length));t=e[0]}else t=e;return t}function Fs(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Qa("Expected exactly 1 Shape; got ".concat(e.length))}return e}function Ds(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Os="Variable";class Ms{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Os,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=xr(),n=null==n?Os:n,this.originalName=Mr(n),this.name=Lr(this.originalName),this.trainable_=a,this.constraint=r,this.val=s.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Ls(e){return e.map((e=>e.read()))}function zs(e){e.forEach((e=>{e[0].write(e[1])}))}class Bs{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Ps{constructor(e,t,n,a,r,s,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=xr(),null!=s&&(this.originalName=Mr(s),this.name=Lr(this.originalName)),this.rank=t.length}}let Vs=0;class Ws{constructor(e,t){this.callArgs=t,this.id=Vs++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Us=0;class Gs extends s.serialization.Serializable{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Us++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=sr(e)+"_"+kr(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Ya("The layer has never been called "+"and thus has no defined ".concat(t,"."));if(this.inboundNodes.length<=e)throw new Qa("Asked to get ".concat(t," at node ").concat(e,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[e]}getInputAt(e){return ar(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ar(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ka("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Ka("Layer ".concat(this.name)+" is not connected, no input to return.");return ar(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Ka("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Ka("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return ar(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=rr(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=rr(this.inputSpec);if(t.length!==n.length)throw new Qa("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(e));for(let a=0;a<t.length;a++){const e=t[a],r=n[a];if(null==r)continue;const s=e.rank;if(null!=r.ndim&&s!==r.ndim)throw new Qa("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(s));if(null!=r.maxNDim&&s>r.maxNDim)throw new Qa("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(s));if(null!=r.minNDim&&s<r.minNDim)throw new Qa("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(s,"."));if(null!=r.dtype&&e.dtype!==r.dtype)throw new Qa("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(e.dtype,"."));if(r.axes){const t=e.shape;for(const e in r.axes){const n=Number(e),s=r.axes[e],o=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(o))throw new Qa("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(s," but got shape ").concat(t,"."))}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new Qa("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(e.shape,"."))}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=rr(e),a=function(e){let t=!0;for(const n of rr(e))if(!(n instanceof Ps)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of rr(e))if(n instanceof Ps){t=!1;break}return t}(e);if(a===r)throw new Qa("Arguments to apply() must be all SymbolicTensors or all Tensors");return Or(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of rr(e))t.push(n.shape);this.build(ar(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const r=rr(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=ar(s),null!=this.activityRegularizer)throw new Za("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=rr(e);const t=[];for(const n of e)t.push(n.shape);return ar(t)}(e),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new Ps(s,n,this,rr(e),t,this.name,a))):new Ps(s,a,this,rr(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new Za("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(e),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(e),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Ka("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Ka("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new Ya("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Ds(this.weights)}build(e){this.built=!0}getWeights(){return Ls(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){(0,s.tidy)((()=>{const t=this.weights;if(t.length!==e.length)throw new Qa('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(e.length,", ")+"but the layer was expecting ".concat(t.length," weights. ")+"Provided weights: ".concat(e,"..."));if(0===t.length)return;const n=[],a=Ls(t);for(let r=0;r<a.length;++r){const o=a[r],i=t[r],c=e[r];if(!s.util.arraysEqual(o.shape,c.shape))throw new Qa("Layer weight shape ".concat(o.shape," ")+"not compatible with provided weight shape ".concat(c.shape));n.push([i,c])}zs(n)}))}addWeight(e,t,n,a,r,s,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Qa("Duplicate weight name ".concat(e," for layer ").concat(this.name));this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():Es("zeros"));const c=a.apply(t,n),l=new Ms(c,n,e,s,o);return c.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=rr(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");t.forEach((e=>{if(null!=e)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),r=rr(t),s=rr(a);if(r.length!==s.length)throw new Error("".concat(this.name," outputs ").concat(r.length," tensors ")+"but ".concat(r.length," masks for those tensors"));for(let o=0;o<r.length;o++)r[o].kerasMask=s[o]}addInboundNode(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=rr(e);t=rr(t),n=rr(n),a=rr(a),r=As(r),s=As(s);const c=[],l=[],u=[];for(const d of i)c.push(d.sourceLayer),l.push(d.nodeIndex),u.push(d.tensorIndex);new Ws({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function js(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=js(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class Hs extends Gs{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:kr("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Qa("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Qa("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Qa("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new Ps(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Ws({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Qa("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Hs.className="InputLayer",s.serialization.registerClass(Hs);class qs{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof qs)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Qa("Duplicate key: name=".concat(e.name,", id=").concat(e.id));return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,s.cast)(t,e.dtype)}catch(n){throw new Qa("The dtype of the feed (".concat(t.dtype,") can not be cast to the dtype ")+"of the key '".concat(e.name,"' (").concat(e.dtype,")."))}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ps){if(null==this.id2Value[e.id])throw new Qa("Nonexistent key: ".concat(e.name));return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Qa("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Value[t]}}getMask(e){if(e instanceof Ps){if(null==this.id2Value[e.id])throw new Qa("Nonexistent key: ".concat(e.name));return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Qa("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,s.dispose)(this.id2Mask)}}const Xs=new $a,Ks=new $a;function Ys(e,t,n,a){const r=null!=n&&n.training,o=Array.isArray(e),i=o?e:[e],c=i.map((e=>e.name)),l=[],u=t.names();for(const s of c)-1!==u.indexOf(s)?l.push(t.getValue(s)):l.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const d=c.join(",")+"|"+t.names().sort().join(",");let h,p=Xs.get(d);if(null==p){const e=function(e,t){s.util.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=Zs(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:o}=Zs(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in o)null==a[t]&&(a[t]=new Set),o[t].forEach((e=>a[t].add(e)))}}return{sorted:n,recipientCounts:Qs(a)}}(i,t);p=e.sorted,h=e.recipientCounts,Xs.put(d,p),Ks.put(d,h)}h={},r||Object.assign(h,Ks.get(d));const f=new qs(t);for(let m=0;m<p.length;++m){if(null!=a){const e=(0,s.memory)().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=p[m],o=e.sourceLayer;if(o instanceof Hs)continue;const i=[],u=[],d=[];let g=!1;for(const n of e.inputs){const e=f.getValue(n),a=f.getMask(n);i.push(e),u.push(a),null!=a&&(g=!0),r||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==c.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||d.push(e))}g&&((n=n||{}).mask=u[0]);const y=rr(o.apply(i,n));let b=null;o.supportsMasking&&(b=o.computeMask(i,u));const v=Js(e),x=Array.isArray(v)?v:[v];for(let t=0;t<x.length;++t){f.hasKey(x[t])||f.add(x[t],y[t],Array.isArray(b)?b[0]:b);const e=c.indexOf(x[t].name);-1!==e&&(l[e]=y[t])}r||(0,s.dispose)(d)}return f.disposeMasks(),o?l:l[0]}function Qs(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Zs(e,t){const n=new Set,a=[],r={};for(const i of t.names())n.add(i);const s=[],o=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=o[o.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&o.pop();else{o.push(s.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:a,recipientMap:r}}function Js(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function $s(e,t){return(0,s.tidy)((()=>s.sqrt(s.sum(s.mul(e,e),t,!0))))}(0,s.env)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Xs&&Xs.setMaxEntries(e),null!=Ks&&Ks.setMaxEntries(e)}));class eo extends s.serialization.Serializable{getConfig(){return{}}}class to extends eo{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,s.tidy)((()=>{const t=$s(e,this.axis),n=s.clipByValue(t,0,this.maxValue);return s.mul(e,s.div(n,s.add(jr(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}to.className="MaxNorm",s.serialization.registerClass(to);class no extends eo{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,s.tidy)((()=>s.div(e,s.add(jr(),$s(e,this.axis)))))}getConfig(){return{axis:this.axis}}}no.className="UnitNorm",s.serialization.registerClass(no);class ao extends eo{apply(e){return s.relu(e)}}ao.className="NonNeg",s.serialization.registerClass(ao);class ro extends eo{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,s.tidy)((()=>{const t=$s(e,this.axis),n=s.add(s.mul(this.rate,s.clipByValue(t,this.minValue,this.maxValue)),s.mul(1-this.rate,t));return s.mul(e,s.div(n,s.add(jr(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ro.className="MinMaxNorm",s.serialization.registerClass(ro);const so={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function oo(e){return cr(e)}function io(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ur(e,s.serialization.SerializationMap.getMap().classNameMap,t,"constraint")}function co(e){if(null==e)return null;if("string"===typeof e){return io({className:e in so?so[e]:e,config:{}})}return e instanceof eo?e:io(e)}async function lo(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const s=e[r];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];(0,s.dispose)(a)}}function uo(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var ho;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(ho||(ho={}));class po{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class fo{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class mo extends po{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const a in t){const e=t[a];if("number"===typeof e)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+e*n;else{let t;a in this.totals?t=this.totals[a]:this.totals[a]=0;const r=(0,s.tidy)((()=>(0,s.add)(this.totals[a],(0,s.mul)(e,n))));this.totals[a]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:(0,s.tidy)((()=>{const e=(0,s.mul)((0,s.div)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),(0,s.keep)(t[n])})))}}class go extends po{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const o=a[s];e.push(o.data()),t.push(r),n.push(s)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}}}class yo extends po{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||s.nextFrame,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");s.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():s.util.now();return function(){const o=null!=n?n():s.util.now();return o-r<t||(r=o,a=e(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await lo(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await lo(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await lo(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await lo(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await lo(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):s.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await lo(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await lo(e),await this.trainEnd(e))}}function bo(e,t){if(null==e&&(e={}),e instanceof po)return[e];if(Array.isArray(e)&&e[0]instanceof po)return e;return rr(e).map((e=>new yo(e,t)))}class vo{constructor(){}static registerCallbackConstructor(e,t){s.util.assert(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(e))),vo.checkForDuplicate(t),null==vo.constructors[e]&&(vo.constructors[e]=[]),vo.constructors[e].push(t)}static checkForDuplicate(e){for(const t in vo.constructors){vo.constructors[+t].forEach((t=>{if(t===e)throw new Qa("Duplicate callback constructor.")}))}}static clear(){vo.constructors={}}static createCallbacks(e){const t=[];for(const n in vo.constructors){const a=+n;e>=a&&t.push(...vo.constructors[a])}return t.map((e=>new e))}}function xo(e,t,n,a,r,s,o,i,c){const l=new go,u=[new mo,...vo.createCallbacks(t)];null!=e&&u.push(...e),u.push(l);const d=new fo(u);return d.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:o,verbose:t,doValidation:i,metrics:c}),{callbackList:d,history:l}}function wo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return ur(e,s.serialization.SerializationMap.getMap().classNameMap,t,"layer",n)}function ko(e,t){return(0,s.tidy)((()=>{"float32"!==e.dtype&&(e=s.cast(e,"float32"));const n=s.sum(ns(e),t,!0),a=s.fill(n.shape,jr()),r=s.sqrt(s.maximum(n,a));return s.div(e,r)}))}function So(e,t){return(0,s.tidy)((()=>s.mean(ns(s.sub(t,e)),-1)))}function Io(e,t){return(0,s.tidy)((()=>s.mean(s.abs(s.sub(t,e)),-1)))}function No(e,t){return(0,s.tidy)((()=>{const n=s.sub(e,t),a=s.clipByValue(s.abs(e),jr(),Number.MAX_VALUE),r=s.abs(s.div(n,a));return s.mul(100,s.mean(r,-1))}))}function To(e,t){return(0,s.tidy)((()=>{const n=s.clipByValue(t,jr(),Number.MAX_VALUE),a=s.log(s.add(1,n)),r=s.clipByValue(e,jr(),Number.MAX_VALUE),o=s.log(s.add(1,r));return s.mean(ns(s.sub(a,o)),-1)}))}function Co(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,s.tidy)((()=>{if(n)t=s.softmax(t);else{const e=s.sum(t,t.shape.length-1,!0);t=s.div(t,e)}return t=s.clipByValue(t,jr(),1-jr()),s.neg(s.sum(s.mul(s.cast(e,"float32"),s.log(t)),t.shape.length-1))}))}function Eo(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,s.tidy)((()=>{const a=s.cast(s.floor(function(e){const t=[Pr(e.shape)];return s.reshape(e,t)}(e)),"int32"),r=(t=s.clipByValue(t,jr(),1-jr())).shape;return Co(s.reshape(s.oneHot(a,r[r.length-1]),r),t,n)}))}function _o(e,t){return(0,s.tidy)((()=>{let n;return n=s.clipByValue(t,jr(),1-jr()),n=s.log(s.div(n,s.sub(1,n))),s.mean(function(e,t){if(!s.util.arraysEqual(e.shape,t.shape))throw new Qa("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(e.shape)," and ").concat(JSON.stringify(t.shape)));return(0,s.tidy)((()=>{const n=s.relu(t),a=s.neg(s.abs(t));return s.add(s.sub(n,s.mul(t,e)),s.log1p(s.exp(a)))}))}(e,n),-1)}))}function Ao(e,t){return(0,s.tidy)((()=>{const n=s.clipByValue(e,jr(),1),a=s.clipByValue(t,jr(),1);return s.sum(s.mul(e,s.log(s.div(n,a))),-1)}))}function Ro(e,t){return(0,s.tidy)((()=>{const n=ko(e,-1),a=ko(t,-1),r=s.mul(n,a);return s.neg(s.sum(r,-1))}))}vo.constructors={};const Fo={meanSquaredError:So,meanAbsoluteError:Io,meanAbsolutePercentageError:No,meanSquaredLogarithmicError:To,squaredHinge:function(e,t){return(0,s.tidy)((()=>{const n=s.maximum(0,s.sub(1,s.mul(e,t)));return s.mean(ns(n),-1)}))},hinge:function(e,t){return(0,s.tidy)((()=>{const n=s.maximum(0,s.sub(1,s.mul(e,t)));return s.mean(n,-1)}))},categoricalHinge:function(e,t){return(0,s.tidy)((()=>{const n=s.sum(s.mul(e,t),-1),a=s.max(s.mul(s.sub(1,e),t),-1);return s.maximum(0,s.add(1,s.sub(a,n)))}))},logcosh:function(e,t){return(0,s.tidy)((()=>{const n=Math.log(2),a=s.sub(t,e),r=s.sub(s.add(a,s.softplus(s.mul(-2,a))),n);return s.mean(r,-1)}))},categoricalCrossentropy:Co,sparseCategoricalCrossentropy:Eo,binaryCrossentropy:_o,kullbackLeiblerDivergence:Ao,poisson:function(e,t){return(0,s.tidy)((()=>{const n=s.log(s.add(jr(),t));return s.mean(s.sub(t,s.mul(e,n)),-1)}))},cosineProximity:Ro};function Do(e){if("string"===typeof e){if(e in Fo)return Fo[e];let t="Unknown loss ".concat(e);throw e.toLowerCase().includes("softmaxcrossentropy")&&(t="Unknown loss ".concat(e,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new Qa(t)}return e}function Oo(e,t){return(0,s.tidy)((()=>{const n=s.mul(.5,s.onesLike(t)),a=Hr(s.greater(t,n),e.dtype);return s.mean(s.equal(e,a),-1)}))}function Mo(e,t){return(0,s.tidy)((()=>Hr(s.equal(s.argMax(e,-1),s.argMax(t,-1)),"float32")))}function Lo(e,t){return(0,s.tidy)((()=>s.cast(s.sum(s.logicalAnd(s.equal(e,1),s.equal(t,1))),"float32")))}function zo(e,t){return _o(e,t)}function Bo(e,t){return e.rank===t.rank&&(e=s.squeeze(e,[e.rank-1])),(t=s.argMax(t,-1)).dtype!==e.dtype&&(t=s.cast(t,e.dtype)),s.cast(s.equal(e,t),"float32")}const Po=Co,Vo=Eo,Wo={binaryAccuracy:Oo,categoricalAccuracy:Mo,precision:function(e,t){return(0,s.tidy)((()=>{const n=Lo(e,t),a=function(e,t){return(0,s.tidy)((()=>s.cast(s.sum(s.logicalAnd(s.equal(e,0),s.equal(t,1))),"float32")))}(e,t),r=s.add(n,a);return s.cast(s.where(s.greater(r,0),s.div(n,r),0),"float32")}))},categoricalCrossentropy:Po,sparseCategoricalCrossentropy:Vo,mse:So,MSE:So,mae:Io,MAE:Io,mape:No,MAPE:No,cosine:Ro};function Uo(e){if("string"===typeof e&&e in Wo)return Wo[e];if("string"!==typeof e&&null!=e)return e;throw new Qa("Unknown metric ".concat(e))}function Go(e){if(tr(null!==e,"Unknown LossOrMetricFn ".concat(e)),"string"===typeof e)return e;{let t;for(const n of Object.keys(Fo))if(Fo[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Wo))if(Wo[n]===e){t=n;break}return void 0!==t?t:e.name}}const jo=1048576;function Ho(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!qo(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>jo&&console.warn('User-defined metadata of model "'.concat(t,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(jo,"."))}}function qo(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!qo(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!qo(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Xo(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(e){let t=!0;const n=[],a=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){s.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}a("_".repeat(t)),Ko(s,n,a),a("=".repeat(t));const i=e.layers;for(let u=0;u<i.length;++u)r?Yo(i[u],n,a):Qo(i[u],n,o,a),a((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const c=function(e){let t;t=null!=e.collectedTrainableWeights?Ds(e.collectedTrainableWeights):Ds(e.trainableWeights);return t}(e),l=Ds(e.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(t))}function Ko(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function Yo(e,t,n){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(i){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(i){a="multiple"}const s=e.name,o=e.getClassName();Ko(["".concat(s," (").concat(o,")"),r,a,e.countParams().toString()],t,n)}function Qo(e,t,n,a){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(u){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(u){r="multiple"}const o=[];for(const d of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let e=0;e<d.inboundLayers.length;++e){const t=d.inboundLayers[e].name,n=d.nodeIndices[e],a=d.tensorIndices[e];o.push("".concat(t,"[").concat(n,"][").concat(a,"]"))}const i=e.name,c=e.getClassName(),l=0===o.length?"":o[0];Ko(["".concat(i," (").concat(c,")"),s,r,e.countParams().toString(),l],t,a);for(let d=1;d<o.length;++d)Ko(["","","","",o[d]],t,a)}function Zo(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Jo(e,t){if(null===e)return null;if("string"===typeof e)return or(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Zo(t,r,a)?n.push(a):n.push(Jo(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"===typeof a)t[n]=a;else{const e=or(n);t[e]=Jo(a,e)}}return t}}function $o(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return sr(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Zo(t,r,a)?n.push(a):n.push($o(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n],r=sr(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof a?$o(a,n):a}return t}}const ei="4.16.0";class ti extends Gs{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=kr(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],hr(this.inputs).length!==this.inputs.length)throw new Qa("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((e=>e.name))));hr(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((e=>e.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;tr(0===t,"input layer has >1 nodes"),tr(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof Hs))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(e.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(t.getClassName(),"."));this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},s={},o=[],i=(e,t,n,a,r,c)=>{null!=a&&null!=r&&null!=c||(a=e.sourceLayer,r=e.nodeIndex,c=e.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new Ya("The tensor ".concat(e.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==t.indexOf(l))return;this.containerNodes.add(ti.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let s=0;s<u;s++){const e=l.inputTensors[s],a=l.inboundLayers[s],r=l.nodeIndices[s],o=l.tensorIndices[s];i(e,t,n,a,r,o)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},c=[],l=[];for(const y of this.outputs)i(y,c,l);const u=o.slice().reverse();for(const y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const s=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];e=Math.max(e,s),a[y.outboundLayer.id]=e,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],s=y.nodeIndices[a],o=r.inboundNodes[s],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const d={};for(const y in t){const e=t[y];e in d||(d[e]=[]),d[e].push(n[y])}const h={};for(const y in a){const e=a[y];e in h||(h[e]=[]),h[e].push(r[y])}let p=Object.keys(h).map((e=>parseInt(e,10))).sort(dr);this.layers=[];for(const y of p){const e=h[y];e.sort(((e,t)=>{const n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0}));for(const t of e)t instanceof ti&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=h,p=Object.keys(d).map((e=>parseInt(e,10))).sort(dr);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of d[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Ya("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(t.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new Ya('The name "'.concat(y,'" is used ').concat(e," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Ws({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Qa("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const o of this.layers)for(const[e,t]of o.weights.entries()){const s=r?"".concat(t.name.split("/").slice(0,-1).join("/")+"/").concat(e):t.originalName;if(null!=n[s])throw new Qa("Duplicate weight name: ".concat(s));n[s]=t,a++}const s=[];for(const o in e){let a=o;if(null==n[o]){const e=o.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[o]]);else if(t)throw new Qa("Provided weight data has no target variable: ".concat(o));delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Qa("".concat(e.length," of ").concat(a," weights are not set: ")+"".concat(e))}zs(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!a.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers ".concat(ei),t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=$o(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,s.tidy)((()=>{e=rr(e);const n=new qs;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Ys(this.outputs,n,t)}))}computeMask(e,t){return(0,s.tidy)((()=>{let n;return e=rr(e),n=null==t?er(null,e.length):rr(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=As(e);if(t.length!==this.inputLayers.length)throw new Qa("Invalid inputShape argument ".concat(e,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],a=t[o];n[e.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(dr);if(a.length>1)for(const o of a){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const a=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],r=t.nodeIndices[o],s=t.tensorIndices[o],i=n["".concat(e.name,"_").concat(r,"_").concat(s)];a.push(i)}const r=As(e.computeOutputShape(ar(a))),s=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n["".concat(e.name,"_").concat(s,"_").concat(t)]=r[t]}}}const r=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(e.name,"_").concat(t,"_").concat(n);s.push(a)}for(let o=0;o<s.length;o++){const e=s[o];tr(e in n),r.push(n[e])}return ar(r)}runInternalGraph(e,t){null==t&&(t=er(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=e[i],s=t[i];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(dr);for(const i of a){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,s=new Array;for(const t of a)t.id in n&&s.push(n[t.id]);if(s.length===a.length){let a,o,i,c,l={};if(null!=t.callArgs&&(l=t.callArgs),1===s.length){const[t,n]=s[0];null==l.mask&&(l.mask=n),i=rr(e.call(t,l)),c=rr(e.computeMask(t,n)),a=[t],o=[n]}else a=s.map((e=>e[0])),o=s.map((e=>e[1])),null==l.mask&&(l.mask=o),i=rr(e.call(a,l)),c=rr(e.computeMask(a,o));if(e.activityRegularizer)throw new Za("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=i[e],s=c[e];n[t.id]=[a,s]}}}}const r=[],s=[],o=[];for(const i of this.outputs){tr(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[e,t]=n[i.id];o.push(e.shape),r.push(e),s.push(t)}return[r,s,o]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof ti?1:0;for(let e=0;e<a.inboundNodes.length;e++){const r=ti.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Qa("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new Qa("No such layer: ".concat(e))}findLayer(e){if(this.layers.length<=e)throw new Qa("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}calculateLosses(){return(0,s.tidy)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=ti.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const e=o.getClassName(),a=o.getConfig(),r=[];for(let n=0;n<o.inboundNodes.length;n++){const e=o.inboundNodes[n],a=ti.nodeKey(o,n);let i={};if(this.containerNodes.has(a)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(s){console.warn("Layer ".concat(o.name," was passed ")+"non-serializable keyword arguments: "+"".concat(e.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),i={}}if(e.inboundLayers.length>0){const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],s=e.nodeIndices[a],o=e.tensorIndices[a];let c=t[ti.nodeKey(r,s)];null==c&&(c=0),n.push([r.name,c,o,i])}r.push(n)}}}const i={};i.name=o.name,i.className=e,i.config=a,i.inboundNodes=r,n.push(i)}e.layers=n;const a=[];for(let o=0;o<this.inputLayers.length;o++){const e=this.inputLayers[o],n=this.inputLayersNodeIndices[o],r=ti.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let s=t[r];null!==s&&void 0!==s||(s=0);const i=this.inputLayersTensorIndices[o];a.push([e.name,s,i])}e.inputLayers=a;const r=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],n=this.outputLayersNodeIndices[o],a=ti.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let s=t[a];null!==s&&void 0!==s||(s=0);const i=this.outputLayersTensorIndices[o];r.push([e.name,s,i])}return e.outputLayers=r,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function s(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function o(e,t){const n=[];let r;for(const o of t){const i=o[0],c=o[1],l=o[2];if(r=null==o[3]?{}:o[3],!(i in a))return void s(e,t);const u=a[i];if(u.inboundNodes.length<=c)return void s(e,t);const d=u.inboundNodes[c];n.push(d.outputTensors[l])}n.length>0&&e.apply(ar(n),r)}function i(e){const r=e.name,o=wo(e,null!=t.customObjects?t.customObjects:{});o.setFastWeightInitDuringBuild(n),a[r]=o;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Qa("Corrupted configuration, expected array for nodeData: ".concat(e));s(o,e)}))}const c=t.name,l=t.layers;for(const f of l)i(f);for(;!pr(r);)for(const e of l){const t=a[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)o(t,n)}}const u=[],d=[],h=t.inputLayers;for(const f of h){const e=f[0],t=f[1],n=f[2];tr(e in a);const r=a[e].inboundNodes[t].outputTensors;u.push(r[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];tr(e in a);const r=a[e].inboundNodes[t].outputTensors;d.push(r[n])}return new e({inputs:u,outputs:d,name:c})}get stateful(){if(this._stateful)throw new Qa("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,s.tidy)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function ni(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(e.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(t," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(e)))}function ai(e,t){return ni(e,t,"classWeight")}async function ri(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,s.tidy)((()=>{if(1===e.shape.length)return(0,s.clone)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,s.argMax)(e,t)}if(1===e.shape[1])return(0,s.reshape)(e,[e.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(e.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(e.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await t.data());(0,s.dispose)(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(e," exists in the data but not in ")+"classWeight");r.push(n[e])})),(0,s.tensor1d)(r,"float32")}return null}function si(e,t){return(0,s.mul)(e,t)}function oi(e,t){let n,a;const r=t;n=r.xs,a=r.ys,s.util.assert(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(t)));const o=ii("input",e.inputNames,n),i=ii("output",e.outputNames,a),c=o[0].shape[0];s.util.assert(o.length===e.inputs.length,(()=>"LayersModel has ".concat(e.inputs.length," inputs, but the dataset ")+"provides ".concat(o.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(e.inputNames),")"))),s.util.assert(i.length===e.outputs.length,(()=>"LayersModel has ".concat(e.outputs.length," outputs, but the dataset ")+"provides ".concat(i.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(e.outputNames),")")));for(let l=0;l<o.length;l++)s.util.assert(o[l].shape[0]===c,(()=>"Batch size mismatch: input "+"".concat(e.inputNames[l]," has ").concat(o[l].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(e.inputNames[0],".")));for(let l=0;l<i.length;l++)s.util.assert(i[l].shape[0]===c,(()=>"Batch size mismatch: output "+"".concat(e.outputNames[l]," has ").concat(i[l].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(e.inputNames[0],".")));return{xs:o,ys:i}}function ii(e,t,n){if(n instanceof s.Tensor)return[n];if(Array.isArray(n))return s.util.assert(n.length===t.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(t.length," to match the ").concat(e," keys ").concat(t,"."))),n;{const a=[];for(const r of t){if(null==n[r])throw new Qa("The feature data generated by the dataset lacks the required "+"".concat(e," key '").concat(r,"'."));a.push(n[r])}return a}}async function ci(e,t,n){const a=null!=n.batchesPerEpoch;if(s.util.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),s.util.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),s.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),s.util.assert(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),s.util.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let o,i;if(r)if(li(n.validationData))s.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const e=function(e){if(3===e.length)throw new Za("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);o=e.xs,i=e.ys}const c=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const d=bo(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=xo(d,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,u);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const u={};await p.onEpochBegin(m);let d=0,h=0;for(a||(g=await t.iterator());!a||d<n.batchesPerEpoch;){const t=await g.next();if(a&&t.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(d," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:r}=oi(e,t.value),o={};o.batch=h,o.size=a[0].shape[0],await p.onBatchBegin(h,o);const i=[];if(null!=n.classWeight){const t=ai(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await ri(r[e],null,t[e]))}const u=a.concat(r).concat(i),f=c(u);s.dispose(u);for(let e=0;e<l.length;++e){const t=l[e],n=f[e];o[t]=n,s.keep(n)}await p.onBatchEnd(h,o),uo(o),h++,d++}if(a?d>=n.batchesPerEpoch:t.done){if(r){let t;t=li(n.validationData)?rr(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):rr(e.evaluate(o,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u["val_".concat(e.metricsNames[n])]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,u),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function li(e){return"function"===typeof e.iterator}function ui(e){s.util.assert(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got ".concat(e)))}function di(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Xr(e,t,n-t))):Xr(e,t,n-t)}function hi(e,t){return s.tidy((()=>null==e?null:Array.isArray(e)?e.map((e=>hi(e,t))):ts(e,"int32"===t.dtype?t:s.cast(t,"int32"))))}function pi(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function fi(e){const t=[];e instanceof s.Tensor&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(qr(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function mi(e,t){if(null==e)return;const n=[];if(t instanceof s.Tensor)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const a=[];if(e instanceof s.Tensor)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&a.push(t)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function gi(e){return Array.isArray(e)}function yi(e){return!function(e){return e instanceof s.Tensor}(e)&&!gi(e)}function bi(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(gi(e)&&e.length>0)t=!0;else if(yi(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Qa("Error when checking model ".concat(s," expected no data, ")+"but got ".concat(e))}return[]}if(null==e)return t.map((e=>null));if(yi(e)){a=[];for(const n of t){if(null==e[n])throw new Qa('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(t));a.push(e[n])}}else if(gi(e)){if(e.length!==t.length)throw new Qa("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(t.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(e));a=e}else{if(t.length>1)throw new Qa("The model ".concat(s," expects ").concat(t.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(e.shape));a=[e]}if(a=fi(a),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new Qa("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(e.shape));for(let t=0;t<n[o].length;++t){if(0===t&&!r)continue;const a=e.shape[t],i=n[o][t];if(null!=i&&i>=0&&a!==i)throw new Qa("".concat(s," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(s," received an input with ").concat(e.shape[0])+" examples, each with shape [".concat(e.shape.slice(1,e.shape.length),"]")+" (tensor shape [".concat(e.shape,"])"))}}return a}function vi(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new Qa("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(t.length," Tensor(s),")+" but instead got ".concat(e.length," Tensors(s)."));a=e}else{if(t.length>1)throw new Qa("The model expects ".concat(t.length," ").concat(s," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(e.shape),"."));a=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new Qa("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(e.shape)));for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=e.shape[a],c=n[o][a];if(null!=c&&c!==i)throw new Qa("Error when checking ".concat(s,": expected ")+"".concat(t[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(e.shape),"."))}}}class xi extends ti{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new Qa("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Xo(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>s.train.adagrad(.01),Adadelta:()=>s.train.adadelta(1,.95,jr()),Adam:()=>s.train.adam(.001,.9,.999,jr()),Adamax:()=>s.train.adamax(.002,.9,.999,jr(),0),RMSProp:()=>s.train.rmsprop(.001,.9,0,jr()),SGD:()=>s.train.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Qa("Unknown Optimizer ".concat(e))}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof s.Optimizer))throw new Qa("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Qa("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(e.loss,"."));const n=e.loss;t=n.map((e=>Do(e)))}else{const n=Do(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Qa('Unknown entry in loss dictionary: "'.concat(t,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==e.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),t.push(Do(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Or("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(e));n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Or("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,a,s;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===_o?-1!==["accuracy","acc"].indexOf(o)?a=Oo:-1!==["crossentropy","ce"].indexOf(o)&&(a=zo):this.lossFunctions[e]===Eo?-1!==["accuracy","acc"].indexOf(o)?a=Bo:-1!==["crossentropy","ce"].indexOf(o)&&(a=Vo):-1!==["accuracy","acc"].indexOf(o)?a=Mo:-1!==["crossentropy","ce"].indexOf(o)&&(a=Po),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),s=a,n=""+r}else{const e=Uo(o);s=e,n=""+Go(o)}let t;Or(n,(()=>{t=s})),r(e,n,t)}})(a[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;ui(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return ar(this.testLoop(t,e,a,n.verbose,n.steps))}finally{mi(r[0],e),mi(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let o=[];if(n.verbose>0)throw new Za("Verbose mode is not implemented yet.");s.util.assert(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const i="function"===typeof t.next?t:await t.iterator();let c=0,l=0;for(;!a||l<n.batches;){const t=await i.next();if(o=s.tidy((()=>{if(t.value){const{xs:n,ys:a}=oi(e,t.value),i=n.concat(a),u=s.tidy((()=>r(i)));if(s.dispose(i),0===l)for(let e=0;e<u.length;++e)o.push((0,s.scalar)(0));const d=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=o[e];o[e]=s.tidy((()=>s.add(o[e],s.mul(d,t)))),l>0&&s.dispose(n)}s.dispose(u),c+=d,++l}return o})),t.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let u=0;u<o.length;++u){const e=o[u];o[u]=s.div(o[u],c),s.dispose(e)}return ar(o)}(this,e,t)}checkNumSamples(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=t)throw new Qa("If ".concat(r," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(t))}else{if(null==e)throw new Qa("Either the input data should have a defined shape, or "+"".concat(r," shoud be specified."));a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Qa("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),o=new qs;if(e instanceof s.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Qa("The number of inputs provided (".concat(e.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let t=0;t<this.inputs.length;++t)o.add(this.inputs[t],e[t])}else for(const s of this.inputs){const t=e[s.name];if(null==t)throw new Qa("No value is provided for the model's input ".concat(s.name));o.add(s,t)}const i=Ys(r,o);return n?i:i[0]}retrieveSymbolicTensors(e){const t=er(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((e=>e.name));for(let a=0;a<e.length;++a){const o=s.indexOf(e[a]);if(-1!==o&&(t[a]=r[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new Qa("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return s.tidy((()=>{const a=this.checkNumSamples(e);if(n)throw new Za("Verbose predictLoop() is not implemented yet.");const r=pi(a,t),o=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){s.tidy((()=>{const n=r[t][0],a=r[t][1],s=di(e,n,a),o=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)o.push({key:this.inputs[e],value:s[e]});else o.push({key:this.inputs[0],value:s});const i=new qs(o);return Ys(this.outputs,i)})).forEach(((e,t)=>o[t].push(e)))}return ar(o.map((e=>s.concat(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=fi(e);vi(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return ui(e),this.predictLoop(n,e)}finally{mi(n,e)}}predictOnBatch(e){vi(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new Ya("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===Eo?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(e,t,n){const a=hr(e.map((e=>e.shape[0])));a.sort();const r=hr(t.map((e=>e.shape[0])));if(r.sort(),a.length>1)throw new Qa("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((e=>e.shape)))));if(r.length>1)throw new Qa("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((e=>e.shape)))));if(a.length>0&&r.length>0&&!s.util.arraysEqual(a,r))throw new Qa("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(a[0]," input sample(s) and ").concat(r[0]," target ")+"sample(s).")}(e=bi(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=bi(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const a=[So,_o,Co];for(let r=0;r<e.length;++r){const s=e[r],o=t[r],i=n[r];if(null!=o){if(o===Co&&1===s.shape[s.shape.length-1])throw new Qa("You are passing a target array of shape ".concat(s.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const e=s.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new Qa("A target Tensor with shape ".concat(s.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new Qa("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(e[0].shape[0]," sample(s)."));return[e,t]}async standardizeUserData(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const e=ai(a,this.outputNames);c=[];for(let t=0;t<e.length;++t)c.push(await ri(i[t],null,e[t]))}return[o,i,c]}testLoop(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return s.tidy((()=>{const o=this.checkNumSamples(t,n,r,"steps"),i=[];if(a>0)throw new Za("Verbose mode is not implemented yet.");if(null!=r)throw new Za("steps mode in testLoop() is not implemented yet");{const a=pi(o,n),r=(0,s.tensor1d)(Ur(0,o));for(let n=0;n<a.length;++n){const o=a[n][0],c=a[n][1],l=Xr(r,o,c-o),u=hi(t,l),d=e(u);if(0===n)for(let e=0;e<d.length;++e)i.push((0,s.scalar)(0));for(let e=0;e<d.length;++e){const t=d[e];i[e]=s.add(i[e],s.mul(c-o,t))}}for(let e=0;e<i.length;++e)i[e]=s.div(i[e],o)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;if(nr(e,a)>1){const t=nr(e.slice(0,n),a);r+="_".concat(t)}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),o=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new qs(e),c=Ys(this.outputs,i,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(a[n],c[n]);null!=r[n]&&(e=si(e,r[n]));const o=s.mean(e);t.push(o),l=0===n?e:s.add(l,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=s.mean(t(a[r],c[r]))}s.keep(e),o.push(e)}return l=s.mean(l),this.calculateLosses().forEach((e=>{l=s.add(l,e)})),l}),!0,i)].concat(o)}}makeTestFunction(){this.testFunction=e=>s.tidy((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let e=0;e<this.inputs.length;++e)o.push({key:this.inputs[e],value:a[e]});const i=new qs(o),c=Ys(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],o=s.mean(a(r[e],c[e]));n=0===e?o:s.add(n,o),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],o=s.mean(n(r[a],c[a]));t.push(o)}return t}))}async fit(e,t){let n,a,r,o,i,c,l,u,d,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const s=null==h.batchSize?32:h.batchSize;ui(s);const p=!1,f=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,s);n=f[0],a=f[1],d=f[2];let m,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new Za("validationData including sample weights is not supported yet."):new Qa("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(h.validationData," is invalid."));i=h.validationData[0],c=h.validationData[1];const e=!0,t=await this.standardizeUserData(i,c,null,null,e,s);l=t[0],u=t[1],m=l.concat(u)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];l=di(n,e,t),r=n,n=di(n,0,e),u=di(a,e,t),o=a,a=di(a,0,e),m=l.concat(u)}else null!=h.validationSteps&&(g=!0);const y=n.concat(a).concat(d);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let x,w;g?(this.makeTestFunction(),x=this.testFunction,w=v.slice().concat(v.map((e=>"val_"+e)))):(x=null,m=[],w=v.slice());const k=bo(h.callbacks,h.yieldEvery);return await this.fitLoop(b,y,v,s,h.epochs,h.verbose,k,x,m,h.shuffle,w,h.initialEpoch,null,null)}finally{this.isTraining=!1,mi(n,e),mi(a,t),mi(r,e),mi(o,t),mi(l,i),mi(u,c),null!=d&&s.dispose(d)}}async fitLoop(e,t,n,a,r,o,i,c,l,u,d,h,p,f){null==a&&(a=32),null==r&&(r=1),null==u&&(u=!0),null==h&&(h=0);let m=!1;if(null!=c&&null!=l&&(m=!0),null!=f&&(m=!0,null==p))throw new Qa("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,a,p,"steps_per_epoch");let y;null!=g&&(y=Ur(0,g)),null==o&&(o=1);const{callbackList:b,history:v}=xo(i,o,r,h,g,p,a,m,d);b.setModel(this),this.history=v,await b.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<r;++x){await b.onEpochBegin(x);const r={};if(null!=p)throw new Za("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new Za("batch shuffling is not implemneted yet");u&&s.util.shuffle(y);const o=(0,s.tensor1d)(y),i=pi(g,a);for(let u=0;u<i.length;++u){const d={};if(await b.onBatchBegin(u,d),s.tidy((()=>{const h=i[u][0],p=i[u][1],f=Xr(o,h,p-h);d.batch=u,d.size=p-h;const g=hi(t,f),y=e(g);for(let e=0;e<n.length;++e){const t=n[e],a=y[e];d[t]=a,s.keep(a)}if(u===i.length-1&&m){const e=this.testLoop(c,l,a);for(let t=0;t<n.length;++t){const a=n[t],o=e[t];s.keep(o),r["val_"+a]=o}}})),await b.onBatchEnd(u,d),uo(d),this.stopTraining_)break}o.dispose()}if(await b.onEpochEnd(x,r),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return ci(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],o=this.makeTrainFunction()(a.concat(r)),i=[];for(const s of o){const e=await s.data();i.push(e[0])}return s.dispose(o),mi(n[0],e),mi(n[1],t),ar(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=s.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-s.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=sr(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>sr(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=sr(n[a])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[sr(Go(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>sr(Go(e))));{const e={};for(const t in this.metrics)e[t]=sr(Go(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=wo(Jo(e.optimizer_config));let n,a;if("string"===typeof e.loss)n=or(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>or(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=or(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>or(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=or(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"===typeof e){const t=s.io.getSaveHandlers(e);if(0===t.length)throw new Qa("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Qa("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Qa("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await s.io.encodeWeights(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(ei),convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await s.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=s.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Ho(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){Ho(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}xi.className="Model",s.serialization.registerClass(xi);class wi extends xi{}wi.className="Functional",s.serialization.registerClass(wi);class ki extends xi{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:kr("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Qa("Negative dimension size caused by adding layer "+"".concat(e.name," with input shape [")+"".concat(e.inboundNodes[0].inputTensors[0].shape,"]"))}add(e){const t=e instanceof ki||e instanceof xi;let n;if(t){if(n=e,1!==n.outputs.length)throw new Qa("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Qa("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Qa("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Qa("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Hs({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Qa("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(e.name," ")+"which has ".concat(e.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new Qa("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=js(this.outputs[0])}this.inboundNodes=[],new Ws({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:er(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Fs(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new xi({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Ya("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Ya("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Ya("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Ya("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Qa("Legacy serialization format not supported yet.");n=t}else s.util.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,r=t;const o=new e(r);if(!(o instanceof ki))throw new Za("Sequential.fromConfig called on non-Sequential input: ".concat(o));for(const s of n){const e=wo(s,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(e){if(null==this.model)throw new Qa("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Qa("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}ki.className="Sequential",s.serialization.registerClass(ki);class Si extends s.serialization.Serializable{getConfig(){return{}}}class Ii extends Si{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new Za("Support for alpha values other than 1 (".concat(t,") is not implemented ")+"yet.");return s.elu(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}Ii.className="elu",s.serialization.registerClass(Ii);class Ni extends Si{apply(e){return s.selu(e)}}Ni.className="selu",s.serialization.registerClass(Ni);class Ti extends Si{apply(e){return s.relu(e)}}Ti.className="relu",s.serialization.registerClass(Ti);class Ci extends Si{apply(e){return(0,s.tidy)((()=>s.minimum(6,s.relu(e))))}}Ci.className="relu6",s.serialization.registerClass(Ci);class Ei extends Si{apply(e){return e}}Ei.className="linear",s.serialization.registerClass(Ei);class _i extends Si{apply(e){return s.sigmoid(e)}}_i.className="sigmoid",s.serialization.registerClass(_i);class Ai extends Si{apply(e){return function(e){return(0,s.tidy)((()=>{const t=s.add(.5,s.mul(.2,e));return s.clipByValue(t,0,1)}))}(e)}}Ai.className="hardSigmoid",s.serialization.registerClass(Ai);class Ri extends Si{apply(e){return s.softplus(e)}}Ri.className="softplus",s.serialization.registerClass(Ri);class Fi extends Si{apply(e){return function(e){return(0,s.tidy)((()=>s.div(e,s.add(s.abs(e),1))))}(e)}}Fi.className="softsign",s.serialization.registerClass(Fi);class Di extends Si{apply(e){return s.tanh(e)}}Di.className="tanh",s.serialization.registerClass(Di);class Oi extends Si{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return s.softmax(e,t)}}Oi.className="softmax",s.serialization.registerClass(Oi);class Mi extends Si{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return s.logSoftmax(e,t)}}Mi.className="logSoftmax",s.serialization.registerClass(Mi);class Li extends Si{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return(0,s.tidy)((()=>s.mul(s.sigmoid(s.mul(e,t)),e)))}}Li.className="swish",s.serialization.registerClass(Li);class zi extends Si{apply(e){return(0,s.tidy)((()=>s.mul(e,s.tanh(s.softplus(e)))))}}function Bi(e){return e.getClassName()}function Pi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ur(e,s.serialization.SerializationMap.getMap().classNameMap,t,"activation")}function Vi(e){if(null==e){const e={className:"linear",config:{}};return Pi(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Pi(t)}return e instanceof Si?e:Pi(e)}function Wi(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(e))}zi.className="mish",s.serialization.registerClass(zi);class Ui extends s.serialization.Serializable{}class Gi extends Ui{constructor(e){super(),Wi(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,s.tidy)((()=>{let t=(0,s.zeros)([1]);return this.hasL1&&(t=(0,s.add)(t,(0,s.sum)(s.mul(this.l1,(0,s.abs)(e))))),this.hasL2&&(t=(0,s.add)(t,(0,s.sum)(s.mul(this.l2,ns(e))))),s.reshape(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Gi.className="L1L2",s.serialization.registerClass(Gi);const ji={l1l2:"L1L2"};function Hi(e){return cr(e)}function qi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ur(e,s.serialization.SerializationMap.getMap().classNameMap,t,"regularizer")}function Xi(e){if(null==e)return null;if("string"===typeof e){return qi({className:e in ji?ji[e]:e,config:{}})}return e instanceof Ui?e:qi(e)}class Ki extends Gs{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Rs(e);let n=(0,s.relu)(e);return null!=this.maxValue&&(n=(0,s.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Ki.className="ReLU",s.serialization.registerClass(Ki);class Yi extends Gs{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Rs(e);return(0,s.leakyRelu)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Yi.className="LeakyReLU",s.serialization.registerClass(Yi);class Qi extends Gs{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Es(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Xi(e.alphaRegularizer),this.alphaConstraint=co(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new Qa("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(e.sharedAxes));this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Fs(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new Bs({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Rs(e),(0,s.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Cs(this.alphaInitializer),alphaRegularizer:Hi(this.alphaRegularizer),alphaConstraint:oo(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Qi.className="PReLU",s.serialization.registerClass(Qi);class Zi extends Gs{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Za("Non-default alpha value (".concat(e.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Rs(e);return(0,s.elu)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Zi.className="ELU",s.serialization.registerClass(Zi);class Ji extends Gs{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Rs(e);return(0,s.mul)(n,(0,s.cast)((0,s.greater)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Ji.className="ThresholdedReLU",s.serialization.registerClass(Ji);class $i extends Gs{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Oi).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return(0,s.tidy)((()=>{let n=Rs(e);const a=t.mask;if(null!=a){const e=(0,s.mul)((0,s.sub)((0,s.ones)(n.shape),(0,s.cast)(a,n.dtype)),(0,s.scalar)(-1e9));n=(0,s.add)(n,e)}return this.axis instanceof Array?this.axis.length>1?(0,s.exp)((0,s.sub)(n,(0,s.logSumExp)(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ec(e,t,n){if("number"===typeof e)return er(e,t);if(e.length!==t)throw new Qa("The ".concat(n," argument must be an integer or tuple of ").concat(t," integers.")+" Received: ".concat(e.length," elements."));for(let r=0;r<t;++r){const s=e[r];if((a=s)!==parseInt(a.toString(),10))throw new Qa("The ".concat(n," argument must be an integer or tuple of ").concat(t)+" integers. Received: ".concat(JSON.stringify(e)," including a")+" non-integer number ".concat(s))}return e;var a}function tc(e,t,n,a){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+a-1)/a)}function nc(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+Wr([n-t,0]);else{if("same"!==a)throw new Qa("Unsupport padding mode: ".concat(a,"."));e*=t}return e}function ac(e,t){return(0,s.tidy)((()=>(_r(t),"channelsFirst"===t?s.transpose(e,[0,2,3,1]):e)))}function rc(e,t){return(0,s.tidy)((()=>(_r(t),"channelsFirst"===t?s.transpose(e,[0,2,3,4,1]):e)))}function sc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return(0,s.tidy)((()=>{if(null==o&&(o="channelsLast"),_r(o),3!==e.shape.length)throw new Qa("The input of a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead."));if(3!==t.shape.length)throw new Qa("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new Qa("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(t.shape.length," instead"));if("channelsFirst"===o&&(e=s.transpose(e,[0,2,1])),"causal"===r)throw new Za("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let c=s.conv1d(e,t,a,"same"===r?"same":"valid","NWC",i);return null!=n&&(c=rs(c,n)),c}))}function oc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return(0,s.tidy)((()=>{if(null==o&&(o="channelsLast"),_r(o),3!==e.rank&&4!==e.rank)throw new Qa("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));if(3!==t.rank&&4!==t.rank)throw new Qa("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));let l=ac(e,o);if("causal"===r)throw new Za("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=s.fused.conv2d({x:l,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:c}),"channelsFirst"===o&&(l=s.transpose(l,[0,3,1,2])),l}))}function ic(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return(0,s.tidy)((()=>{if(null==o&&(o="channelsLast"),_r(o),4!==e.rank&&5!==e.rank)throw new Qa("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(e.rank,"."));if(4!==t.rank&&5!==t.rank)throw new Qa("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(e.rank,"."));let c=rc(e,o);if("causal"===r)throw new Za("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return c=s.conv3d(c,t,a,"same"===r?"same":"valid","NDHWC",i),null!=n&&(c=rs(c,n)),"channelsFirst"===o&&(c=s.transpose(c,[0,4,1,2,3])),c}))}$i.className="Softmax",s.serialization.registerClass($i);class cc extends Gs{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",cc.verifyArgs(t),this.rank=e,gr(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Za("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=ec(t.kernelSize,e,"kernelSize"),this.strides=ec(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Ar(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,_r(this.dataFormat),this.activation=Vi(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Es(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=co(t.biasConstraint),this.biasRegularizer=Xi(t.biasRegularizer),this.activityRegularizer=Xi(t.activityRegularizer),this.dilationRate=ec(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Qa("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Qa("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Qa("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(e){if(tr("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!mr(e.kernelSize,"number",1,3))throw new Qa("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(e.kernelSize),"."))}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Bi(this.activation),useBias:this.useBias,biasInitializer:Cs(this.biasInitializer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),biasConstraint:oo(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class lc extends cc{constructor(e,t){super(e,t),this.kernel=null,lc.verifyArgs(t),this.filters=t.filters,gr(this.filters,"filters"),this.kernelInitializer=Es(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=co(t.kernelConstraint),this.kernelRegularizer=Xi(t.kernelRegularizer)}build(e){e=Fs(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Qa("The channel dimension of the input should be defined. "+"Found ".concat(e[t]));const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,s.tidy)((()=>{let t;e=Rs(e);const n=null==this.bias?null:this.bias.read(),a=br(this.activation.getClassName());if(null!=a&&2===this.rank)t=oc(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=sc(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=oc(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Za("convolutions greater than 3D are not implemented yet.");t=ic(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Fs(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=tc(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:Cs(this.kernelInitializer),kernelRegularizer:Hi(this.kernelRegularizer),kernelConstraint:oo(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new Qa("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(e.filters)))}}class uc extends lc{constructor(e){super(2,e),uc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!mr(e.kernelSize,"number",1,2))throw new Qa("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(e.kernelSize),"."))}}uc.className="Conv2D",s.serialization.registerClass(uc);class dc extends lc{constructor(e){super(3,e),dc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Qa("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(e.kernelSize),"."))}}dc.className="Conv3D",s.serialization.registerClass(dc);class hc extends uc{constructor(e){if(super(e),this.inputSpec=[new Bs({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Qa("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(4!==(e=Fs(e)).length)throw new Qa("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Qa("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Bs({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return s.tidy((()=>{let t=Rs(e);if(4!==t.shape.length)throw new Qa("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,o;"channelsFirst"===this.dataFormat?(r=2,o=3):(r=1,o=2);const i=n[r],c=n[o],l=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=[a,nc(i,d,l,this.padding),nc(c,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=s.transpose(t,[0,2,3,1]));let f=s.conv2dTranspose(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=s.transpose(f,[0,3,1,2])),null!=this.bias&&(f=rs(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(e){const t=(e=Fs(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[a]=nc(t[a],i,s,this.padding),t[r]=nc(t[r],c,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}hc.className="Conv2DTranspose",s.serialization.registerClass(hc);class pc extends dc{constructor(e){if(super(e),this.inputSpec=[new Bs({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Qa("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(5!==(e=Fs(e)).length)throw new Qa("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Qa("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Bs({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return s.tidy((()=>{let t=Rs(e);if(5!==t.shape.length)throw new Qa("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,o,i;"channelsFirst"===this.dataFormat?(i=2,r=3,o=4):(i=1,r=2,o=3);const c=n[i],l=n[r],u=n[o],d=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=[a,nc(c,f,d,this.padding),nc(l,m,h,this.padding),nc(u,g,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=s.transpose(t,[0,2,3,4,1]));let b=s.conv3dTranspose(t,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=s.transpose(b,[0,4,1,2,3])),null!==this.bias&&(b=rs(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=Fs(e)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[a]=nc(t[a],l,o,this.padding),t[r]=nc(t[r],u,i,this.padding),t[s]=nc(t[s],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}pc.className="Conv3DTranspose",s.serialization.registerClass(pc);class fc extends lc{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Qa("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Qa("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Qa("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(t.padding)));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Es(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Xi(t.depthwiseRegularizer),this.depthwiseConstraint=co(t.depthwiseConstraint),this.pointwiseInitializer=Es(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Xi(t.pointwiseRegularizer),this.pointwiseConstraint=co(t.pointwiseConstraint)}build(e){if((e=Fs(e)).length<this.rank+2)throw new Qa("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(e)));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Qa("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(e[t])));const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Bs({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,s.tidy)((()=>{let t;if(e=Rs(e),1===this.rank)throw new Za("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=s.transpose(e,[0,2,3,1])),t=s.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=rs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=s.transpose(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Cs(this.depthwiseInitializer),e.pointwiseInitializer=Cs(this.pointwiseInitializer),e.depthwiseRegularizer=Hi(this.depthwiseRegularizer),e.pointwiseRegularizer=Hi(this.pointwiseRegularizer),e.depthwiseConstraint=oo(this.depthwiseConstraint),e.pointwiseConstraint=oo(this.pointwiseConstraint),e}}fc.className="SeparableConv";class mc extends fc{constructor(e){super(2,e)}}mc.className="SeparableConv2D",s.serialization.registerClass(mc);class gc extends lc{constructor(e){super(1,e),gc.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!mr(e.kernelSize,"number",1,1))throw new Qa("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(e.kernelSize),"."))}}gc.className="Conv1D",s.serialization.registerClass(gc);class yc extends Gs{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,s.tidy)((()=>{if(e=Rs(e),"channelsLast"===this.dataFormat){const t=Yr(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Yr(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Yr(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Yr(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}yc.className="Cropping2D",s.serialization.registerClass(yc);class bc extends Gs{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,_r(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,fr(Ir,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return s.tidy((()=>{let t=Rs(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=s.transpose(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?s.image.resizeNearestNeighbor(t,[e,a]):s.image.resizeBilinear(t,[e,a]);return s.transpose(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?s.image.resizeNearestNeighbor(t,[e,a]):s.image.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}bc.className="UpSampling2D",s.serialization.registerClass(bc);class vc extends cc{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Es(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=co(e.depthwiseConstraint),this.depthwiseRegularizer=Xi(e.depthwiseRegularizer)}build(e){if((e=Fs(e)).length<4)throw new Qa("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(e),"."));const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Qa("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(e[t],")."));const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,s.tidy)((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0;return(0,s.tidy)((()=>{null==r&&(r="channelsLast"),_r(r);let i=ac(e,r);if(4!==e.rank)throw new Qa("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));if(4!==t.rank)throw new Qa("depthwiseKernel is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));return i=s.depthwiseConv2d(i,t,n,"same"===a?"same":"valid","NHWC",o),"channelsFirst"===r&&(i=s.transpose(i,[0,3,1,2])),i}))}(e=Rs(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=rs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Fs(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=tc(t,this.kernelSize[0],this.padding,this.strides[0]),s=tc(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Cs(this.depthwiseInitializer),e.depthwiseRegularizer=Hi(this.depthwiseRegularizer),e.depthwiseConstraint=oo(this.depthwiseRegularizer),e}}function xc(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new Qa("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function wc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return s.tidy((()=>{const l=t.shape.length;if(l<3)throw new Qa("Input should be at least 3D, but is ".concat(l,"D."));const u=[1,0].concat(Ur(2,l));if(t=s.transpose(t,u),null!=o)throw new Za("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=s.cast(s.cast(r,"bool"),"float32"),r.rank===l-1&&(r=s.expandDims(r,-1)),r=s.transpose(r,u)),a&&(t=s.reverse(t,0),null!=r&&(r=s.reverse(r,0)));const d=[];let h,p=n;const f=t.shape[0],m=s.unstack(t);let g,y;null!=r&&(g=s.unstack(r));for(let t=0;t<f;++t){const n=m[t],a=s.tidy((()=>e(n,p)));if(null==r)h=a[0],p=a[1];else{const e=s.tidy((()=>{const e=g[t],n=s.sub(s.onesLike(e),e);return{output:s.add(s.mul(a[0],e),s.mul(p[0],n)),newStates:p.map(((t,r)=>s.add(s.mul(a[1][r],e),s.mul(t,n))))}}));h=e.output,p=e.newStates}c&&d.push(h)}if(c){const e=1;y=s.stack(d,e)}return[h,y,p]}))}vc.className="DepthwiseConv2D",s.serialization.registerClass(vc);class kc extends Gs{constructor(e){let t;if(super(e),null==e.cell)throw new Qa("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Ac({cells:e.cell}):e.cell,null==t.stateSize)throw new Qa("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Bs({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Ur(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){_s(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return s.tidy((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Za("Constants support is not implemented in RNN yet.");_s(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Bs({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!s.util.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Qa("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((e=>new Bs({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];(0,s.tidy)((()=>{if(!this.stateful)throw new Ka("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Qa("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>s.zeros([n,e]))):this.states_=[s.zeros([n,this.cell.stateSize])];else if(null==e)s.dispose(this.states_),null!=this.keptStates&&(s.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>s.zeros([n,e]))):this.states_[0]=s.zeros([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Qa("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));!0===t?this.keptStates.push(this.states_.slice()):s.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,o=[n,r];if(!s.util.arraysEqual(a.shape,o))throw new Qa("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(o,", received shape=").concat(a.shape));this.states_[t]=a}}this.states_=this.states_.map((e=>s.keep(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=xc(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],o=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Bs({shape:e.shape}));o=o.concat(this.stateSpec)}null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof Ps){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return(0,s.tidy)((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=Rs(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new Qa("RNN Layer has ".concat(s," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=wc(((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const d=this.returnSequences?l:c;return this.returnState?[d].concat(u):d}))}getInitialState(e){return(0,s.tidy)((()=>{let t=s.zeros(e.shape);return t=s.sum(t,[1,2]),t=qr(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Jr(t,[1,e]):t)):this.cell.stateSize>1?[Jr(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===kc.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=wo(t.cell,n);return new e(Object.assign(t,{cell:a}))}}kc.className="RNN",s.serialization.registerClass(kc);class Sc extends Gs{}class Ic extends Sc{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gr(this.units,"units"),this.activation=Vi(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Es(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Es(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Es(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Xi(e.kernelRegularizer),this.recurrentRegularizer=Xi(e.recurrentRegularizer),this.biasRegularizer=Xi(e.biasRegularizer),this.kernelConstraint=co(e.kernelConstraint),this.recurrentConstraint=co(e.recurrentConstraint),this.biasConstraint=co(e.biasConstraint),this.dropout=Vr([1,Wr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Vr([1,Wr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Fs(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,s.tidy)((()=>{if(2!==e.length)throw new Qa("SimpleRNNCell expects 2 input Tensors, got ".concat(e.length,"."));let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rc({ones:()=>s.onesLike(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rc({ones:()=>s.onesLike(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;r=es(null!=o?s.mul(e,o):e,this.kernel.read()),null!=this.bias&&(r=rs(r,this.bias.read())),null!=i&&(n=s.mul(n,i));let c=s.add(r,es(n,this.recurrentKernel.read()));return null!=this.activation&&(c=this.activation.apply(c)),[c,c]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Bi(this.activation),useBias:this.useBias,kernelInitializer:Cs(this.kernelInitializer),recurrentInitializer:Cs(this.recurrentInitializer),biasInitializer:Cs(this.biasInitializer),kernelRegularizer:Hi(this.kernelRegularizer),recurrentRegularizer:Hi(this.recurrentRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:oo(this.kernelConstraint),recurrentConstraint:oo(this.recurrentConstraint),biasConstraint:oo(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Ic.className="SimpleRNNCell",s.serialization.registerClass(Ic);class Nc extends kc{constructor(e){e.cell=new Ic(e),super(e)}call(e,t){return(0,s.tidy)((()=>{null!=this.cell.dropoutMask&&(s.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Nc.className="SimpleRNN",s.serialization.registerClass(Nc);class Tc extends Sc{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Qa("GRUCell does not support reset_after parameter set to true.");this.units=e.units,gr(this.units,"units"),this.activation=Vi(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Vi(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Es(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Es(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Es(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Xi(e.kernelRegularizer),this.recurrentRegularizer=Xi(e.recurrentRegularizer),this.biasRegularizer=Xi(e.biasRegularizer),this.kernelConstraint=co(e.kernelConstraint),this.recurrentConstraint=co(e.recurrentConstraint),this.biasConstraint=co(e.biasConstraint),this.dropout=Vr([1,Wr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Vr([1,Wr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Fs(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,s.tidy)((()=>{if(2!==e.length)throw new Qa("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rc({ones:()=>s.onesLike(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rc({ones:()=>s.onesLike(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,o=this.recurrentDropoutMask;let i,c,l;0<this.dropout&&this.dropout<1&&(e=s.mul(e,r[0]));let u=es(e,this.kernel.read());this.useBias&&(u=rs(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=s.mul(a,o[0]));const d=this.recurrentKernel.read(),[h,p]=s.split(d,[2*this.units,this.units],d.rank-1),f=es(a,h),[m,g,y]=s.split(u,3,u.rank-1),[b,v]=s.split(f,2,f.rank-1);i=this.recurrentActivation.apply(s.add(m,b)),c=this.recurrentActivation.apply(s.add(g,v));const x=es(s.mul(c,a),p);l=this.activation.apply(s.add(y,x));const w=s.add(s.mul(i,a),s.mul(s.add(1,s.neg(i)),l));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Bi(this.activation),recurrentActivation:Bi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Cs(this.kernelInitializer),recurrentInitializer:Cs(this.recurrentInitializer),biasInitializer:Cs(this.biasInitializer),kernelRegularizer:Hi(this.kernelRegularizer),recurrentRegularizer:Hi(this.recurrentRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:oo(this.kernelConstraint),recurrentConstraint:oo(this.recurrentConstraint),biasConstraint:oo(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Tc.className="GRUCell",s.serialization.registerClass(Tc);class Cc extends kc{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Tc(e),super(e)}call(e,t){return(0,s.tidy)((()=>{null!=this.cell.dropoutMask&&(s.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Cc.className="GRU",s.serialization.registerClass(Cc);class Ec extends Sc{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gr(this.units,"units"),this.activation=Vi(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Vi(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Es(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Es(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Es(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Xi(e.kernelRegularizer),this.recurrentRegularizer=Xi(e.recurrentRegularizer),this.biasRegularizer=Xi(e.biasRegularizer),this.kernelConstraint=co(e.kernelConstraint),this.recurrentConstraint=co(e.recurrentConstraint),this.biasConstraint=co(e.biasConstraint),this.dropout=Vr([1,Wr([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Vr([1,Wr([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Fs(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends ls{apply(t,a){const r=e.apply([n]),s=(new ds).apply([n]),o=e.apply([2*n]);return Zr(Zr(r,s),o)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,s.tidy)((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Qa("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rc({ones:()=>s.onesLike(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rc({ones:()=>s.onesLike(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let c,l,u,d;0<this.dropout&&this.dropout<1&&(e=s.mul(e,o[0]));let h=es(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=s.mul(a,i[0])),h=s.add(h,es(a,this.recurrentKernel.read())),this.useBias&&(h=rs(h,this.bias.read()));const[p,f,m,g]=s.split(h,4,h.rank-1);c=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(f),u=s.add(s.mul(l,r),s.mul(c,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const y=s.mul(d,this.activation.apply(u));return[y,y,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Bi(this.activation),recurrentActivation:Bi(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Cs(this.kernelInitializer),recurrentInitializer:Cs(this.recurrentInitializer),biasInitializer:Cs(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Hi(this.kernelRegularizer),recurrentRegularizer:Hi(this.recurrentRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:oo(this.kernelConstraint),recurrentConstraint:oo(this.recurrentConstraint),biasConstraint:oo(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Ec.className="LSTMCell",s.serialization.registerClass(Ec);class _c extends kc{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ec(e),super(e)}call(e,t){return(0,s.tidy)((()=>{null!=this.cell.dropoutMask&&(s.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}_c.className="LSTM",s.serialization.registerClass(_c);class Ac extends Sc{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,s.tidy)((()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],s=0===o?[e[0]].concat(n):[s[0]].concat(n),s=i.call(s,t),r.push(s.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;_s(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{Or("RNNCell_".concat(a),(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of t.cells)a.push(wo(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ls(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}zs(t)}}function Rc(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:o}=e,i=()=>null!=o?o(t(),n):ss(t(),n),c=()=>os(i,t,a);if(!r||r<=1)return s.keep(c().clone());return Array(r).fill(void 0).map(c).map((e=>s.keep(e.clone())))}Ac.className="StackedRNNCells",s.serialization.registerClass(Ac);var Fc=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};class Dc extends kc{constructor(e){if(e.unroll)throw new Za("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Za("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Bs({ndim:5})]}call(e,t){return s.tidy((()=>{if(null!=this.cell.dropoutMask&&(s.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(s.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Qa("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return s.tidy((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)],o=s.zeros(r);return Array.isArray(t)?Array(t.length).fill(o):[o]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];s.tidy((()=>{if(!this.stateful)throw new Ka("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new Qa("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>s.zeros(r))):this.states_=[s.zeros(r)];else if(null==e)s.dispose(this.states_),null!=this.keptStates&&(s.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>s.zeros(r))):this.states_[0]=s.zeros(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Qa("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));t?this.keptStates.push(this.states_.slice()):s.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!s.util.arraysEqual(n.shape,a))throw new Qa("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[t]=n}}this.states_=this.states_.map((e=>s.keep(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===t,c=e[i?3:2],l=e[i?4:3],u=tc(c,a[0],r,s[0],o[0]),d=tc(l,a[1],r,s[1],o[1]);return[...e.slice(0,2),...i?[n,u,d]:[u,d,n]]}}Dc.className="ConvRNN2D";class Oc extends Ec{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,gr(this.filters,"filters"),this.kernelSize=ec(n,2,"kernelSize"),this.kernelSize.forEach((e=>gr(e,"kernelSize"))),this.strides=ec(a||1,2,"strides"),this.strides.forEach((e=>gr(e,"strides"))),this.padding=r||"valid",Ar(this.padding),this.dataFormat=s||"channelsLast",_r(this.dataFormat),this.dilationRate=ec(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>gr(e,"dilationRate")))}build(e){var t;e=Fs(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Qa("The channel dimension of the input should be defined. "+"Found ".concat(e[n]));const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends ls{apply(e,t){return Qr([n.apply([a]),s.ones([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return s.tidy((()=>{if(3!==e.length)throw new Qa("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=t.training||!1,a=e[0],r=e[1],o=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Rc({ones:()=>s.onesLike(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,c=(e,t,n)=>t&&t[n]?s.mul(t[n],e):e;let l=c(a,i,0),u=c(a,i,1),d=c(a,i,2),h=c(a,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Rc({ones:()=>s.onesLike(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let f=c(r,p,0),m=c(r,p,1),g=c(r,p,2),y=c(r,p,3);const[b,v,x,w]=s.split(this.kernel.read(),4,3),[k,S,I,N]=this.useBias?s.split(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,k,this.padding),u=this.inputConv(u,v,S,this.padding),d=this.inputConv(d,x,I,this.padding),h=this.inputConv(h,w,N,this.padding);const[T,C,E,_]=s.split(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E),y=this.recurrentConv(y,_);const A=this.recurrentActivation.apply(s.add(l,f)),R=this.recurrentActivation.apply(s.add(u,m)),F=s.add(s.mul(R,o),s.mul(A,this.activation.apply(s.add(d,g)))),D=s.mul(this.recurrentActivation.apply(s.add(h,y)),this.activation.apply(F));return[D,D,F]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Fc(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const r=s.conv2d(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?rs(r,n,this.dataFormat):r}recurrentConv(e,t){return s.conv2d(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Oc.className="ConvLSTM2DCell",s.serialization.registerClass(Oc);class Mc extends Dc{constructor(e){const t=new Oc(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Mc.className="ConvLSTM2D",s.serialization.registerClass(Mc);class Lc extends Gs{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?t[a]:this.noiseShape[a]);return n}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);const n=Rs(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return os((()=>ss(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Lc.className="Dropout",s.serialization.registerClass(Lc);class zc extends Lc{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}zc.className="SpatialDropout1D",s.serialization.registerClass(zc);class Bc extends Gs{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,gr(this.units,"units"),this.activation=Vi(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Es(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Es(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=co(e.kernelConstraint),this.biasConstraint=co(e.biasConstraint),this.kernelRegularizer=Xi(e.kernelRegularizer),this.biasRegularizer=Xi(e.biasRegularizer),this.activityRegularizer=Xi(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Fs(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Fs(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);const n=Rs(e),a=br(this.activation.getClassName());let r;return null!=a?r=es(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=es(n,this.kernel.read()),null!=this.bias&&(r=rs(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:Bi(this.activation),useBias:this.useBias,kernelInitializer:Cs(this.kernelInitializer),biasInitializer:Cs(this.biasInitializer),kernelRegularizer:Hi(this.kernelRegularizer),biasRegularizer:Hi(this.biasRegularizer),activityRegularizer:Hi(this.activityRegularizer),kernelConstraint:oo(this.kernelConstraint),biasConstraint:oo(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Bc.className="Dense",s.serialization.registerClass(Bc);class Pc extends Gs{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Fs(e);for(const t of e.slice(1))if(null==t)throw new Qa('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(e.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],Pr(e,1)]}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);let n=Rs(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,s.transpose)(n,e)}return function(e){if(e.rank<=1)throw new Qa("batchFlatten requires a minimum rank of 2. Got rank: ".concat(e.rank,"."));const t=[e.shape[0],Pr(e.shape,1)];return s.reshape(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Pc.className="Flatten",s.serialization.registerClass(Pc);class Vc extends Gs{constructor(e){super(e),this.supportsMasking=!0,this.activation=Vi(e.activation)}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);const n=Rs(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Bi(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Vc.className="Activation",s.serialization.registerClass(Vc);class Wc extends Gs{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,s.tidy)((()=>{return e=Rs(e),t=e,n=this.n,(0,s.tidy)((()=>{if(2!==t.shape.length)throw new Qa("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return Jr(qr(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Wc.className="RepeatVector",s.serialization.registerClass(Wc);class Uc extends Gs{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,s=null;for(let i=0;i<a.length;++i){const e=a[i];if(this.isUnknown(e)){if(null!==s)throw new Qa("Can only specifiy one unknown dimension.");s=i}else r*=e}const o=Pr(e);if(null!==s){if(0===r||o%r!==0)throw new Qa(n);a[s]=o/r}else if(o!==r)throw new Qa(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);const n=Rs(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return(0,s.reshape)(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Uc.className="Reshape",s.serialization.registerClass(Uc);class Gc extends Gs{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(e.dims," instead."));const t=Ur(1,e.dims.length+1);if(!s.util.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Bs({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Fs(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return(0,s.transpose)(Rs(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Gc.className="Permute",s.serialization.registerClass(Gc);class jc extends Gs{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Rs(e);return(0,s.any)((0,s.notEqual)(n,this.maskValue),-1)}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);const n=Rs(e),a=(0,s.any)((0,s.notEqual)(n,this.maskValue),-1,!0);return(0,s.mul)(n,(0,s.cast)(a,n.dtype))}))}}jc.className="Masking",s.serialization.registerClass(jc);class Hc extends Gs{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(rr(e.inputLength))}this.inputDim=e.inputDim,gr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,gr(this.outputDim,"outputDim"),this.embeddingsInitializer=Es(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Xi(e.embeddingsRegularizer),this.activityRegularizer=Xi(e.activityRegularizer),this.embeddingsConstraint=co(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,s.tidy)((()=>this.maskZero?(e=Rs(e),(0,s.notEqual)(e,(0,s.zerosLike)(e))):null))}computeOutputShape(e){if(e=Fs(e),null==this.inputLength)return[...e,this.outputDim];const t=rr(this.inputLength);if(t.length!==e.length-1)throw new Qa('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));{let n=0;for(let a=0;a<t.length;++a){const r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new Qa('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);let n=Rs(e);"int32"!==n.dtype&&(n=Hr(n,"int32"));const a=ts(this.embeddings.read(),(0,s.reshape)(n,[n.size]));return(0,s.reshape)(a,Fs(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Cs(this.embeddingsInitializer),embeddingsRegularizer:Hi(this.embeddingsRegularizer),activityRegularizer:Hi(this.activityRegularizer),embeddingsConstraint:oo(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Hc.className="Embedding",s.serialization.registerClass(Hc);class qc extends Gs{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Za}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new Qa("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Fs(e)]),e.length<2)throw new Qa("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(e.length," input(s)."));let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=hr(t),t.length>1)throw new Qa("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(e),"."));let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===hr(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,s.tidy)((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=Wr(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=qr(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const o of e){const e=o.rank;if(null==e){const e=o.shape,a=e[0],r=e.slice(1).concat([a]);let i=s.reshape(o,[a].concat(Pr(e.slice(1))));i=s.transpose(i,[1,0]),i=s.reshape(i,r),t.push(i),n=!0}else if(e>1){const a=Ur(1,e).concat([0]);t.push(s.transpose(o,a)),n=!0}else t.push(o)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=s.reshape(s.transpose(s.reshape(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(Ur(0,r-1));a=s.transpose(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const a of e)null!=a&&null!==a[0]&&n.push(a[0]);return n=hr(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return s.tidy((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Qa("`mask` should be an Array");if(!Array.isArray(e))throw new Qa("`inputs` should be an Array");if(t.length!==e.length)throw new Qa("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(e.length," vs ").concat(t.length,")"));if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:s.expandDims(e,0))))[0];for(let e=1;e<t.length-1;++e)n=s.logicalAnd(n,t[e]);return n}))}}class Xc extends qc{constructor(e){super(e)}mergeFunction(e){return(0,s.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=s.add(t,e[n]);return t}))}}Xc.className="Add",s.serialization.registerClass(Xc);class Kc extends qc{constructor(e){super(e)}mergeFunction(e){return(0,s.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=s.mul(t,e[n]);return t}))}}Kc.className="Multiply",s.serialization.registerClass(Kc);class Yc extends qc{constructor(e){super(e)}mergeFunction(e){return(0,s.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=s.add(t,e[n]);return s.mul(1/e.length,t)}))}}Yc.className="Average",s.serialization.registerClass(Yc);class Qc extends qc{constructor(e){super(e)}mergeFunction(e){return(0,s.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=s.maximum(t,e[n]);return t}))}}Qc.className="Maximum",s.serialization.registerClass(Qc);class Zc extends qc{constructor(e){super(e)}mergeFunction(e){return(0,s.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=s.minimum(t,e[n]);return t}))}}Zc.className="Minimum",s.serialization.registerClass(Zc);class Jc extends qc{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Qa("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const a of e)if(null!=a){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(s.util.arraysEqual(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new Qa("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,s.tidy)((()=>Qr(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Qa("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Qa("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Qa("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Qa("Mismatch in the length of mask (".concat(t.length,") ")+"and the legnth of inputs (".concat(e.length,")"));return s.tidy((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let o=0;o<e.length;++o)null==t[o]?a.push(s.cast(s.onesLike(e[o]),"bool")):t[o].rank<e[o].rank?a.push(s.expandDims(t[o],-1)):a.push(t[o]);const r=s.concat(a,this.axis);return s.all(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function $c(e,t){for(;e<0;)e+=t;return e}Jc.className="Concatenate",s.serialization.registerClass(Jc);class el extends qc{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){s.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Za("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new Qa("Dimension incompatibility: "+"".concat(t[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(e){if(2!==e.length)throw new Qa("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(e.length," input(s)."));let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>$c(t,e[n].shape.length))):[$c(this.axes,n.shape.length),$c(this.axes,a.shape.length)],this.normalize&&(n=ko(n,t[0]),a=ko(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Za("batchDot is not implemented for tensors of 4D or higher rank yet");if(s.util.assert(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(e.shape.length))),s.util.assert(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(t.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Za("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const o=n;return s.tidy((()=>{let n,i;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=s.reshape(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=s.reshape(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=o[0]===o[1]?s.sum(s.mul(e,t),o[0]):s.sum(s.mul(s.transpose(e,[1,0]),t),o[1]);else{const n=o[0]!==e.shape.length-1,a=o[1]===t.shape.length-1;i=s.matMul(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);i=s.squeeze(i,t)}return 1===i.shape.length&&(i=s.expandDims(i,1)),i}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[$c(this.axes,e.length),$c(this.axes,t.length)],n}computeOutputShape(e){s.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Za("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}el.className="Dot",s.serialization.registerClass(el);class tl extends Gs{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);const n=Rs(e);return os((()=>(0,s.add)($r(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}tl.className="GaussianNoise",s.serialization.registerClass(tl);class nl extends Gs{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t);const n=Rs(e);if(this.rate>0&&this.rate<1){return os((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,s.mul)(n,$r(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}nl.className="GaussianDropout",s.serialization.registerClass(nl);class al extends Gs{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Rs(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,s.tidy)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=Rs(e),a=-1.7580993408473766;let r=(0,s.greaterEqual)((0,s.randomUniform)(n),this.rate);r=Hr(r,"float32");const o=((1-this.rate)*(1+this.rate*a**2))**-.5,i=-o*a*this.rate,c=(0,s.add)((0,s.mul)(t,r),(0,s.mul)((0,s.add)(r,-1),a));return(0,s.add)((0,s.mul)(c,o),i)};return os(a,(()=>Rs(e)),t.training||!1)}return e}))}}function rl(e,t,n,a,r){let o,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)o=s.batchNorm2d(e,t,n,a,r,i);else if(3===e.rank)o=s.batchNorm3d(e,t,n,a,r,i);else{if(4!==e.rank)throw new Za("batchNormalization is not implemented for array of rank ".concat(e.rank," ")+"yet");o=s.batchNorm4d(e,t,n,a,r,i)}return o}function sl(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return s.util.arraysEqual(a.slice().sort(),Ur(0,e.rank-1))?function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,s.tidy)((()=>{const o=s.moments(e,a),i=o.mean,c=o.variance;return[rl(e,i,c,n,t,r),i,c]}))}(e,t,n,a,r):function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,s.tidy)((()=>{const o=s.moments(e,a),i=o.mean,c=o.variance,l=[];for(const t of Ur(0,e.rank))-1!==a.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=(0,s.reshape)(i,l),d=(0,s.reshape)(c,l),h=null==t?null:(0,s.reshape)(t,l),p=null==n?null:(0,s.reshape)(n,l);return[rl(e,u,d,p,h,r),i,c]}))}(e,t,n,a,r)}al.className="AlphaDropout",s.serialization.registerClass(al);class ol extends Gs{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Es(e.betaInitializer||"zeros"),this.gammaInitializer=Es(e.gammaInitializer||"ones"),this.movingMeanInitializer=Es(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Es(e.movingVarianceInitializer||"ones"),this.betaConstraint=co(e.betaConstraint),this.gammaConstraint=co(e.gammaConstraint),this.betaRegularizer=Xi(e.betaRegularizer),this.gammaRegularizer=Xi(e.gammaRegularizer)}build(e){e=Fs(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Qa("Axis ".concat(t," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(e),"."));this.inputSpec=[new Bs({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,s.tidy)((()=>{const n=null!=t.training&&t.training,a=Rs(e),r=a.shape,o=r.length,i=Ur(0,o),c=this.axis>=0?this.axis:this.axis+o;i.splice(c,1);const l=er(1,o);l[c]=r[c];const u=i.slice();u.sort();const d=!s.util.arraysEqual(u,Ur(0,o).slice(0,o-1));if(!n)return(()=>{if(d){const e=(0,s.reshape)(this.movingMean.read(),l),t=(0,s.reshape)(this.movingVariance.read(),l),n=this.center?(0,s.reshape)(this.beta.read(),l):null,r=this.scale?(0,s.reshape)(this.gamma.read(),l):null;return rl(a,e,t,n,r,this.epsilon)}return rl(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=sl(a,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{s.tidy((()=>{const a=1-n,r=e.read(),o=s.mul(s.sub(r,t),a);e.write(s.sub(r,o))}))};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Cs(this.betaInitializer),gammaInitializer:Cs(this.gammaInitializer),movingMeanInitializer:Cs(this.movingMeanInitializer),movingVarianceInitializer:Cs(this.movingVarianceInitializer),betaRegularizer:Hi(this.betaRegularizer),gammaRegularizer:Hi(this.gammaRegularizer),betaConstraint:oo(this.betaConstraint),gammaConstraint:oo(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ol.className="BatchNormalization",s.serialization.registerClass(ol);class il extends Gs{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Es(e.betaInitializer||"zeros"),this.gammaInitializer=Es(e.gammaInitializer||"ones"),this.betaRegularizer=Xi(e.betaRegularizer),this.gammaRegularizer=Xi(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Fs(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(const a of this.axis)if(a<0||a>=t)throw new Error("Invalid axis: ".concat(a));if(this.axis.length!==hr(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=Rs(e),a=n.shape,r=a.length;return(0,s.tidy)((()=>{let{mean:e,variance:t}=(0,s.moments)(n,this.axis,!0);const o=er(1,r);for(const n of this.axis)o[n]=a[n];const i=e=>null!=e&&e.shape.length!==r?s.reshape(e,o):e;let c=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],d=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(u.push(a[n]),d.push(1)):(u.push(1),d.push(a[n]));return e=s.tile(e,u),t=s.tile(t,u),null!=c&&(c=s.tile(c,d)),null!=l&&(l=s.tile(l,d)),rl(n,e,t,l,c,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Cs(this.betaInitializer),gammaInitializer:Cs(this.gammaInitializer),betaRegularizer:Hi(this.betaRegularizer),gammaRegularizer:Hi(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}il.className="LayerNormalization",s.serialization.registerClass(il);class cl extends Gs{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Qa("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(e.padding.length," array."));let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Qa("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(e.padding[0].length," array."));if(t=e.padding[0],2!==e.padding[1].length)throw new Qa("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(e.padding[1].length," array."));n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Bs({ndim:4})]}computeOutputShape(e){let t,n;return e=Fs(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,s.tidy)((()=>{return t=Rs(e),n=this.padding,a=this.dataFormat,(0,s.tidy)((()=>{if(4!==t.rank)throw new Qa("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Qa("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new Qa("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],s.pad(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function ll(e,t,n,a,r,o){return(0,s.tidy)((()=>{let i;_r(r),Rr(o),Ar(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),e=ac(e,r);const c="same"===a?"same":"valid";return i="max"===o?s.maxPool(e,t,n,c):s.avgPool(e,t,n,c),"channelsFirst"===r&&(i=s.transpose(i,[0,3,1,2])),i}))}function ul(e,t,n,a,r,o){return(0,s.tidy)((()=>{let i;_r(r),Rr(o),Ar(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),e=rc(e,r);const c="same"===a?"same":"valid";return i="max"===o?s.maxPool3d(e,t,n,c):s.avgPool3d(e,t,n,c),"channelsFirst"===r&&(i=s.transpose(i,[0,4,1,2,3])),i}))}cl.className="ZeroPadding2D",s.serialization.registerClass(cl);class dl extends Gs{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new Qa("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.poolSize)));this.poolSize=e.poolSize}if(gr(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new Qa("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.strides)));this.strides=e.strides}gr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Ar(this.padding),this.inputSpec=[new Bs({ndim:3})]}computeOutputShape(e){const t=tc((e=Fs(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,s.tidy)((()=>{this.invokeCallHook(e,t),e=qr(Rs(e),2);const n=this.poolingFunction(Rs(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return s.squeeze(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class hl extends dl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return _r(r),Ar(a),ll(e,t,n,a,r,"max")}}hl.className="MaxPooling1D",s.serialization.registerClass(hl);class pl extends dl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return _r(r),Ar(a),ll(e,t,n,a,r,"avg")}}pl.className="AveragePooling1D",s.serialization.registerClass(pl);class fl extends Gs{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Qa("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides];gr(this.poolSize,"poolSize"),gr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,_r(this.dataFormat),Ar(this.padding),this.inputSpec=[new Bs({ndim:4})]}computeOutputShape(e){e=Fs(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=tc(t,this.poolSize[0],this.padding,this.strides[0]),n=tc(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,s.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Rs(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ml extends fl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return _r(r),Ar(a),ll(e,t,n,a,r,"max")}}ml.className="MaxPooling2D",s.serialization.registerClass(ml);class gl extends fl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return _r(r),Ar(a),ll(e,t,n,a,r,"avg")}}gl.className="AveragePooling2D",s.serialization.registerClass(gl);class yl extends Gs{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Qa("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];gr(this.poolSize,"poolSize"),gr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,_r(this.dataFormat),Ar(this.padding),this.inputSpec=[new Bs({ndim:5})]}computeOutputShape(e){e=Fs(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=tc(t,this.poolSize[0],this.padding,this.strides[0]),n=tc(n,this.poolSize[1],this.padding,this.strides[1]),a=tc(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return(0,s.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Rs(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class bl extends yl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return _r(r),Ar(a),ul(e,t,n,a,r,"max")}}bl.className="MaxPooling3D",s.serialization.registerClass(bl);class vl extends yl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return _r(r),Ar(a),ul(e,t,n,a,r,"avg")}}vl.className="AveragePooling3D",s.serialization.registerClass(vl);class xl extends Gs{constructor(e){super(e),this.inputSpec=[new Bs({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Za}}class wl extends xl{constructor(e){super(e||{})}call(e,t){return(0,s.tidy)((()=>{const t=Rs(e);return s.mean(t,1)}))}}wl.className="GlobalAveragePooling1D",s.serialization.registerClass(wl);class kl extends xl{constructor(e){super(e||{})}call(e,t){return(0,s.tidy)((()=>{const t=Rs(e);return s.max(t,1)}))}}kl.className="GlobalMaxPooling1D",s.serialization.registerClass(kl);class Sl extends Gs{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,_r(this.dataFormat),this.inputSpec=[new Bs({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Za}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Il extends Sl{call(e,t){return(0,s.tidy)((()=>{const t=Rs(e);return"channelsLast"===this.dataFormat?s.mean(t,[1,2]):s.mean(t,[2,3])}))}}Il.className="GlobalAveragePooling2D",s.serialization.registerClass(Il);class Nl extends Sl{call(e,t){return(0,s.tidy)((()=>{const t=Rs(e);return"channelsLast"===this.dataFormat?s.max(t,[1,2]):s.max(t,[2,3])}))}}Nl.className="GlobalMaxPooling2D",s.serialization.registerClass(Nl);class Tl extends Gs{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=wo(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class Cl extends Tl{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Fs(e)).length<3)throw new Qa("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(e)));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Fs(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return(0,s.tidy)((()=>wc(((e,n)=>[Rs(this.layer.call(e,t)),[]]),e=Rs(e),[],!1,null,null,!1,!0)[1]))}}Cl.className="TimeDistributed",s.serialization.registerClass(Cl);class El extends Tl{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=wo(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=wo(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,fr(Cr,"BidirectionalMergeMode",r),e.weights)throw new Za("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):ar(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=xc(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const s=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new Qa("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const a=n.map((e=>new Bs({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),o.push(...a)}if(null!=a)throw new Za("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof Ps;for(const c of s)if(c instanceof Ps!==i)throw new Qa("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return(0,s.tidy)((()=>{const n=t.initialState;let a,r,o,i;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),o=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(a)&&(o=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=s.reverse(r,1)),"concat"===this.mergeMode?i=Qr([a,r]):"sum"===this.mergeMode?i=s.add(a,r):"ave"===this.mergeMode?i=s.mul(.5,s.add(a,r)):"mul"===this.mergeMode?i=s.mul(a,r):null==this.mergeMode&&(i=[a,r]),this.returnState?null==this.mergeMode?i.concat(o):[i].concat(o):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Or(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Or(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=wo(t.layer);if(delete t.layer,null!=t.numConstants)throw new Za("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}El.className="Bidirectional",s.serialization.registerClass(El);class _l extends Gs{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,s.tidy)((()=>("float32"!==(e=Rs(e)).dtype&&(e=Hr(e,"float32")),(0,s.add)((0,s.mul)(e,this.scale),this.offset))))}}_l.className="Rescaling",s.serialization.registerClass(_l);const{resizeBilinear:Al,cropAndResize:Rl}=s.image;class Fl extends Gs{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,o,i,c){return(0,s.tidy)((()=>{let l,u=!1;const d=[t/o,n/i,(a+t)/o,(r+n)/i],h=[];3===e.rank?(u=!0,l=(0,s.stack)([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(d);const p=(0,s.tensor)(h,[h.length,4]),f=(0,s.range)(0,h.length,1,"int32"),m=Rl(l,p,f,[a,r],"nearest");return Hr(u?Rs((0,s.unstack)(m)):m,c)}))}upsize(e,t,n,a){return(0,s.tidy)((()=>Hr(Al(e,[t,n]),a)))}call(e,t){return(0,s.tidy)((()=>{const t=Rs(e),n=t.dtype,a=t.shape,r=a[a.length-3],s=a[a.length-2];let o=0;r!==this.height&&(o=Math.floor((r-this.height)/2));let i=0;return s!==this.width&&(i=Math.floor((s-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(t,o,i,this.height,this.width,r,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Fs(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Fl.className="CenterCrop",s.serialization.registerClass(Fl);class Dl extends Gs{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Fs(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return(0,s.tidy)((()=>{let n;if("int32"!==(e=Rs(e)).dtype&&(e=Hr(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new Qa("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(t.countWeights));n=Rs(t.countWeights)}const a=(0,s.max)(e),r=(0,s.min)(e),o=(0,s.greater)(this.numTokens,a).bufferSync().get(0),i=(0,s.greaterEqual)(r,0).bufferSync().get(0);if(!o||!i)throw new Qa("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(e,t,n,a){let r=Rs(e);if("int32"!==r.dtype&&(r=Hr(r,"int32")),"int"===t)return r;const o=r.shape;if(0===r.rank&&(r=(0,s.expandDims)(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=(0,s.expandDims)(r,-1)),r.rank>2)throw new Qa("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(t," and input shape ").concat(o)+" which would result in output rank ".concat(r.rank,"."));const i=["multiHot","oneHot"].includes(t),c=r;let l;if(l="undefined"!==typeof a&&"count"===t?(0,s.denseBincount)(c,a,n,i):(0,s.denseBincount)(c,[],n,i),"tfIdf"!==t)return l;if(a)return(0,s.mul)(l,a);throw new Qa("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Dl.className="CategoryEncoding",s.serialization.registerClass(Dl);const Ol=new Set(["bilinear","nearest"]);class Ml extends Gs{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Ol.has(e.interpolation))throw new Qa("Invalid interpolation parameter: ".concat(e.interpolation," is not implemented"));this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Fs(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,s.tidy)((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return s.image.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return s.image.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...Ol]," are supported"))}))}}Ml.className="Resizing",s.serialization.registerClass(Ml);class Ll{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}Ll.className="RandomSeed";class zl extends Gs{constructor(e){super(e),this.randomGenerator=new Ll(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}zl.className="BaseRandomLayer";const Bl=new Set(["bilinear","nearest"]);class Pl extends zl{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Qa("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Qa("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new Qa("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!Bl.has(n))throw new Qa("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Fs(e))[2];return[this.imgHeight,-1,t]}call(e,t){return(0,s.tidy)((()=>{const t=Rs(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=(0,s.randomUniform)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return s.image.resizeBilinear(e,r);case"nearest":return s.image.resizeNearestNeighbor(e,r);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...Bl]," are supported"))}}))}}Pl.className="RandomWidth",s.serialization.registerClass(Pl);var Vl,Wl=n(1447),Ul=n(6699);function Gl(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(Xl(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const s in e){const o=Gl(e[s],t,n,a);r[s]=o}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error("Can't recurse into non-iterable type: ".concat(e))}return n.set(e,r.value),r.value}function jl(e){return Hl(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:ql)}function Hl(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(Xl(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=Hl(e.map((e=>e[s])),t,n);r[s]=a}return n.delete(a),r}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return r.value}function ql(e){return null===e?null:Xl(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Xl(e){let t=!1;if(s.env().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(4977);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof s.Tensor)&&!(e instanceof Promise)&&!t)}function Kl(e){return function(e,t){return Gl(e,t)}(e,Yl)}function Yl(e){return e instanceof s.Tensor?{value:e.clone(),recurse:!1}:Xl(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Ql{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Zl extends Ql{constructor(){super(Zl.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Jl(e){return new nu(e)}function $l(e,t){return new pu(e,t)}Zl.INITIAL_CAPACITY=32;class eu{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new lu(this,e)}filter(e){return new iu(this,e)}map(e){return new cu(this,e)}mapAsync(e){return new uu(this,e)}serialMapAsync(e){return new uu(this,e).serial()}flatmap(e){return new hu(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new ou(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ql;return this.rowMajorBatch(e,t).map((e=>jl(e,n)))}concatenate(e,t){return new pu(new tu([this,e]),t)}take(e){return e<0||null==e?this:new su(this,e)}skip(e){return e<0||null==e?this:new ru(this,e)}prefetch(e){return new fu(this,e)}shuffle(e,t){return new mu(this,e,t)}serial(){return new au(this)}}class tu extends eu{constructor(e){super(),this.items=e,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Kl(e),done:!1}}}class nu extends eu{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: ".concat(e.message),e}}}class au extends eu{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class ru extends eu{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;s.dispose(e.value)}return this.upstream.next()}}class su extends eu{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class ou extends eu{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class iu extends eu{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;s.dispose(e.value)}}}class cu extends eu{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=s.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),a=s.tensor_util.getTensorsInContainer(n);for(const r of t)s.tensor_util.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}}class lu extends eu{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class uu extends eu{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=s.tensor_util.getTensorsInContainer(e.value),n=await this.transform(e.value),a=s.tensor_util.getTensorsInContainer(n);for(const r of t)s.tensor_util.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}}class du extends eu{constructor(){super(),this.outputQueue=new Zl,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class hu extends du{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=s.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),a=s.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const r of t)s.tensor_util.isTensorInList(r,a)||r.dispose();return!0}}class pu extends eu{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(Vl||(Vl={}));class fu extends eu{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Ql(t)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class mu extends fu{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Ul.alea(n||s.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class gu{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return s.util.assert(e>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(e))),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),yu((async()=>(await n.iterator()).columnMajorBatch(e,t,bu)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,yu((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,yu((async()=>(await t.iterator()).filter((t=>s.tidy((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return yu((async()=>(await t.iterator()).map((t=>s.tidy((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return yu((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return yu((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,yu((async()=>$l(Jl((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,yu((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,r=Ul.alea(t||s.util.now().toString());return yu((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,yu((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function yu(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends gu{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function bu(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof s.Tensor||s.util.isTypedArray(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof s.Tensor?s.stack(e):s.tensor(e)}(e),recurse:!1}}return{value:null,recurse:!0}}gu.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function vu(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&s.util.assert("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors in the CPU backend.")))}))}const xu=s.kernel_impls.whereImpl;class wu extends s.KernelBackend{nextDataId(){return wu.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new s.DataStorage(this,(0,s.engine)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,s.env)().get("IS_NODE")&&s.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&s.util.isString(n[0])){const r=n.map((e=>s.util.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return s.backend_util.mergeRealAndImagArrays(e,t)}return s.util.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>s.util.decodeString(e)));return(0,s.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,s.buffer)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,s.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=s.util.now();e();return{kernelMs:s.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){vu([e],"where");const t=this.readSync(e.dataId);return xu(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}wu.nextDataId=0;function ku(e){return(t,n,a)=>{const r=s.util.getArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],a);return r}}function Su(e,t,n){return Iu(e,ku(t),n)}function Iu(e,t,n){return a=>{let{inputs:r,attrs:o,backend:i}=a;const{x:c}=r;vu(c,e);const l=i,u=l.data.get(c.dataId).values;let d;if("string"===c.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");d=s.backend_util.fromUint8ToStringArray(u)}else d=u;const h=n||c.dtype,p=t(d,h,o);return l.makeTensorInfo(c.shape,h,p)}}(0,s.registerBackend)("cpu",(()=>new wu),1);const Nu=Su(s.Elu,(e=>e>=0?e:Math.exp(e)-1)),Tu={kernelName:s.Elu,backendName:"cpu",kernelFunc:Nu};function Cu(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Eu={kernelName:s.Identity,backendName:"cpu",kernelFunc:Cu};function _u(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:o}=a;vu([r],"leakyRelu");const i=s.util.sizeFromShape(r.shape),c=n.data.get(r.dataId).values,l=s.util.getTypedArrayFromDType("float32",i);for(let s=0;s<c.length;s++)l[s]=c[s]<0?o*c[s]:c[s];return n.makeTensorInfo(r.shape,"float32",l)}const Au={kernelName:s.LeakyRelu,backendName:"cpu",kernelFunc:_u};function Ru(e){return(t,n,a,r,o)=>{const i=s.backend_util.assertAndGetBroadcastShape(t,n),c=i.length,l=s.util.computeStrides(i),u=s.util.sizeFromShape(i),d=s.util.getTypedArrayFromDType(o,u),h=t.length,p=n.length,f=s.util.computeStrides(t),m=s.util.computeStrides(n),g=s.backend_util.getBroadcastDims(t,i),y=s.backend_util.getBroadcastDims(n,i);if(g.length+y.length===0)for(let s=0;s<d.length;++s)d[s]=e(a[s%a.length],r[s%r.length]);else for(let b=0;b<d.length;++b){const t=s.util.indexToLoc(b,c,l),n=t.slice(-h);g.forEach((e=>n[e]=0));const o=s.util.locToIndex(n,h,f),i=t.slice(-p);y.forEach((e=>i[e]=0));const u=s.util.locToIndex(i,p,m);d[b]=e(a[o],r[u])}return[d,i]}}const Fu=Ru(((e,t)=>e<0?t*e:e));function Du(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;vu([a,r],"prelu");const s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,[i,c]=Fu(a.shape,r.shape,s,o,"float32");return n.makeTensorInfo(c,"float32",i)}const Ou={kernelName:s.Prelu,backendName:"cpu",kernelFunc:Du},Mu=Su(s.Relu,(e=>Math.max(0,e))),Lu={kernelName:s.Relu,backendName:"cpu",kernelFunc:Mu},zu=Su(s.Relu6,(e=>Math.min(Math.max(0,e),6))),Bu={kernelName:s.Relu6,backendName:"cpu",kernelFunc:zu},Pu=ku((e=>1/(1+Math.exp(-e)))),Vu=Su(s.Sigmoid,(e=>1/(1+Math.exp(-e)))),Wu={kernelName:s.Sigmoid,backendName:"cpu",kernelFunc:Vu};function Uu(e,t,n,a,r){if("linear"===n)return Cu({inputs:{x:t},backend:e});if("relu"===n)return Mu({inputs:{x:t},backend:e});if("elu"===n)return Nu({inputs:{x:t},backend:e});if("relu6"===n)return zu({inputs:{x:t},backend:e});if("prelu"===n)return Du({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return _u({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return Vu({inputs:{x:t},backend:e});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function Gu(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",o)},i}const ju={kernelName:s.Complex,backendName:"cpu",kernelFunc:Gu};function Hu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return Gu({inputs:{real:Hu(e,t,"float32"),imag:Hu(e,t,"float32")},backend:e})}const a=s.util.makeZerosTypedArray(s.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function qu(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const Xu={kernelName:s.Real,backendName:"cpu",kernelFunc:qu};function Ku(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=s.util.toTypedArray([0],n),[r,o]=Ru(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[o,"bool",r]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function Yu(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:o}=a;if("complex64"===o){if("complex64"===r.dtype)return Cu({inputs:{x:r},backend:n});const e=Hu(n,r.shape,r.dtype),t=Yu({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=Gu({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=qu({inputs:{input:r},backend:n}),t=Yu({inputs:{x:e},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(e),t}if(!s.util.hasEncodingLoss(r.dtype,o)){const e=Cu({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:o}}const i=n.data.get(r.dataId).values,[c,l,u]=Ku(i,r.shape,r.dtype,o);return n.makeTensorInfo(c,l,u)}const Qu={kernelName:s.Cast,backendName:"cpu",kernelFunc:Yu};function Zu(e,t,n,a){return null==n?n=>{let{inputs:r,backend:o}=n;const{a:i,b:c}=r,l=o;vu([i,c],e);const u=l.data.get(i.dataId).values,d=l.data.get(c.dataId).values,h="string"===i.dtype?s.backend_util.fromUint8ToStringArray(u):u,p="string"===i.dtype?s.backend_util.fromUint8ToStringArray(d):d,f=a||i.dtype,[m,g]=t(i.shape,c.shape,h,p,f);return l.makeTensorInfo(g,f,m)}:e=>{let{inputs:r,backend:s}=e;const{a:o,b:i}=r,c=s;if("complex64"===o.dtype||"complex64"===i.dtype){const e=Yu({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,s=c.data.get(a.dataId).values,l=c.data.get(r.dataId).values,u=Yu({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),d=c.data.get(u.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=c.data.get(h.dataId).values,m=c.data.get(p.dataId).values,[g,y,b]=n(o.shape,i.shape,s,l,f,m),v=c.makeTensorInfo(b,"float32",g),x=c.makeTensorInfo(b,"float32",y),w=Gu({inputs:{real:v,imag:x},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(v),c.disposeIntermediateTensorInfo(x),w}{const e=c.data.get(o.dataId).values,n=c.data.get(i.dataId).values,r=a||o.dtype,[s,l]=t(o.shape,i.shape,e,n,r);return c.makeTensorInfo(l,r,s)}}}function Ju(e){return(t,n,a,r,o,i)=>{const c=s.backend_util.assertAndGetBroadcastShape(t,n),l=s.util.sizeFromShape(c),u=c.length,d=s.util.computeStrides(c),h=s.util.getTypedArrayFromDType("float32",l),p=s.util.getTypedArrayFromDType("float32",l),f=s.backend_util.getBroadcastDims(t,c),m=s.backend_util.getBroadcastDims(n,c),g=s.backend_util.mergeRealAndImagArrays(a,r),y=s.backend_util.mergeRealAndImagArrays(o,i),b=t.length,v=s.util.computeStrides(t),x=n.length,w=s.util.computeStrides(n);if(f.length+m.length===0)for(let s=0;s<h.length;s++){const t=s%g.length,n=s%y.length,a=e(g[2*t],g[2*t+1],y[2*n],y[2*n+1]);h[s]=a.real,p[s]=a.imag}else for(let k=0;k<h.length;k++){const t=s.util.indexToLoc(k,u,d),n=t.slice(-b);f.forEach((e=>n[e]=0));const a=s.util.locToIndex(n,b,v),r=t.slice(-x);m.forEach((e=>r[e]=0));const o=s.util.locToIndex(r,x,w),i=e(g[2*a],g[2*a+1],y[2*o],y[2*o+1]);h[k]=i.real,p[k]=i.imag}return[h,p,c]}}const $u=Ru(((e,t)=>e+t)),ed=Ju(((e,t,n,a)=>({real:e+n,imag:t+a}))),td=Zu(s.Add,$u,ed),nd={kernelName:s.Add,backendName:"cpu",kernelFunc:td};function ad(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:o}=a,i=s.util.sizeFromShape(r.shape),c=s.util.inferFromImplicitShape(o,i),l=s.util.sizeFromShape(c);s.util.assert(i===l,(()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(r.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=c,t.shape=c}return{dataId:r.dataId,shape:c,dtype:r.dtype}}const rd={kernelName:s.Reshape,backendName:"cpu",kernelFunc:ad};function sd(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o}=t,{transposeA:i,transposeB:c}=a;vu([r,o],"matMul");const l=r.shape.length,u=o.shape.length,d=i?r.shape[l-2]:r.shape[l-1],h=c?o.shape[u-1]:o.shape[u-2],p=i?r.shape[l-1]:r.shape[l-2],f=c?o.shape[u-2]:o.shape[u-1],m=r.shape.slice(0,-2),g=o.shape.slice(0,-2),y=s.util.sizeFromShape(m),b=s.util.sizeFromShape(g),v=s.broadcast_util.assertAndGetBroadcastShape(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([p,f]);s.util.assert(d===h,(()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(h,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(o.shape," and transposeA=").concat(i)+" and transposeB=".concat(c," must match.")));const x=c?[b,f,h]:[b,h,f],w=ad({inputs:{x:r},backend:n,attrs:{shape:i?[y,d,p]:[y,p,d]}}),k=ad({inputs:{x:o},backend:n,attrs:{shape:x}}),S=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],N=c?k.shape[1]:k.shape[2],T=Math.max(y,b),C=n.data.get(w.dataId).values,E=n.data.get(k.dataId).values,_=s.util.computeStrides(w.shape),A=s.util.computeStrides(k.shape),[R,F,D]=i?[_[0],1,_[1]]:[_[0],_[1],1],[O,M,L]=c?[1,A[1],A[0]]:[A[1],1,A[0]],z=I*N,B=(0,s.buffer)([T,I,N],w.dtype),P=B.values,V=n.blockSize;for(let s=0;s<T;s++){const e=s%y,t=s%b;for(let n=0;n<I;n+=V){const a=Math.min(n+V,I);for(let r=0;r<N;r+=V){const o=Math.min(r+V,N);for(let i=0;i<S;i+=V){const c=Math.min(i+V,S);for(let l=n;l<a;l++)for(let n=r;n<o;n++){let a=0;for(let r=i;r<c;r++){a+=C[e*R+l*F+r*D]*E[r*O+n*M+t*L]}P[s*z+(l*N+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(v,B.dtype,B.values)}const od={kernelName:s.BatchMatMul,backendName:"cpu",kernelFunc:sd};const id={kernelName:s._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=a;let h,p,f;const m=[];h=sd({inputs:{a:r,b:s},attrs:{transposeA:c,transposeB:l},backend:n}),o&&(p=td({inputs:{a:h,b:o},backend:n}),m.push(h),h=p),u&&(f=Uu(n,h,u,i,d),m.push(h),h=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return h}};function cd(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const ld={kernelName:s.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;vu(t,"abs");let a=new Float32Array(s.util.sizeFromShape(t.shape));return a=cd(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},ud=Su(s.Acos,(e=>Math.acos(e))),dd={kernelName:s.Acos,backendName:"cpu",kernelFunc:ud},hd=Su(s.Acosh,(e=>Math.acosh(e))),pd={kernelName:s.Acosh,backendName:"cpu",kernelFunc:hd};const fd={kernelName:s.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;vu(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),o=(0,s.buffer)(a[0].shape,a[0].dtype),i=o.values;for(let s=0;s<a.length;s++){const e=r[s];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};function md(e,t,n,a,r){const o=t.length,i=s.util.sizeFromShape(t),c=s.util.computeStrides(t),l=s.util.computeStrides(r),u=s.util.getTypedArrayFromDType(n,s.util.sizeFromShape(r));for(let d=0;d<i;++d){const t=s.util.indexToLoc(d,o,c),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];u[s.util.locToIndex(n,o,l)]=e[d]}return u}function gd(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;vu(r,"transpose");const o=r.shape.length,i=new Array(o);for(let l=0;l<i.length;l++)i[l]=r.shape[s[l]];const c=md(a.data.get(r.dataId).values,r.shape,r.dtype,s,i);return{dataId:a.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const yd={kernelName:s.Transpose,backendName:"cpu",kernelFunc:gd};const bd={kernelName:s.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:i}=a;vu(r,"all");const c=s.util.parseAxisParam(o,r.shape);let l=c;const u=s.backend_util.getAxesPermutation(l,r.shape.length);let d=r;null!=u&&(d=gd({inputs:{x:r},backend:n,attrs:{perm:u}}),l=s.backend_util.getInnerMostAxes(l.length,r.shape.length)),s.backend_util.assertAxesAreInnerMostDims("all",l,d.shape.length);const[h,p]=s.backend_util.computeOutAndReduceShapes(d.shape,l),f=s.util.sizeFromShape(p),m=s.util.makeZerosTypedArray(s.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let s=0;s<m.length;++s){const e=s*f;let t=g[e];for(let n=0;n<f;++n){const a=g[e+n];t=t&&a}m[s]=t}null!=u&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(i){const e=ad({inputs:{x:y},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(y),e}return y}};const vd={kernelName:s.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:i}=a;vu(r,"any");const c=s.util.parseAxisParam(o,r.shape);let l=c;const u=s.backend_util.getAxesPermutation(l,r.shape.length);let d=r;null!=u&&(d=gd({inputs:{x:r},backend:n,attrs:{perm:u}}),l=s.backend_util.getInnerMostAxes(l.length,r.shape.length)),s.backend_util.assertAxesAreInnerMostDims("any",l,d.shape.length);const[h,p]=s.backend_util.computeOutAndReduceShapes(d.shape,l),f=s.util.sizeFromShape(p),m=s.util.makeZerosTypedArray(s.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let s=0;s<m.length;++s){const e=s*f;let t=g[e];for(let n=0;n<f;++n){const a=g[e+n];t=t||a}m[s]=t}null!=u&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(i){const e=ad({inputs:{x:y},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(y),e}return y}};const xd={kernelName:s.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;vu(r,"argMax");let i=s.util.parseAxisParam(o,r.shape);const c=s.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=gd({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=s.backend_util.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],s.backend_util.assertAxesAreInnerMostDims("argMax",i,l.shape.length);const[d,h]=s.backend_util.computeOutAndReduceShapes(l.shape,i),p=s.util.sizeFromShape(d),f=s.util.makeZerosTypedArray(p,"int32"),m=s.util.sizeFromShape(h),g=n.data.get(l.dataId).values;for(let s=0;s<f.length;++s){const e=s*m;let t=g[e],n=0;for(let a=0;a<m;++a){const r=g[e+a];r>t&&(t=r,n=a)}f[s]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}};const wd={kernelName:s.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;vu(r,"argMin");let i=s.util.parseAxisParam(o,r.shape);const c=s.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=gd({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=s.backend_util.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],s.backend_util.assertAxesAreInnerMostDims("argMin",i,l.shape.length);const[d,h]=s.backend_util.computeOutAndReduceShapes(l.shape,i),p=s.util.sizeFromShape(d),f=s.util.makeZerosTypedArray(p,"int32"),m=s.util.sizeFromShape(h),g=n.data.get(l.dataId).values;for(let s=0;s<f.length;++s){const e=s*m;let t=g[e],n=0;for(let a=0;a<m;++a){const r=g[e+a];r<t&&(t=r,n=a)}f[s]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}},kd=Su(s.Asin,(e=>Math.asin(e))),Sd={kernelName:s.Asin,backendName:"cpu",kernelFunc:kd},Id=Su(s.Asinh,(e=>Math.asinh(e))),Nd={kernelName:s.Asinh,backendName:"cpu",kernelFunc:Id},Td=Su(s.Atan,(e=>Math.atan(e))),Cd={kernelName:s.Atan,backendName:"cpu",kernelFunc:Td},Ed=Ru(((e,t)=>Math.atan2(e,t))),_d=Zu(s.Atan2,Ed),Ad={kernelName:s.Atan2,backendName:"cpu",kernelFunc:_d},Rd=Su(s.Atanh,(e=>Math.atanh(e))),Fd={kernelName:s.Atanh,backendName:"cpu",kernelFunc:Rd};function Dd(e,t,n,a,r,o){const i=r.strideHeight,c=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,s.buffer)(r.outShape,n),y=g.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],v=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let s=0;s<r.batchSize;++s){const t=s*b,n=s*a[0];for(let s=0;s<r.inChannels;++s)for(let g=0;g<r.outHeight;++g){const b=g*i-p,w=Math.max(0,b),k=Math.min(r.inHeight,d+b),S=t+g*v;for(let t=0;t<r.outWidth;++t){const i=t*c-f,d=Math.max(0,i),p=Math.min(r.inWidth,h+i);let g=m,b=0,v=0;for(let t=w;t<k;t+=l){const r=n+t*a[1];for(let t=d;t<p;t+=u){const n=e[r+t*a[2]+s];"max"===o&&n>g?g=n:"avg"===o&&(b+=n,v++)}if(isNaN(g))break}y[S+t*x+s]="avg"===o?b/v:g}}}return g}function Od(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=(0,s.buffer)(a.outShape,"int32"),c=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,g=(0,s.buffer)(t,n,e);for(let s=0;s<a.batchSize;++s)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*c-f;let y=n;for(;y<0;)y+=u;const b=Math.min(a.inHeight,h+n);for(let c=0;c<a.outWidth;++c){const h=c*l-m;let f=h;for(;f<0;)f+=d;const v=Math.min(a.inWidth,p+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=u){const i=t-n;for(let n=f;n<v;n+=d){const c=n-h,l=g.get(s,t,n,e);l>x&&(x=l,w=r?o?((s*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:i*p+c)}}i.set(w,s,t,c,e)}}return i}function Md(e,t,n,a,r,o){const i=r.strideDepth,c=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,d=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterDepth,f=r.effectiveFilterHeight,m=r.effectiveFilterWidth,g=r.padInfo.front,y=r.padInfo.top,b=r.padInfo.left,v="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=(0,s.buffer)(r.outShape,n),w=x.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],N=r.outShape[4];for(let s=0;s<r.batchSize;++s){const t=s*k,n=s*a[0];for(let s=0;s<r.inChannels;++s)for(let x=0;x<r.outDepth;++x){const k=x*i-g;let T=k;for(;T<0;)T+=u;const C=Math.min(r.inDepth,p+k),E=t+x*S;for(let t=0;t<r.outHeight;++t){const i=t*c-y;let p=i;for(;p<0;)p+=d;const g=Math.min(r.inHeight,f+i),x=E+t*I;for(let t=0;t<r.outWidth;++t){const i=t*l-b;let c=i;for(;c<0;)c+=h;const f=Math.min(r.inWidth,m+i),y=x+t*N;let k=v,S=0,I=0;for(let t=T;t<C;t+=u){const r=n+t*a[1];for(let t=p;t<g;t+=d){const n=r+t*a[2];for(let t=c;t<f;t+=h){const r=e[n+t*a[3]+s];if("max"===o&&r>k?k=r:"avg"===o&&(S+=r,I++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[y+s]="avg"===o?S/Math.max(I,1):k}}}}return x}const Ld={kernelName:s.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;vu(r,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=s.backend_util.computePool2DInfo(r.shape,o,i,1,c,l);let d;if(1===u.filterWidth&&1===u.filterHeight&&s.util.arraysEqual(u.inShape,u.outShape))d=Cu({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=s.util.computeStrides(r.shape),a=Dd(e,r.shape,r.dtype,t,u,"avg");d=n.makeTensorInfo(u.outShape,r.dtype,a.values)}return d}};const zd={kernelName:s.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l,dataFormat:u}=a;vu(r,"avgPool3d");const d=s.backend_util.computePool3DInfo(r.shape,o,i,1,c,l,u),h=Md(n.data.get(r.dataId).values,r.shape,r.dtype,s.util.computeStrides(r.shape),d,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Bd={kernelName:s.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a;vu([r,o],"avgPool3DGrad");const d=s.backend_util.computePool3DInfo(o.shape,i,c,1,l,u),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=d.dilationDepth,v=d.dilationHeight,x=d.dilationWidth,w=d.effectiveFilterDepth,k=d.effectiveFilterHeight,S=d.effectiveFilterWidth,I=w-1-d.padInfo.front,N=S-1-d.padInfo.left,T=k-1-d.padInfo.top,C=(0,s.buffer)(o.shape,"float32"),E=1/(m*g*y),_=n.bufferSync(r);for(let s=0;s<d.batchSize;++s)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){const r=t-I,o=n-T,i=a-N;let c=0;for(let t=0;t<w;t+=b){const n=(r+t)/h;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let t=0;t<k;t+=v){const a=(o+t)/p;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let t=0;t<S;t+=x){const r=(i+t)/f;if(r<0||r>=d.outWidth||Math.floor(r)!==r)continue;c+=_.get(s,n,a,r,e)}}}C.set(c*E,s,t,n,a,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const Pd={kernelName:s.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,i=o;vu([r,o],"avgPoolGrad");const{filterSize:c,strides:l,pad:u}=a,d=s.backend_util.computePool2DInfo(i.shape,c,l,1,u),h=d.strideHeight,p=d.strideWidth,f=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,v=d.effectiveFilterWidth,x=v-1-d.padInfo.left,w=b-1-d.padInfo.top,k=(0,s.buffer)(i.shape,"float32"),S=1/(f*m),I=n.data.get(r.dataId).values,N=(0,s.buffer)(r.shape,"float32",I);for(let s=0;s<d.batchSize;++s)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const a=t-w,r=n-x;let o=0;for(let t=0;t<b;t+=g){const n=(a+t)/h;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let t=0;t<v;t+=y){const a=(r+t)/p;if(a<0||a>=d.outWidth||Math.floor(a)!==a)continue;o+=N.get(s,n,a,e)}}k.set(o*S,s,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const Vd={kernelName:s.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:o,offset:i,mean:c,variance:l}=t;s.util.assert(c.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.util.assert(null==i||c.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.util.assert(null==o||c.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),vu([r,c,l,o,i],"batchNorm");let{varianceEpsilon:u}=a;null==u&&(u=.001);const d=n.data.get(r.dataId).values,h=n.data.get(c.dataId).values,p=n.data.get(l.dataId).values,f=o?n.data.get(o.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),y=m.length,b=f.length,v=p.length,x=h.length;let w=0,k=0,S=0,I=0;for(let s=0;s<d.length;++s)g[s]=m[w++]+(d[s]-h[k++])*f[S++]/Math.sqrt(p[I++]+u),w>=y&&(w=0),k>=x&&(k=0),S>=b&&(S=0),I>=v&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,g)}};function Wd(e,t,n,a,r){const o=s.slice_util.isSliceContinous(a,t,n),i=s.util.sizeFromShape(n),c=s.util.computeStrides(a);if(o){const n=s.slice_util.computeFlatOffset(t,c);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l="string"===r?s.backend_util.fromUint8ToStringArray(e):e,u=(0,s.buffer)(a,r,l),d=(0,s.buffer)(n,r);for(let s=0;s<d.size;++s){const e=d.indexToLoc(s),n=e.map(((e,n)=>e+t[n]));d.set(u.get(...n),...e)}return"string"===r?s.backend_util.fromStringArrayToUint8(d.values):d.values}function Ud(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,size:i}=a;vu(r,"slice");const[c,l]=s.slice_util.parseSliceParams(r,o,i);s.slice_util.assertParamsValid(r,c,l);const u=Wd(n.data.get(r.dataId).values,c,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const Gd={kernelName:s.Slice,backendName:"cpu",kernelFunc:Ud};const jd={kernelName:s.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,crops:i}=a;vu([r],"batchToSpaceND");const c=o.reduce(((e,t)=>e*t)),l=s.backend_util.getReshaped(r.shape,o,c),u=s.backend_util.getPermuted(l.length,o.length),d=s.backend_util.getReshapedPermuted(r.shape,o,c),h=s.backend_util.getSliceBeginCoords(i,o.length),p=s.backend_util.getSliceSize(d,i,o.length),f=ad({inputs:{x:r},backend:n,attrs:{shape:l}}),m=gd({inputs:{x:f},backend:n,attrs:{perm:u}}),g=ad({inputs:{x:m},backend:n,attrs:{shape:d}}),y=Ud({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};function Hd(e,t,n,a,r){const o=s.util.sizeFromShape(a),i=s.util.makeZerosTypedArray(r,n);for(let s=0;s<e.length;s++){const n=e[s];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(i[n]+=o>0?t[s]:1)}return i}function qd(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e.shape[0],o=e.shape[1],i=(0,s.buffer)([r,n],t.dtype);for(let s=0;s<r;s++)for(let r=0;r<o;r++){const o=e.get(s,r);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(a?i.set(1,s,o):t.size>0?i.set(i.get(s,o)+t.get(s,r),s,o):i.set(i.get(s,o)+1,s,o))}return i}const Xd={kernelName:s.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=Hd(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}},Kd=Ru(((e,t)=>e&t)),Yd=Zu(s.BitwiseAnd,Kd),Qd={kernelName:s.BitwiseAnd,backendName:"cpu",kernelFunc:Yd};const Zd={kernelName:s.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=s.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},Jd=ku((e=>Math.ceil(e))),$d=Iu(s.Ceil,Jd),eh={kernelName:s.Ceil,backendName:"cpu",kernelFunc:$d},th=Su(s.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),nh={kernelName:s.ClipByValue,backendName:"cpu",kernelFunc:th},ah={kernelName:s.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(s.util.sizeFromShape(t.shape)),r=n.data.get(t.dataId),o=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,c=n.data.get(o.dataId).values,l=n.data.get(i.dataId).values;for(let s=0;s<c.length;s++){const e=c[s],t=l[s];a[s]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};function rh(e,t,n,a){const r=s.util.getArrayFromDType(n,s.util.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=s.util.sizeFromShape(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const o="string"===n?s.backend_util.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const s=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[s+t]=o[i++]}a+=e.shape[1]}))}return r}function sh(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const oh={kernelName:s.Imag,backendName:"cpu",kernelFunc:sh};function ih(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,o=s.util.parseAxisParam(r,t[0].shape)[0],i=t.map((e=>e.shape));s.backend_util.assertParamsConsistent(i,o);let c=s.backend_util.computeOutShape(t.map((e=>e.shape)),o);if(0===s.util.sizeFromShape(c))return n.makeTensorInfo(c,t[0].dtype,[]);const l=t.filter((e=>s.util.sizeFromShape(e.shape)>0));if(1===l.length)return Cu({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){const e=l.map((e=>qu({inputs:{input:e},backend:n}))),t=l.map((e=>sh({inputs:{input:e},backend:n}))),a=ih({inputs:e,backend:n,attrs:{axis:o}}),r=ih({inputs:t,backend:n,attrs:{axis:o}}),s=Gu({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),s}const u=l.map((e=>{const t=s.util.sizeFromShape(e.shape.slice(o));return ad({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),d=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));c=s.backend_util.computeOutShape(u.map((e=>e.shape)),1);const h=1===u[0].shape[0],p=rh(d,c,t[0].dtype,h),f=s.backend_util.computeOutShape(l.map((e=>e.shape)),o),m=n.makeTensorInfo(f,t[0].dtype,p);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const ch={kernelName:s.Concat,backendName:"cpu",kernelFunc:ih};function lh(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:i,pad:c,dataFormat:l,dilations:u,dimRoundingMode:d}=a;vu([r,o],"conv2d");const h=s.backend_util.convertConv2DDataFormat(l),p=s.backend_util.computeConv2DInfo(r.shape,o.shape,i,u,c,d,!1,h),f=p.filterHeight,m=p.filterWidth,g=p.dilationHeight,y=p.dilationWidth,b=p.padInfo.left,v=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new s.TensorBuffer(p.outShape,r.dtype),k=s.util.computeStrides(r.shape),S=s.util.computeStrides(o.shape),I=k[0],N=x?k[1]:k[2],T=x?k[2]:1,C=x?1:k[1],E=w.strides[0],_=x?w.strides[1]:w.strides[2],A=x?w.strides[2]:1,R=x?1:w.strides[1],F=n.data.get(r.dataId).values,D=n.data.get(o.dataId).values,O=w.values;for(let s=0;s<p.batchSize;++s){const e=s*I,t=s*E;for(let n=0;n<p.outHeight;++n){const a=t+n*_,r=n*p.strideHeight-v;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=p.inHeight)continue;const s=t*S[0],o=e+n*N;for(let e=0;e<p.outWidth;++e){const t=a+e*A,n=e*p.strideWidth-b;for(let e=0;e<m;++e){const a=n+e*y;if(a<0||a>=p.inWidth)continue;const r=o+a*T;let i=s+e*S[1];for(let e=0;e<p.inChannels;++e){const n=F[r+e*C];for(let e=0;e<p.outChannels;++e)O[t+e*R]+=n*D[i+e];i+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,O)}const uh={kernelName:s.Conv2D,backendName:"cpu",kernelFunc:lh};const dh={kernelName:s.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:i,pad:c,dataFormat:l,dimRoundingMode:u,filterShape:d}=a;vu([r,o],"conv2dBackpropFilter");const h=s.backend_util.convertConv2DDataFormat(l),p=s.backend_util.computeConv2DInfo(r.shape,d,i,1,c,u,!1,h),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=p,b="channelsLast"===p.dataFormat,v=new s.TensorBuffer(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,k=n.data.get(r.dataId).values,S=n.data.get(o.dataId).values,I=new s.TensorBuffer(r.shape,r.dtype,k),N=new s.TensorBuffer(o.shape,o.dtype,S);for(let s=0;s<g;++s){const e=Math.max(0,Math.ceil((w-s)/f)),t=Math.min(p.outHeight,(p.inHeight+w-s)/f);for(let n=0;n<y;++n){const a=Math.max(0,Math.ceil((x-n)/m)),r=Math.min(p.outWidth,(p.inWidth+x-n)/m);for(let o=0;o<p.inChannels;++o)for(let i=0;i<p.outChannels;++i){let c=0;for(let l=0;l<p.batchSize;++l)for(let u=e;u<t;++u){const e=s+u*f-w;for(let t=a;t<r;++t){const a=n+t*m-x;c+=b?I.get(l,e,a,o)*N.get(l,u,t,i):I.get(l,o,e,a)*N.get(l,i,u,t)}}v.set(c,s,n,o,i)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const hh={kernelName:s.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{inputShape:i,strides:c,pad:l,dataFormat:u,dimRoundingMode:d}=a;vu([r,o],"conv2dBackpropInput");const h=s.util.computeStrides(o.shape),p=s.util.computeStrides(r.shape);let f=s.backend_util.convertConv2DDataFormat(u);const m=s.backend_util.computeConv2DInfo(i,o.shape,c,1,l,d,!1,f),g=new s.TensorBuffer(m.inShape,"float32"),y=g.values,b=n.data.get(r.dataId).values,v=n.data.get(o.dataId).values,[x,w,k]=h,{batchSize:S,filterHeight:I,filterWidth:N,inChannels:T,inHeight:C,inWidth:E,outChannels:_,outHeight:A,outWidth:R,strideHeight:F,strideWidth:D}=m;f=m.dataFormat;const O=I-1-m.padInfo.top,M=N-1-m.padInfo.left,L="channelsLast"===f,z=g.strides[0],B=L?g.strides[1]:g.strides[2],P=L?g.strides[2]:1,V=L?1:g.strides[1],W=p[0],U=L?p[1]:p[2],G=L?p[2]:1,j=L?1:p[1];for(let s=0;s<S;++s)for(let e=0;e<T;++e)for(let t=0;t<C;++t){const n=t-O,a=Math.max(0,Math.ceil(n/F)),r=Math.min(A,(I+n)/F);for(let o=0;o<E;++o){const i=o-M,c=Math.max(0,Math.ceil(i/D)),l=Math.min(R,(N+i)/D);let u=0;for(let t=a;t<r;++t){const a=t*F-n;for(let n=c;n<l;++n){const r=W*s+U*t+G*n,o=x*(I-1-a)+w*(N-1-(n*D-i))+k*e;for(let e=0;e<_;++e){u+=b[r+j*e]*v[o+e]}}}y[z*s+B*t+P*o+V*e]=u}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const ph={kernelName:s.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:i,pad:c,dilations:l}=a;vu([r,o],"conv3d");const u=s.backend_util.computeConv3DInfo(r.shape,o.shape,i,l,c),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=u,b=y.front,v=y.left,x=y.top,w=new s.TensorBuffer(u.outShape,r.dtype),k=n.data.get(r.dataId).values,S=n.data.get(o.dataId).values,I=w.values,N=s.util.computeStrides(r.shape),T=s.util.computeStrides(o.shape);for(let s=0;s<u.batchSize;++s){const e=s*N[0],t=s*w.strides[0];for(let n=0;n<u.outDepth;++n){const a=t+n*w.strides[1],r=n*u.strideDepth-b;for(let t=0;t<d;++t){const n=r+t*f;if(n<0||n>=u.inDepth)continue;const s=t*T[0],o=e+n*N[1];for(let e=0;e<u.outHeight;++e){const t=a+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const a=n+e*m;if(a<0||a>=u.inHeight)continue;const r=s+e*T[1],i=o+a*N[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,a=e*u.strideWidth-v;for(let e=0;e<p;++e){const t=a+e*g;if(t<0||t>=u.inWidth)continue;const s=r+e*T[2],o=i+t*u.inChannels;let c=s;for(let e=0;e<u.inChannels;++e){const t=k[o+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*S[c+e];c+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const fh={kernelName:s.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:i,pad:c,filterShape:l}=a;vu([r,o],"conv3dBackpropFilterV2");const u=s.util.computeStrides(r.shape),d=s.util.computeStrides(o.shape),h=s.backend_util.computeConv3DInfo(r.shape,l,i,1,c),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,g=h.filterDepth,y=h.filterHeight,b=h.filterWidth,v=new s.TensorBuffer(h.filterShape,"float32"),x=v.values,[w,k,S,I]=v.strides,N=n.data.get(o.dataId).values,[T,C,E,_]=d,A=n.data.get(r.dataId).values,[R,F,D,O]=u,M=h.padInfo.front,L=h.padInfo.left,z=h.padInfo.top;for(let s=0;s<g;++s){const e=Math.max(0,Math.ceil((M-s)/p)),t=Math.min(h.outDepth,(h.inDepth+M-s)/p),n=s*w;for(let a=0;a<y;++a){const r=Math.max(0,Math.ceil((z-a)/f)),o=Math.min(h.outHeight,(h.inHeight+z-a)/f),i=a*k+n;for(let n=0;n<b;++n){const c=Math.max(0,Math.ceil((L-n)/m)),l=Math.min(h.outWidth,(h.inWidth+L-n)/m),u=n*S+i;for(let i=0;i<h.inChannels;++i){const d=i*I+u;for(let u=0;u<h.outChannels;++u){let g=0;for(let d=0;d<h.batchSize;++d){const h=d*R,y=d*T;for(let d=e;d<t;++d){const e=(s+d*p-M)*F+h,t=d*C+y;for(let s=r;s<o;++s){const r=(a+s*f-z)*D+e,o=s*E+t;for(let e=c;e<l;++e){const t=e*_+o;g+=A[(n+e*m-L)*O+r+i]*N[t+u]}}}}x[d+u]=g}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const mh={kernelName:s.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{pad:i,strides:c,inputShape:l}=a;vu([r],"conv3dBackpropInputV2");const u=s.util.computeStrides(r.shape),d=s.util.computeStrides(o.shape),h=s.backend_util.computeConv3DInfo(l,o.shape,c,1,i),p=new s.TensorBuffer(h.inShape,"float32"),f=p.values,[m,g,y,b]=p.strides,v=n.data.get(r.dataId).values,[x,w,k,S]=u,I=n.data.get(o.dataId).values,[N,T,C,E]=d,{batchSize:_,filterDepth:A,filterHeight:R,filterWidth:F,inChannels:D,inDepth:O,inHeight:M,inWidth:L,outChannels:z,outDepth:B,outHeight:P,outWidth:V,strideDepth:W,strideHeight:U,strideWidth:G}=h,j=A-1-h.padInfo.front,H=R-1-h.padInfo.top,q=F-1-h.padInfo.left;for(let s=0;s<_;++s)for(let e=0;e<D;++e)for(let t=0;t<O;++t){const n=t-j,a=Math.max(0,Math.ceil(n/W)),r=Math.min(B,(A+n)/W);for(let o=0;o<M;++o){const i=o-H,c=Math.max(0,Math.ceil(i/U)),l=Math.min(P,(R+i)/U);for(let u=0;u<L;++u){const d=u-q,h=Math.max(0,Math.ceil(d/G)),p=Math.min(V,(F+d)/G);let _=0;for(let t=a;t<r;++t){const a=t*W-n;for(let n=c;n<l;++n){const r=n*U-i;for(let o=h;o<p;++o){const i=x*s+w*t+k*n+S*o,c=N*(A-1-a)+T*(R-1-r)+C*(F-1-(o*G-d))+E*e;for(let e=0;e<z;++e){_+=v[i+e]*I[c+e]}}}}f[m*s+g*t+y*o+b*u+e]=_}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},gh=Su(s.Cos,(e=>Math.cos(e))),yh={kernelName:s.Cos,backendName:"cpu",kernelFunc:gh},bh=Su(s.Cosh,(e=>Math.cosh(e))),vh={kernelName:s.Cosh,backendName:"cpu",kernelFunc:bh};const xh={kernelName:s.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:o,boxInd:i}=t,{cropSize:c,method:l,extrapolationValue:u}=a,[d,h,p,f]=r.shape,m=o.shape[0],[g,y]=c,b=(0,s.buffer)([m,g,y,f],"float32"),v=n.data.get(o.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(r.dataId).values,k=s.util.computeStrides(r.shape),S=s.util.computeStrides(b.shape);for(let s=0;s<m;s++){const e=4*s,t=v[e],n=v[e+1],a=v[e+2],r=v[e+3],o=x[s];if(o>=d)continue;const i=g>1?(a-t)*(h-1)/(g-1):0,c=y>1?(r-n)*(p-1)/(y-1):0;for(let d=0;d<g;d++){const e=g>1?t*(h-1)+d*i:.5*(t+a)*(h-1);if(e<0||e>h-1)for(let t=0;t<y;t++)for(let e=0;e<f;e++){const n=e+t*S[2]+d*S[1]+s*S[0];b.values[n]=u}else if("bilinear"===l){const t=Math.floor(e),a=Math.ceil(e),i=e-t;for(let e=0;e<y;e++){const l=y>1?n*(p-1)+e*c:.5*(n+r)*(p-1);if(l<0||l>p-1){for(let t=0;t<f;t++){const n=t+e*S[2]+d*S[1]+s*S[0];b.values[n]=u}continue}const h=Math.floor(l),m=Math.ceil(l),g=l-h;for(let n=0;n<f;n++){let r=n+h*k[2]+t*k[1]+o*k[0];const c=w[r];r=n+m*k[2]+t*k[1]+o*k[0];const l=w[r];r=n+h*k[2]+a*k[1]+o*k[0];const u=w[r];r=n+m*k[2]+a*k[1]+o*k[0];const p=c+(l-c)*g,f=u+(w[r]-u)*g;r=n+e*S[2]+d*S[1]+s*S[0],b.values[r]=p+(f-p)*i}}}else for(let t=0;t<y;++t){const a=y>1?n*(p-1)+t*c:.5*(n+r)*(p-1);if(a<0||a>p-1){for(let e=0;e<f;e++){const n=e+t*S[2]+d*S[1]+s*S[0];b.values[n]=u}continue}const i=Math.round(a),l=Math.round(e);for(let e=0;e<f;e++){const n=e+i*k[2]+l*k[1]+o*k[0],a=e+t*S[2]+d*S[1]+s*S[0];b.values[a]=w[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const wh={kernelName:s.Cumprod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:i,reverse:c}=a;vu(r,"cumprod");const l=s.backend_util.getAxesPermutation([o],r.shape.length);let u=r;null!=l&&(u=gd({inputs:{x:r},backend:n,attrs:{perm:l}}));const d=s.backend_util.getInnerMostAxes(1,r.shape.length)[0];if(d!==u.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(u.shape.length-1," but got axis=").concat(d));const h=(0,s.upcastType)(u.dtype,"int32"),p=s.util.makeOnesTypedArray(s.util.sizeFromShape(u.shape),h),f=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],g=c?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let s=0;s<f.length;s+=m)for(let e=0;e<m;e++){const t=g(s,e);if(0===e)p[t]=i?1:f[t];else{const n=g(s,e-1);p[t]=i?f[n]*p[n]:f[t]*p[n]}}const y=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=gd({inputs:{x:y},backend:n,attrs:{perm:s.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),e}return y}};const kh={kernelName:s.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:i,reverse:c}=a;vu(r,"cumsum");const l=s.backend_util.getAxesPermutation([o],r.shape.length);let u=r;null!=l&&(u=gd({inputs:{x:r},backend:n,attrs:{perm:l}}));const d=s.backend_util.getInnerMostAxes(1,r.shape.length)[0];if(d!==u.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(u.shape.length-1," but got axis=").concat(d));const h=(0,s.upcastType)(u.dtype,"int32"),p=s.util.makeZerosTypedArray(s.util.sizeFromShape(u.shape),h),f=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],g=c?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let s=0;s<f.length;s+=m)for(let e=0;e<m;e++){const t=g(s,e);if(0===e)p[t]=i?0:f[t];else{const n=g(s,e-1);p[t]=i?f[n]+p[n]:f[t]+p[n]}}const y=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=gd({inputs:{x:y},backend:n,attrs:{perm:s.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(u),e}return y}};const Sh={kernelName:s.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=Hd(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,e)}if(2===r.shape.length){const e=qd(n.bufferSync(r),n.bufferSync(s),o,i);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const Ih={kernelName:s.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:o,dataFormat:i}=a;s.util.assert("NHWC"===i,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(i)));const c=r.shape[0],l=r.shape[1],u=r.shape[2],d=r.shape[3],h=l*o,p=u*o,f=d/(o*o),m=n.data.get(r.dataId).values,g=new Float32Array(c*h*p*f);let y=0;for(let s=0;s<c;++s)for(let e=0;e<h;++e){const t=Math.floor(e/o),n=e%o;for(let e=0;e<p;++e){const a=Math.floor(e/o),r=(n*o+e%o)*f;for(let e=0;e<f;++e){const n=e+r+d*(a+u*(t+l*s));g[y++]=m[n]}}}return n.makeTensorInfo([c,h,p,f],r.dtype,g)}};function Nh(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:i,pad:c,dilations:l,dimRoundingMode:u}=a;vu([r,o],"depthwiseConv2DNative");const d=s.util.computeStrides(r.shape),h=s.util.computeStrides(o.shape);let p=l;null==p&&(p=[1,1]),s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,p),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(p,"'")));const f=s.backend_util.computeConv2DInfo(r.shape,o.shape,i,p,c,u,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:v}=f,x=v.left,w=v.top,k=f.outChannels/f.inChannels,S=new s.TensorBuffer(f.outShape,r.dtype),I=n.data.get(r.dataId).values,N=n.data.get(o.dataId).values,T=S.values;for(let s=0;s<f.batchSize;++s){const e=s*d[0],t=s*S.strides[0];for(let n=0;n<f.outHeight;++n){const a=t+n*S.strides[1],r=n*f.strideHeight-w;for(let t=0;t<m;++t){const n=r+t*y;if(n<0||n>=f.inHeight)continue;const s=t*h[0],o=e+n*d[1];for(let e=0;e<f.outWidth;++e){const t=a+e*S.strides[2],n=e*f.strideWidth-x;for(let e=0;e<g;++e){const a=n+e*b;if(a<0||a>=f.inWidth)continue;const r=s+e*h[1],i=o+a*f.inChannels;let c=t,l=r;for(let e=0;e<f.inChannels;++e){const t=I[i+e];for(let e=0;e<k;++e)T[c+e]+=t*N[l+e];c+=k,l+=k}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const Th={kernelName:s.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:Nh};const Ch={kernelName:s.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:i,dilations:c,pad:l,dimRoundingMode:u,filterShape:d}=a;vu([r,o],"depthwiseConv2dNativeBackpropFilter");const h=s.backend_util.computeConv2DInfo(r.shape,d,i,c,l,u,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y=new s.TensorBuffer(h.filterShape,"float32"),b=h.padInfo.left,v=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(r.dataId).values,k=new s.TensorBuffer(r.shape,r.dtype,w),S=n.data.get(o.dataId).values,I=new s.TensorBuffer(o.shape,o.dtype,S);for(let s=0;s<m;++s){const e=Math.max(0,Math.ceil((v-s)/p)),t=Math.min(h.outHeight,(h.inHeight+v-s)/p);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((b-n)/f)),r=Math.min(h.outWidth,(h.inWidth+b-n)/f);for(let o=0;o<h.outChannels;++o){const i=Math.trunc(o/x),c=o%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=e;c<t;++c){const e=s+c*p-v;for(let t=a;t<r;++t){const a=n+t*f-b;l+=k.get(u,e,a,i)*I.get(u,c,t,o)}}y.set(l,s,n,i,c)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Eh={kernelName:s.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{strides:i,dilations:c,pad:l,dimRoundingMode:u,inputShape:d}=a;vu([r,o],"depthwiseConv2DNativeBackpropInput");const h=s.util.computeStrides(r.shape),p=s.util.computeStrides(o.shape),f=s.backend_util.computeConv2DInfo(d,o.shape,i,c,l,u,!0),m=new s.TensorBuffer(f.inShape,"float32"),g=m.values,[y,b,v]=m.strides,x=n.data.get(r.dataId).values,[w,k,S]=h,I=n.data.get(o.dataId).values,[N,T,C]=p,{batchSize:E,filterHeight:_,filterWidth:A,inChannels:R,inHeight:F,inWidth:D,outChannels:O,outHeight:M,outWidth:L,strideHeight:z,strideWidth:B}=f,P=_-1-f.padInfo.top,V=A-1-f.padInfo.left,W=O/R;for(let s=0;s<E;++s)for(let e=0;e<R;++e)for(let t=0;t<F;++t){const n=t-P,a=Math.max(0,Math.ceil(n/z)),r=Math.min(M,(_+n)/z);for(let o=0;o<D;++o){const i=o-V,c=Math.max(0,Math.ceil(i/B)),l=Math.min(L,(A+i)/B);let u=0;for(let t=a;t<r;++t){const a=t*z-n;for(let n=c;n<l;++n){const r=w*s+k*t+S*n,o=N*(_-1-a)+T*(A-1-(n*B-i))+C*e;for(let t=0;t<W;++t){u+=x[r+(e*W+t)]*I[o+t]}}}g[y*s+b*t+v*o+e]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const _h={kernelName:s.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=s.util.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,i=(0,s.buffer)([r,r],a.dtype),c=i.values;for(let s=0;s<o.length;s++)c[s*r+s]=o[s];const l=[...a.shape,...a.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},Ah={kernelName:s.Dilation2D,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:o}=t,{strides:i,pad:c,dilations:l}=a,u=n,d=u.data.get(r.dataId).values,h=r.shape.length,p=u.data.get(o.dataId).values,f=o.shape.length,{batchSize:m,inHeight:g,inWidth:y,inChannels:b,outHeight:v,outWidth:x,padInfo:w,strideHeight:k,strideWidth:S,filterHeight:I,filterWidth:N,dilationHeight:T,dilationWidth:C,outShape:E}=s.backend_util.computeDilation2DInfo(r.shape,o.shape,i,c,"NHWC",l),_=s.util.sizeFromShape(E),A=E.length,R=s.util.getArrayFromDType(r.dtype,_);for(let F=0;F<m;++F)for(let e=0;e<v;++e){const t=e*k-w.top;for(let n=0;n<x;++n){const a=n*S-w.left;for(let i=0;i<b;++i){let c=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const n=t+e*T;if(n>=0&&n<g)for(let t=0;t<N;++t){const l=a+t*C;if(l>=0&&l<y){const a=s.util.locToIndex([F,n,l,i],h,s.util.computeStrides(r.shape)),u=s.util.locToIndex([e,t,i],f,s.util.computeStrides(o.shape)),m=d[a]+p[u];m>c&&(c=m)}}}R[s.util.locToIndex([F,e,n,i],A,s.util.computeStrides(E))]=c}}}return{dataId:u.write(s.util.toTypedArray(R,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},Rh={kernelName:s.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:o,dy:i}=t,{strides:c,pad:l,dilations:u}=a,d=n,h=s.util.toNestedArray(r.shape,d.data.get(r.dataId).values),p=s.util.toNestedArray(o.shape,d.data.get(o.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:I,dilationHeight:N,dilationWidth:T,outShape:C}=s.backend_util.computeDilation2DInfo(r.shape,o.shape,c,l,"NHWC",u);s.util.assert(i.rank===C.length,(()=>"Error in ".concat(s.Dilation2DBackpropFilter,", dy ")+"must have the same rank as output ".concat(C.length,", but got ")+"".concat(i.rank)));const E=s.util.toNestedArray(C,d.data.get(i.dataId).values),_=s.util.makeZerosNestedTypedArray(o.shape,o.dtype);for(let s=0;s<f;++s)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const a=n*k-x.left;for(let r=0;r<y;++r){let o=Number.MIN_SAFE_INTEGER,i=0,c=0;for(let e=0;e<S;++e){const n=t+e*N;if(n>=0&&n<m)for(let t=0;t<I;++t){const l=a+t*T;if(l>=0&&l<g){const a=h[s][n][l][r]+p[e][t][r];a>o&&(o=a,i=e,c=t)}}}_[i][c][r]+=E[s][e][n][r]}}}return{dataId:d.write(s.util.toTypedArray(_,r.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}},Fh={kernelName:s.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:o,dy:i}=t,{strides:c,pad:l,dilations:u}=a,d=n,h=s.util.toNestedArray(r.shape,d.data.get(r.dataId).values),p=s.util.toNestedArray(o.shape,d.data.get(o.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:I,dilationHeight:N,dilationWidth:T,outShape:C}=s.backend_util.computeDilation2DInfo(r.shape,o.shape,c,l,"NHWC",u);s.util.assert(i.rank===C.length,(()=>"Error in ".concat(s.Dilation2DBackpropInput,", dy ")+"must have the same rank as output ".concat(C.length,", but got ")+"".concat(i.rank)));const E=s.util.toNestedArray(C,d.data.get(i.dataId).values),_=s.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let s=0;s<f;++s)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const a=n*k-x.left;for(let r=0;r<y;++r){let o=Number.MIN_SAFE_INTEGER,i=t<0?0:t,c=a<0?0:a;for(let e=0;e<S;++e){const n=t+e*N;if(n>=0&&n<m)for(let t=0;t<I;++t){const l=a+t*T;if(l>=0&&l<g){const a=h[s][n][l][r]+p[e][t][r];a>o&&(o=a,i=n,c=l)}}}_[s][i][c][r]+=E[s][e][n][r]}}}return{dataId:d.write(s.util.toTypedArray(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const Dh={kernelName:s.Draw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:s,options:o}=a,{contextOptions:i,imageOptions:c}=o||{},l=(null===c||void 0===c?void 0:c.alpha)||1,u=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const d=s.getContext(u,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==d)throw new Error("Could not get the context with ".concat(u," type."));const[h,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(p*h*4);for(let v=0;v<h*p;++v){const e=[0,0,0,255*l];for(let n=0;n<f;n++){const t=m[v*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===r.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*v;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}s.width=p,s.height=h;const b=new ImageData(y,p,h);return d.putImageData(b,0,0),r}},Oh=Ru(((e,t)=>e*t)),Mh=Ju(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),Lh=Zu(s.Multiply,Oh,Mh),zh={kernelName:s.Multiply,backendName:"cpu",kernelFunc:Lh};function Bh(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:i}=a;let c;vu(r,"sum"),c="bool"===r.dtype?Yu({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Cu({inputs:{x:r},backend:n});const l=c.shape.length,u=s.util.parseAxisParam(o,c.shape),d=s.backend_util.getAxesPermutation(u,l);let h=u,p=c;null!=d&&(p=gd({inputs:{x:c},backend:n,attrs:{perm:d}}),h=s.backend_util.getInnerMostAxes(h.length,l)),s.backend_util.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[f,m]=s.backend_util.computeOutAndReduceShapes(p.shape,h);let g=Hu(n,f,s.backend_util.upcastType(p.dtype,"int32"));const y=s.util.sizeFromShape(m),b=n.data.get(g.dataId).values,v=n.data.get(p.dataId).values;for(let s=0;s<b.length;++s){const e=s*y;let t=0;for(let n=0;n<y;++n)t+=v[e+n];b[s]=t}if(i){const e=g;g=ad({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(g.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(c),null!=d&&n.disposeIntermediateTensorInfo(p),g}const Ph={kernelName:s.Sum,backendName:"cpu",kernelFunc:Bh};const Vh={kernelName:s.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,o=t,{allDims:i,summedDims:c,idDims:l}=s.backend_util.decodeEinsumEquation(r,o.length);s.backend_util.checkEinsumDimSizes(i.length,l,o);const{path:u,steps:d}=s.backend_util.getEinsumComputePath(c,l),h=d.length;let p=null,f=i.length;const m=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:a}=s.backend_util.getEinsumPermutation(f,l[e]);let r;s.backend_util.isIdentityPermutation(t)?r=o[e]:(r=gd({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),m.push(r));const i=r.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);s.util.arraysEqual(r.shape,i)||(r=ad({inputs:{x:r},backend:n,attrs:{shape:i}}),m.push(r)),null===p?p=r:(p=Lh({inputs:{a:r,b:p},backend:n}),m.push(p))}g<h-1&&(u[g]>=0&&(p=Bh({inputs:{x:p},backend:n,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const s of m)s!==p&&n.disposeIntermediateTensorInfo(s);return p}};const Wh={kernelName:s.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;vu([a,r],"eluGrad");const o=new Float32Array(s.util.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values;for(let s=0;s<i.length;++s){const e=i[s];o[s]=e>=0?c[s]:c[s]*(e+1)}return n.makeTensorInfo(r.shape,"float32",o)}},Uh=Ru(((e,t)=>e===t?1:0)),Gh=Zu(s.Equal,Uh,null,"bool"),jh={kernelName:s.Equal,backendName:"cpu",kernelFunc:Gh},Hh=s.backend_util.ERF_P,qh=s.backend_util.ERF_A1,Xh=s.backend_util.ERF_A2,Kh=s.backend_util.ERF_A3,Yh=s.backend_util.ERF_A4,Qh=s.backend_util.ERF_A5,Zh=Su(s.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+Hh*n);return t*(1-((((Qh*a+Yh)*a+Kh)*a+Xh)*a+qh)*a*Math.exp(-n*n))})),Jh={kernelName:s.Erf,backendName:"cpu",kernelFunc:Zh},$h=ku((e=>Math.exp(e))),ep=Iu(s.Exp,$h,"float32"),tp={kernelName:s.Exp,backendName:"cpu",kernelFunc:ep};function np(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:o}=a,i=r.shape.length,c=r.shape.slice();let l=o;return o<0&&(s.util.assert(-(i+1)<=o,(()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]"))),l=i+o+1),c.splice(l,0,1),ad({inputs:{x:r},backend:n,attrs:{shape:c}})}const ap={kernelName:s.ExpandDims,backendName:"cpu",kernelFunc:np},rp=ku((e=>Math.expm1(e))),sp=Iu(s.Expm1,rp),op={kernelName:s.Expm1,backendName:"cpu",kernelFunc:sp},ip=Ru(((e,t)=>e/t)),cp=Zu(s.RealDiv,ip),lp={kernelName:s.RealDiv,backendName:"cpu",kernelFunc:cp},up=Ru(((e,t)=>e-t)),dp=Ju(((e,t,n,a)=>({real:e-n,imag:t-a}))),hp=Zu(s.Sub,up,dp),pp={kernelName:s.Sub,backendName:"cpu",kernelFunc:hp};function fp(e,t,n){const a=e.shape,r=a[0],o=a[1],i=n.data.get(e.dataId),c=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,o],d=s.util.sizeFromShape(u),h=s.util.getTypedArrayFromDType("float32",d),p=s.util.getTypedArrayFromDType("float32",d);for(let y=0;y<r;y++){const e=Ud({inputs:{x:c},backend:n,attrs:{begin:[y,0],size:[1,o]}}),a=Ud({inputs:{x:l},backend:n,attrs:{begin:[y,0],size:[1,o]}}),r=Gu({inputs:{real:e,imag:a},backend:n}),{real:i,imag:u}=mp(r,t,n),d=s.backend_util.mergeRealAndImagArrays(i,u);for(let t=0;t<o;t++){const e=s.backend_util.getComplexWithIndex(d,t);h[y*o+t]=e.real,p[y*o+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const f=n.makeTensorInfo(u,"float32",h),m=n.makeTensorInfo(u,"float32",p),g=Gu({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function mp(e,t,n){const a=s.util.sizeFromShape(e.shape),r=n.data.get(e.dataId),o=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((c=a)&c-1)){const r=gp(o,i,a,t,n),c=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(c,"float32",r.real),t=n.makeTensorInfo(c,"float32",r.imag),o=n.makeTensorInfo([],"float32",s.util.createScalarValue(a,"float32")),i=Cu({inputs:{x:o},backend:n}),l=lp.kernelFunc({inputs:{a:e,b:o},backend:n}),u=lp.kernelFunc({inputs:{a:t,b:i},backend:n}),d=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:d,imag:h}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let o=0,i=0;for(let a=0;a<t;a++){const c=s.backend_util.exponent(r*a,t,n),l=s.backend_util.getComplexWithIndex(e,a);o+=l.real*c.real-l.imag*c.imag,i+=l.real*c.imag+l.imag*c.real}n&&(o/=t,i/=t),s.backend_util.assignToTypedArray(a,o,i,r)}return a}(s.backend_util.mergeRealAndImagArrays(o,i),a,t);return s.backend_util.splitRealAndImagArrays(e)}var c}function gp(e,t,n,a,r){if(1===n)return{real:e,imag:t};const o=s.backend_util.mergeRealAndImagArrays(e,t),i=n/2,c=s.backend_util.complexWithEvenIndex(o),l=c.real,u=c.imag,d=[l.length],h=r.makeTensorInfo(d,"float32",l),p=r.makeTensorInfo(d,"float32",u),f=Gu({inputs:{real:h,imag:p},backend:r}),m=s.backend_util.complexWithOddIndex(o),g=m.real,y=m.imag,b=[g.length],v=r.makeTensorInfo(b,"float32",g),x=r.makeTensorInfo(b,"float32",y),w=Gu({inputs:{real:v,imag:x},backend:r}),k=gp(l,u,i,a,r),S=k.real,I=k.imag,N=[S.length],T=r.makeTensorInfo(N,"float32",S),C=r.makeTensorInfo(N,"float32",I),E=Gu({inputs:{real:T,imag:C},backend:r}),_=gp(g,y,i,a,r),A=_.real,R=_.imag,F=[A.length],D=r.makeTensorInfo(F,"float32",A),O=r.makeTensorInfo(F,"float32",R),M=Gu({inputs:{real:D,imag:O},backend:r}),L=s.backend_util.exponents(n,a),z=[L.real.length],B=r.makeTensorInfo(z,"float32",L.real),P=r.makeTensorInfo(z,"float32",L.imag),V=Gu({inputs:{real:B,imag:P},backend:r}),W=Lh({inputs:{a:V,b:M},backend:r}),U=td({inputs:{a:E,b:W},backend:r}),G=hp({inputs:{a:E,b:W},backend:r}),j=qu({inputs:{input:U},backend:r}),H=qu({inputs:{input:G},backend:r}),q=sh({inputs:{input:U},backend:r}),X=sh({inputs:{input:G},backend:r}),K=ih({inputs:[j,H],backend:r,attrs:{axis:0}}),Y=ih({inputs:[q,X],backend:r,attrs:{axis:0}}),Q=r.data.get(K.dataId).values,Z=r.data.get(Y.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(Y),{real:Q,imag:Z}}const yp={kernelName:s.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=s.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=ad({inputs:{x:a},backend:n,attrs:{shape:[r/o,o]}}),c=fp(i,!1,n),l=ad({inputs:{x:c},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}};function bp(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:o}=n,i=o||s.util.inferDtype(r),c=s.util.getArrayFromDType(i,s.util.sizeFromShape(a));return function(e,t,n){e.fill(t)}(c,r),t.makeTensorInfo(a,i,c)}const vp={kernelName:s.Fill,backendName:"cpu",kernelFunc:bp};const xp={kernelName:s.FlipLeftRight,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,o=a,i=s.util.getTypedArrayFromDType(r.dtype,s.util.sizeFromShape(r.shape)),[c,l,u,d]=r.shape,h=o.data.get(r.dataId).values;for(let s=0;s<c;s++){const e=s*u*l*d;for(let t=0;t<l;t++){const n=t*(u*d);for(let t=0;t<u;t++){const a=t*d;for(let r=0;r<d;r++){const s=Math.round(u-t-1),o=e+n+a+r;let c=h[o];if(s>=0&&s<u){c=h[e+n+s*d+r]}i[o]=c}}}}return{dataId:o.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},wp=ku((e=>Math.floor(e))),kp=Iu(s.Floor,wp),Sp={kernelName:s.Floor,backendName:"cpu",kernelFunc:kp},Ip=Ru(((e,t)=>Math.floor(e/t))),Np=Zu(s.FloorDiv,Ip,null,"int32"),Tp={kernelName:s.FloorDiv,backendName:"cpu",kernelFunc:Np};const Cp={kernelName:s.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a;let m=lh({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}});if(o){const e=m;if("NCHW"===u&&1===o.shape.length&&1!==o.shape[0]){const e=ad({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=td({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=td({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===u&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=ad({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Uu(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=Uu(n,m,p,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const Ep={kernelName:s.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a;let m=Nh({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}});if(o){const e=m;m=td({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Uu(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};function _p(e,t,n,a,r,o,i,c,l){const u=(0,s.buffer)([a,o],n);for(let s=0;s<a;s++){const n=[];let a=0;for(let t=0;t<r;t++){const o=e[s*r+t];a+=o*i[t],n.push(o)}if(a<0||a>=l/o)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(c));for(let e=0;e<o;e++)u.values[s*o+e]=t.get(...t.indexToLoc(a*o+e))}return u}const Ap={kernelName:s.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,o=s.util.sizeFromShape(a.shape),i=r.shape,c=i[i.length-1],[l,u,d,h]=s.backend_util.prepareAndValidate(a,r);if(0===u)return n.makeTensorInfo(l,a.dtype,[]);const p=_p(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,u,c,d,h,a.shape,o);return n.makeTensorInfo(l,a.dtype,p.values)}};function Rp(e,t,n){const a=(0,s.buffer)(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=t.locToIndex([s,o]);n[2]=t.values[i];const c=e.locToIndex(n);0<=c&&c<e.values.length&&(a.values[r]=e.values[c])}return a}const Fp={kernelName:s.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:o}=t,{axis:i,batchDims:c}=a;vu([r,o],"gatherV2");const l=s.util.parseAxisParam(i,r.shape)[0],u=n.data.get(o.dataId).values,d=r.shape[l];for(let x=0;x<u.length;++x){const e=u[x];s.util.assert(e<=d-1&&e>=0,(()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(d-1,"]")))}let h=c;null==c&&(h=0);const p=s.util.sizeFromShape(o.shape),f=s.backend_util.segment_util.collectGatherOpShapeInfo(r,o,l,h),m=ad({inputs:{x:r},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=ad({inputs:{x:o},backend:n,attrs:{shape:[f.batchSize,p/f.batchSize]}}),y=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],b=n.bufferSync(g),v=Rp(n.bufferSync(m),b,y);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(f.outputShape,v.dtype,v.values)}},Dp=Ru(((e,t)=>e>t?1:0)),Op=Zu(s.Greater,Dp,null,"bool"),Mp={kernelName:s.Greater,backendName:"cpu",kernelFunc:Op},Lp=Ru(((e,t)=>e>=t?1:0)),zp=Zu(s.GreaterEqual,Lp,null,"bool"),Bp={kernelName:s.GreaterEqual,backendName:"cpu",kernelFunc:zp};const Pp={kernelName:s.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=s.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=ad({inputs:{x:a},backend:n,attrs:{shape:[r/o,o]}}),c=fp(i,!0,n),l=ad({inputs:{x:c},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}},Vp=Su(s.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),Wp={kernelName:s.IsFinite,backendName:"cpu",kernelFunc:Vp},Up=Su(s.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),Gp={kernelName:s.IsInf,backendName:"cpu",kernelFunc:Up},jp=Su(s.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),Hp={kernelName:s.IsNan,backendName:"cpu",kernelFunc:jp},qp=Ru(((e,t)=>e<t?1:0)),Xp=Zu(s.Less,qp,null,"bool"),Kp={kernelName:s.Less,backendName:"cpu",kernelFunc:Xp},Yp=Ru(((e,t)=>e<=t?1:0)),Qp=Zu(s.LessEqual,Yp,null,"bool"),Zp={kernelName:s.LessEqual,backendName:"cpu",kernelFunc:Qp};function Jp(e,t,n){const a=(t-e)/(n-1),r=s.util.makeZerosTypedArray(n,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}const $p={kernelName:s.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=Jp(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},ef=ku((e=>Math.log(e))),tf=Iu(s.Log,ef),nf={kernelName:s.Log,backendName:"cpu",kernelFunc:tf},af=Su(s.Log1p,(e=>Math.log1p(e))),rf={kernelName:s.Log1p,backendName:"cpu",kernelFunc:af},sf=Ru(((e,t)=>e&&t)),of=Zu(s.LogicalAnd,sf,null,"bool"),cf={kernelName:s.LogicalAnd,backendName:"cpu",kernelFunc:of},lf=Su(s.LogicalNot,(e=>e?0:1),"bool"),uf={kernelName:s.LogicalNot,backendName:"cpu",kernelFunc:lf},df=Ru(((e,t)=>e||t)),hf=Zu(s.LogicalOr,df,null,"bool"),pf={kernelName:s.LogicalOr,backendName:"cpu",kernelFunc:hf};const ff={kernelName:s.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:o,bias:i,alpha:c,beta:l}=a;vu(r,"LRN");const u=r.shape[3],d=u-1,h=n.data.get(r.dataId).values,p=s.util.sizeFromShape(r.shape),f=new Float32Array(p);function m(e){const t=e%u;let n=e-t+Math.max(0,t-o);const a=e-t+Math.min(t+o,d);let r=0;for(;n<=a;n++){const e=h[n];r+=e*e}return r}for(let s=0;s<p;s++){const e=m(s),t=h[s]*Math.pow(i+c*e,-l);f[s]=t}return n.makeTensorInfo(r.shape,r.dtype,f)}};const mf={kernelName:s.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:o,dy:i}=t,{depthRadius:c,bias:l,alpha:u,beta:d}=a;vu(i,"LRNGrad");const h=s.util.sizeFromShape(i.shape),p=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(r.dataId).values,g=n.data.get(o.dataId).values,y=new Float32Array(h),b=h;for(let s=0;s<b;s++){const e=s%p,t=s-e+Math.max(0,e-c),n=s-e+Math.min(p,e+c+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(m[r],2);a=u*a+l;for(let r=t;r<n;r++){let e=-2*u*d*m[r]*g[s]/a;s===r&&(e+=Math.pow(a,-d)),e*=f[s],y[r]+=e}}return n.makeTensorInfo(i.shape,r.dtype,y)}};function gf(e,t,n,a){const r=s.util.getTypedArrayFromDType(a,s.util.sizeFromShape(n));for(let s=0;s<r.length;++s){const n=s*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}r[s]=a}return r}function yf(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:o,keepDims:i}=a,c=n;let l=r.shape;const u=l.length,d=s.util.parseAxisParam(o,l);let h=d;const p=s.backend_util.getAxesPermutation(h,u);let f=c.data.get(r.dataId).values;if(null!=p){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];f=md(f,l,r.dtype,p,e),h=s.backend_util.getInnerMostAxes(h.length,u),l=e}vu(r,"max"),s.backend_util.assertAxesAreInnerMostDims("max",h,u);const[m,g]=s.backend_util.computeOutAndReduceShapes(l,h),y=gf(f,s.util.sizeFromShape(g),m,r.dtype),b=c.write(y,m,r.dtype);let v=m;if(i){v=s.backend_util.expandShapeToKeepDim(m,d)}return{dataId:b,shape:v,dtype:r.dtype}}const bf={kernelName:s.Max,backendName:"cpu",kernelFunc:yf},vf=Ru(((e,t)=>Math.max(e,t))),xf=Zu(s.Maximum,vf),wf={kernelName:s.Maximum,backendName:"cpu",kernelFunc:xf};const kf={kernelName:s.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;vu(r,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=s.backend_util.computePool2DInfo(r.shape,o,i,1,c,l);let d;if(1===u.filterWidth&&1===u.filterHeight&&s.util.arraysEqual(u.inShape,u.outShape))d=Cu({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=s.util.computeStrides(r.shape),a=Dd(e,r.shape,r.dtype,t,u,"max");d=n.makeTensorInfo(u.outShape,r.dtype,a.values)}return d}};const Sf={kernelName:s.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l,dataFormat:u}=a;vu(r,"maxPool3d");const d=s.backend_util.computePool3DInfo(r.shape,o,i,1,c,l,u),h=Md(n.data.get(r.dataId).values,r.shape,r.dtype,s.util.computeStrides(r.shape),d,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const If={kernelName:s.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a;vu([r,o],"maxPool3DGrad");const d=s.backend_util.computePool3DInfo(o.shape,i,c,1,l,u),h=function(e,t){const n=(0,s.buffer)(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let s=0;s<t.batchSize;++s)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-p;let v=b;for(;v<0;)v+=i;const x=Math.min(t.inDepth,u+b);for(let a=0;a<t.outHeight;++a){const u=a*r-f;let p=u;for(;p<0;)p+=c;const w=Math.min(t.inHeight,d+u);for(let r=0;r<t.outWidth;++r){const f=r*o-m;let k=f;for(;k<0;)k+=l;const S=Math.min(t.inWidth,h+f);let I=Number.NEGATIVE_INFINITY,N=-1;for(let t=v;t<x;t+=i){const n=t-b;for(let a=p;a<w;a+=c){const r=a-u;for(let o=k;o<S;o+=l){const i=o-f,c=e.get(s,t,a,o,g);c>=I&&(I=c,N=n*d*h+r*d+i)}}}n.set(N,s,y,a,r,g)}}}return n}(n.bufferSync(o),d),p=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.dilationDepth,y=d.dilationHeight,b=d.dilationWidth,v=d.effectiveFilterDepth,x=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=v-1-d.padInfo.front,S=w-1-d.padInfo.left,I=x-1-d.padInfo.top,N=(0,s.buffer)(o.shape,"float32"),T=n.bufferSync(r);for(let s=0;s<d.batchSize;++s)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){const r=t-k,o=n-I,i=a-S;let c=0;for(let t=0;t<v;t+=g){const n=(r+t)/p;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let a=0;a<x;a+=y){const r=(o+a)/f;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let o=0;o<w;o+=b){const l=(i+o)/m;if(l<0||l>=d.outWidth||Math.floor(l)!==l)continue;const u=v*x*w-1-h.get(s,n,r,l,e)===t*x*w+a*w+o?1:0;if(0===u)continue;c+=T.get(s,n,r,l,e)*u}}}N.set(c,s,t,n,a,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const Nf={kernelName:s.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o,output:i}=t,c=o;vu([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=a,p=s.backend_util.computePool2DInfo(c.shape,l,u,1,d,h),f=n.data.get(c.dataId).values,m=(0,s.buffer)(p.outShape,c.dtype,Od(f,c.shape,c.dtype,p).values),g=p.strideHeight,y=p.strideWidth,b=p.dilationHeight,v=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,k=w-1-p.padInfo.left,S=x-1-p.padInfo.top,I=(0,s.buffer)(c.shape,"float32"),N=n.data.get(r.dataId).values,T=(0,s.buffer)(r.shape,"float32",N);for(let s=0;s<p.batchSize;++s)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const a=t-S,r=n-k;let o=0;for(let t=0;t<x;t+=b){const n=(a+t)/g;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let a=0;a<w;a+=v){const i=(r+a)/y;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const c=x*w-1-m.get(s,n,i,e)===t*w+a?1:0;if(0===c)continue;o+=T.get(s,n,i,e)*c}}I.set(o,s,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Tf={kernelName:s.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:o,strides:i,pad:c,includeBatchInIndex:l}=n,u=a;vu(r,"MaxPoolWithArgmax");const d=u.data.get(r.dataId).values,h=s.backend_util.computePool2DInfo(r.shape,o,i,[1,1],c),[p,f]=function(e,t,n,a,r){const o=Dd(e,0,n,s.util.computeStrides(t),r,"max"),i=Od(e,t,n,r,!0,a);return[o.values,i.values]}(d,r.shape,r.dtype,l,h),m=u.write(p,h.outShape,r.dtype),g=u.write(f,h.outShape,r.dtype);return[{dataId:m,shape:h.outShape,dtype:r.dtype},{dataId:g,shape:h.outShape,dtype:"int32"}]}};const Cf={kernelName:s.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:i}=a,c=s.util.parseAxisParam(o,r.shape),l=s.backend_util.computeOutAndReduceShapes(r.shape,c)[1],u=s.util.sizeFromShape(l),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(h);const p=Yu({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=cp({inputs:{a:p,b:h},backend:n});d.push(f);const m=Bh({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:i}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}};const Ef={kernelName:s.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:i}=a;vu(r,"min");const c=s.util.parseAxisParam(o,r.shape);let l=c;const u=s.backend_util.getAxesPermutation(l,r.shape.length);let d=r;null!=u&&(d=gd({inputs:{x:r},backend:n,attrs:{perm:u}}),l=s.backend_util.getInnerMostAxes(l.length,r.shape.length)),s.backend_util.assertAxesAreInnerMostDims("min",l,d.shape.length);const[h,p]=s.backend_util.computeOutAndReduceShapes(d.shape,l),f=s.util.sizeFromShape(p),m=s.util.makeZerosTypedArray(s.util.sizeFromShape(h),d.dtype),g=n.data.get(d.dataId).values;for(let s=0;s<m.length;++s){const e=s*f;let t=g[e];for(let n=0;n<f;++n){const a=g[e+n];(Number.isNaN(a)||a<t)&&(t=a)}m[s]=t}null!=u&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(h,d.dtype,m);if(i){const e=ad({inputs:{x:y},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(y),e}return y}},_f=Ru(((e,t)=>Math.min(e,t))),Af=Zu(s.Minimum,_f),Rf={kernelName:s.Minimum,backendName:"cpu",kernelFunc:Af};const Ff={kernelName:s.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:o,mode:i}=a;vu(r,"mirrorPad");const c=o.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=o.map((e=>e[0])),u=o.map(((e,t)=>e[0]+r.shape[t])),d="reflect"===i?0:1,h=n.data.get(r.dataId).values,p=r.shape.length,f=s.util.computeStrides(r.shape),m=s.util.sizeFromShape(c),g=c.length,y=s.util.computeStrides(c),b=s.util.getTypedArrayFromDType(r.dtype,m);for(let v=0;v<m;v++){let e=s.util.indexToLoc(v,g,y);for(let n=0;n<g;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-d:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+d);e=e.map(((e,t)=>e-l[t]));const t=s.util.locToIndex(e,p,f);b[v]=h[t]}return{dataId:n.write(b,c,r.dtype),shape:c,dtype:r.dtype}}},Df=Ru(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Of=Zu(s.Mod,Df),Mf={kernelName:s.Mod,backendName:"cpu",kernelFunc:Of};function Lf(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:o}=a,i=r.shape.length;let c=o;if(-1===c&&(c=i-1),c!==i-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(i," and dim was ").concat(c));const l=s.util.parseAxisParam([c],r.shape),u=yf({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=s.backend_util.expandShapeToKeepDim(u.shape,l),h=ad({inputs:{x:u},backend:n,attrs:{shape:d}}),p=hp({inputs:{a:r,b:h},backend:n}),f=ep({inputs:{x:p},backend:n}),m=Bh({inputs:{x:f},backend:n,attrs:{axis:l,keepDims:!1}}),g=ad({inputs:{x:m},backend:n,attrs:{shape:d}}),y=cp({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const zf={kernelName:s.Softmax,backendName:"cpu",kernelFunc:Lf};const Bf={kernelName:s.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:o,seed:i,normalized:c}=a;vu(r,"multinomial");const l=c?r:Lf({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],h=n.data.get(l.dataId).values,p=[u,o],f=s.util.makeZerosTypedArray(s.util.sizeFromShape(p),"int32");for(let s=0;s<u;++s){const e=s*d,t=new Float32Array(d-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=Ul.alea(i.toString()),a=s*o;for(let r=0;r<o;++r){const e=n();f[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){f[a+r]=n;break}}}return c||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",f)}};function Pf(e,t,n){const a=s.util.createScalarValue(-1,n);return Oh([],t,a,e,n)}const Vf={kernelName:s.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;vu(a,"neg");const r=n.data.get(a.dataId).values,[s,o]=Pf(r,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,s)}},Wf=s.kernel_impls.nonMaxSuppressionV3Impl;const Uf={kernelName:s.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a;vu(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,{selectedIndices:d}=Wf(l,u,o,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},Gf=s.kernel_impls.nonMaxSuppressionV4Impl;const jf={kernelName:s.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;vu(r,"NonMaxSuppressionPadded");const u=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=Gf(u,d,o,i,c,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Hf=s.kernel_impls.nonMaxSuppressionV5Impl;const qf={kernelName:s.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;vu(r,"NonMaxSuppressionWithScore");const u=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,h=o,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=Hf(u,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},Xf=Ru(((e,t)=>e!==t?1:0)),Kf=Zu(s.NotEqual,Xf,null,"bool"),Yf={kernelName:s.NotEqual,backendName:"cpu",kernelFunc:Kf};const Qf={kernelName:s.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:o,depth:i,onValue:c,offValue:l}=a;vu(r,"oneHot");const u=s.util.sizeFromShape(r.shape),d=new Float32Array(u*i);d.fill(l);const h=n.data.get(r.dataId).values;for(let s=0;s<u;++s)h[s]>=0&&h[s]<i&&(d[s*i+h[s]]=c);return n.makeTensorInfo([...r.shape,i],o,d)}};function Zf(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=qu({inputs:{input:a},backend:n}),t=Zf({inputs:{x:e},backend:n}),r=sh({inputs:{input:a},backend:n}),s=Zf({inputs:{x:r},backend:n}),o=Gu({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return bp({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const Jf={kernelName:s.ZerosLike,backendName:"cpu",kernelFunc:Zf};const $f={kernelName:s.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=qu({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=sh({inputs:{input:r},backend:a}),o=Zf({inputs:{x:s},backend:a}),i=Gu({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return bp({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function em(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return np({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const o=t[0].shape,i=t[0].dtype;t.forEach((e=>{s.util.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),s.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],l=ih({inputs:t.map((e=>{const t=np({inputs:{input:e},backend:n,attrs:{dim:r}});return c.push(t),t})),backend:n,attrs:{axis:r}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const tm={kernelName:s.Pack,backendName:"cpu",kernelFunc:em};const nm={kernelName:s.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:o,constantValue:i}=a;vu(r,"pad");const c=o.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=o.map((e=>e[0])),u=n.data.get(r.dataId).values,d=s.util.sizeFromShape(r.shape),h=r.shape.length,p=s.util.computeStrides(r.shape),f=s.util.sizeFromShape(c),m=c.length,g=s.util.computeStrides(c),y=s.util.getTypedArrayFromDType(r.dtype,f);0!==i&&y.fill(i);for(let b=0;b<d;b++){const e=s.util.indexToLoc(b,h,p).map(((e,t)=>e+l[t]));y[s.util.locToIndex(e,m,g)]=u[b]}return{dataId:n.write(y,c,r.dtype),shape:c,dtype:r.dtype}}},am=Ru(((e,t)=>Math.pow(e,t))),rm=Zu(s.Pow,am),sm={kernelName:s.Pow,backendName:"cpu",kernelFunc:rm};function om(e,t,n,a){const[r,o]=s.backend_util.computeOutAndReduceShapes(e,a),i=(0,s.upcastType)(t,"int32"),c=s.util.makeZerosTypedArray(s.util.sizeFromShape(r),i),l=s.util.sizeFromShape(o);for(let s=0;s<c.length;++s){const e=s*l;let t=1;for(let a=0;a<l;++a)t*=n[e+a];c[s]=t}return{outVals:c,outShape:r,outDtype:i}}const im={kernelName:s.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:i}=a;vu(r,"prod");const c=r.shape.length,l=s.util.parseAxisParam(o,r.shape),u=s.backend_util.getAxesPermutation(l,c);let d=l,h=r;const p=[];null!=u&&(h=gd({inputs:{x:r},backend:n,attrs:{perm:u}}),p.push(h),d=s.backend_util.getInnerMostAxes(d.length,c));const f=n.data.get(h.dataId).values,{outVals:m,outShape:g,outDtype:y}=om(h.shape,h.dtype,f,d);let b=g;return i&&(b=s.backend_util.expandShapeToKeepDim(g,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,y,m)}};function cm(e,t,n,a){const r=[];let s=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<t.length-1;++l){c*=t[l];const e=t[l+1];for(let t=1;t<c+1;++t)i[l].push(t*e)}for(let l=0;l<e.length;++l){let a=e[l],o=e[l]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-r[a];for(let n=a;n<o;++n)i[s].push(r[n+1]+t)}a=r[a],o=r[o]}o!==a&&(r.push([a,o]),s+=o-a)}return{outSplits:i,valueSlices:r,numValues:s}}function lm(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function um(e,t,n,a,r){const o=t.slice();o[0]=r;const i=s.util.getArrayFromDType(n,s.util.sizeFromShape(o)),c=e.length;return function(e,t,n,a,r,s){const o=lm(t,2)[1],i=lm(s,2)[1];let c=0;for(const l of n)for(let t=l[0];t<l[1];++t){for(let n=0;n<a;++n)r[c*i+n]=e[t*o+n];++c}}(e,t,a,0===c?0:c/t[0],i,o),[i,o]}function dm(e,t,n,a,r,o,i,c){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const r=s.util.indexToLoc(a,t.length,s.util.computeStrides(t)).join(",");throw new Error("indices[".concat(r,"] = ").concat(e," is not in [0, ").concat(n,")"))}}))}(o,i,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const l=a[0],{outSplits:u,valueSlices:d,numValues:h}=cm(o,i,e,l),p=function(e){const t=[];for(let n=0;n<e.length;++n){const a=e[n].length,r=s.util.getArrayFromDType("int32",a);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(u),f=um(n,a,r,d,h);return[p,f[0],f[1]]}const hm={kernelName:s.RaggedGather,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.data.get(e.dataId).values)),l=r.map((e=>e.shape)),u=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,[h,p,f]=dm(c,l,u,s.shape,s.dtype,d,o.shape),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},pm=2147483647;function fm(e,t,n,a,r,o,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const c=0===t.length,l=0===r.length,u=0===i.length,d=[];c||d.push(t[0]),l||d.push(r[0]),u||d.push(i[0]);for(let s=1;s<d.length;++s)if(d[s]!==d[s-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===d.length?1:d[0],p=s.util.getArrayFromDType("int32",h+1);p[0]=0;for(let s=0;s<h;++s){const t=c?e[0]:e[s],n=l?a[0]:a[s],r=u?o[0]:o[s];if(0===r)throw new Error("Requires delta != 0");let i;if(r>0&&n<t||r<0&&n>t)i=0;else if(i=Math.ceil(Math.abs((n-t)/r)),i>pm)throw new Error("Requires ((limit - start) / delta) <= ".concat(pm));p[s+1]=p[s]+i}const f=p[h],m=s.util.getArrayFromDType(n,f);let g=0;for(let s=0;s<h;++s){const t=p[s+1]-p[s];let n=c?e[0]:e[s];const a=u?o[0]:o[s];for(let e=0;e<t;++e)m[g++]=n,n+=a}return[p,m]}const mm={kernelName:s.RaggedRange,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=fm(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};var gm=s.backend_util.RowPartitionType;class ym{constructor(e,t,n,a,r,o,i,c,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=o,this.defaultValueShape=i,this.rowPartitionValues=c,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=s.backend_util.getRowPartitionTypesHelper(u),this.raggedRank=s.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===gm.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===gm.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case gm.VALUE_ROWIDS:return ym.getMaxWidthValueRowID(t);case gm.ROW_SPLITS:return ym.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(gm[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let s=1;s<t;++s){const t=e[s];t!==a&&(a=t,r=Math.max(s-n,r),n=s)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return vm(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;s.backend_util.validateDefaultValueShape(n,t);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=s.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,a,t);r[0]<0&&(r[0]=e);for(let s=1;s<=this.raggedRank;++s)r[s]<0&&(r[s]=this.getMaxWidth(s));return r}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),r=[];let o=0;for(let s=0;s<a;++s,o+=t)r.push(o);for(let s=a;s<e;++s)r.push(-1);return s.util.assert(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,s=[];for(let o=0;o<r-1;++o){const r=e[o+1]-e[o];let i=Math.min(a,r),c=t[o];-1===c&&(i=0);for(let e=0;e<i;++e)s.push(c),c+=n;for(let e=0;e<r-i;++e)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,s=[];if(0===r)return[];let o=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let c=t[i];s.push(c);for(let l=1;l<r;++l){const r=e[l];if(r===i)c>=0&&(++o,o<a?c+=n:c=-1);else{if(o=0,i=r,r>=t.length)throw new Error("Got nextValueRowId=".concat(r," which is not less than ").concat(t.length));c=t[r]}s.push(c)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case gm.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case gm.ROW_SPLITS:if(r.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error("Unsupported partition type: ".concat(gm[s]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case gm.FIRST_DIM_SIZE:return e[0];case gm.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case gm.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(gm[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];const a=vm(t,!1),r=s.util.getArrayFromDType(this.valuesDType,s.util.sizeFromShape(a));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){s=this.calculateOutputIndex(e-1,s,n[e],t[e])}this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;const r=this.values,o=n;let i=a.slice();i=i.slice(e+1);const c=s.util.sizeFromShape(i),l=t.length;let u=this.defaultValue;if(u.length!==c&&1!==u.length){const e=this.defaultValueShape;(0,s.tidy)((()=>{const t=(0,s.reshape)(u,e),n=(0,s.broadcastTo)(t,i);u=n.dataSync()}))}let d=0,h=0,p=0;for(let s=0;s<=l;++s){let e=s<l?t[s]:-1;if(e!==p){if(h<p){const e=r.subarray(d*c);bm(o.subarray(h*c),e,(p-h)*c)}if(s>=l){const t=n.length;e=Math.floor(t/c)}if(e>p)if(1===this.defaultValue.length)o.subarray(p*c,e*c).fill(this.defaultValue[0]),p=e;else for(;e>p;){bm(o.slice(p*c),u,c),++p}e<0?(d=s+1,h=p):(d=s,h=p,p=h+1)}else++p}}}function bm(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function vm(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function xm(e,t,n,a,r,s,o,i,c,l){return new ym(e,t,n,a,r,s,o,i,c,l).compute()}const wm={kernelName:s.RaggedTensorToTensor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,h=i.map((e=>n.data.get(e.dataId).values)),p=i.map((e=>e.shape)),[f,m]=xm(l,r.shape,u,s.shape,s.dtype,d,o.shape,h,p,c);return n.makeTensorInfo(f,s.dtype,m)}};function km(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return s.util.makeZerosTypedArray(0,a);const r=Math.abs(Math.ceil((t-e)/n)),o=s.util.makeZerosTypedArray(r,a);t<e&&1===n&&(n=-1),o[0]=e;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}const Sm={kernelName:s.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:o}=n,i=km(a,r,o,s);return t.makeTensorInfo([i.length],s,i)}},Im=Su(s.Reciprocal,(e=>1/e)),Nm={kernelName:s.Reciprocal,backendName:"cpu",kernelFunc:Im};const Tm={kernelName:s.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:i,size:c}=a;vu(r,"resizeBilinear");const l=s.util.computeStrides(r.shape),[u,d]=c,[h,p,f,m]=r.shape,g=n.data.get(r.dataId).values,y=new Float32Array(s.util.sizeFromShape([h,u,d,m])),b=[o&&u>1?p-1:p,o&&d>1?f-1:f],v=[o&&u>1?u-1:u,o&&d>1?d-1:d];let x=0;const w=b[0]/v[0],k=b[1]/v[1];for(let s=0;s<h;s++)for(let e=0;e<u;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(p-1,Math.ceil(t)),o=s*l[0]+n*l[1],c=s*l[0]+r*l[1];for(let e=0;e<d;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(f-1,Math.ceil(t)),u=o+n*l[2],d=c+n*l[2],h=o+s*l[2],p=c+s*l[2];for(let e=0;e<m;e++){const t=g[u+e],n=g[d+e],s=t+(g[h+e]-t)*r,o=s+(n+(g[p+e]-n)*r-s)*a;y[x++]=o}}}return n.makeTensorInfo([h,u,d,m],"float32",y)}};const Cm={kernelName:s.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:i}=a;vu([o,r],"resizeBilinearGrad");const c=s.util.computeStrides(r.shape),[l,u,d,h]=r.shape,[,p,f]=o.shape,m=new Float32Array(l*u*d*h),g=[i&&p>1?u-1:u,i&&f>1?d-1:d],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],b=g[0]/y[0],v=g[1]/y[1],x=n.data.get(o.dataId).values;let w=0;for(let s=0;s<l;s++){const e=s*c[0];for(let t=0;t<p;t++){const n=t*b,a=Math.floor(n),r=Math.min(Math.ceil(n),u-1),s=e+a*c[1],o=e+r*c[1],i=n-a,l=1-i;for(let e=0;e<f;e++){const t=e*v,n=Math.floor(t),a=Math.min(Math.ceil(t),d-1),r=t-n,u=1-r,p=s+n*c[2],f=s+a*c[2],g=o+n*c[2],y=o+a*c[2],b=l*u,k=l*r,S=i*u,I=i*r;for(let e=0;e<h;e++){const t=x[w++];m[p+e]+=t*b,m[f+e]+=t*k,m[g+e]+=t*S,m[y+e]+=t*I}}}}return n.makeTensorInfo([l,d,u,h],"float32",m)}};const Em={kernelName:s.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:i,size:c}=a;vu(r,"resizeNearestNeighbor");const l=s.util.computeStrides(r.shape),[u,d]=c,[h,p,f,m]=r.shape,g=n.data.get(r.dataId).values,y=new Float32Array(h*u*d*m),b=[o&&u>1?p-1:p,o&&d>1?f-1:f],v=[o&&u>1?u-1:u,o&&d>1?d-1:d],x=b[0]/v[0],w=b[1]/v[1];let k=0;for(let s=0;s<h;s++){const e=s*l[0];for(let t=0;t<u;t++){const n=i?x*(t+.5):x*t;let a=Math.min(p-1,o?Math.round(n):Math.floor(n));i&&(a=Math.max(0,a));const r=e+a*l[1];for(let e=0;e<d;e++){const t=i?w*(e+.5):w*e;let n=Math.min(f-1,o?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const a=r+n*l[2];for(let e=0;e<m;e++){const t=g[a+e];y[k++]=t}}}}return n.makeTensorInfo([h,u,d,m],r.dtype,y)}};const _m={kernelName:s.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:i}=a;vu([o,r],"resizeNearestNeighborGrad");const c=s.util.computeStrides(r.shape),l=s.util.computeStrides(o.shape),[u,d,h,p]=r.shape,[,f,m]=o.shape,g=new Float32Array(u*d*h*p),y=n.data.get(o.dataId).values,b=[i&&f>1?d-1:d,i&&m>1?h-1:h],v=[i&&f>1?f-1:f,i&&m>1?m-1:m],x=b[0]/v[0],w=b[1]/v[1],k=1/x,S=1/w,I=2*Math.ceil(k)+2,N=2*Math.ceil(S)+2;for(let s=0;s<u;s++){const e=s*c[0];for(let t=0;t<d;t++){const n=e+t*c[1],a=Math.floor(t*k),r=Math.floor(a-I/2);for(let s=0;s<h;s++){const a=n+s*c[2],o=Math.floor(s*S),u=Math.floor(o-N/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<I;a++){const c=a+r;if(c<0||c>=f)continue;const p=e+c*l[1],g=c*x;if(t===Math.min(d-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<N;e++){const t=e+u;if(t<0||t>=m)continue;const a=p+t*l[2],r=t*w;s===Math.min(h-1,i?Math.round(r):Math.floor(r))&&(o+=y[a+n])}}g[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,g)}};const Am={kernelName:s.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:o}=a;vu(r,"reverse");const i=r.shape.length,c=s.util.parseAxisParam(o,r.shape);if(0===i)return Cu({inputs:{x:r},backend:n});const l=new s.TensorBuffer(r.shape,r.dtype),u=n.bufferSync(r);for(let s=0;s<l.size;s++){const e=l.indexToLoc(s),t=e.slice();c.forEach((e=>t[e]=r.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},Rm={kernelName:s.RotateWithOffset,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:o,fillValue:i,center:c}=n,l=a,u=s.util.getTypedArrayFromDType(r.dtype,s.util.sizeFromShape(r.shape)),[d,h,p,f]=r.shape,[m,g]=s.backend_util.getImageCenter(c,h,p),y=Math.sin(o),b=Math.cos(o),v=l.data.get(r.dataId).values;for(let s=0;s<d;s++){const e=s*p*h*f;for(let t=0;t<h;t++){const n=t*(p*f);for(let a=0;a<p;a++){const r=a*f;for(let s=0;s<f;s++){const o=[d,t,a,s],c=o[2],l=o[1];let x=(c-m)*b-(l-g)*y,w=(c-m)*y+(l-g)*b;x=Math.round(x+m),w=Math.round(w+g);let k=i;if("number"!==typeof i&&(k=3===s?255:i[s]),x>=0&&x<p&&w>=0&&w<h){k=v[e+w*(p*f)+x*f+s]}u[e+n+r+s]=k}}}}return{dataId:l.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Fm=Su(s.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),Dm={kernelName:s.Round,backendName:"cpu",kernelFunc:Fm},Om=ku((e=>1/Math.sqrt(e))),Mm=Iu(s.Rsqrt,Om),Lm={kernelName:s.Rsqrt,backendName:"cpu",kernelFunc:Mm};function zm(e,t,n,a,r,o,i,c,l,u){const d=[a/r,r],h=e.values,p=t.values;if(0===a)return(0,s.buffer)(n,t.dtype);const f=l instanceof s.TensorBuffer?l:(0,s.buffer)(d,t.dtype);"string"===typeof l||"number"===typeof l?f.values.fill(l):"boolean"===typeof l&&f.values.fill(+l);for(let s=0;s<o;s++){const e=[];let o=0;for(let t=0;t<i;t++){const n=h[s*i+t];e.push(n),o+=n*c[t]}if(o<0||o>=a/r)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<r;n++)u?f.values[o*r+n]+=p[s*r+n]:f.values[o*r+n]=0===t.rank?p[0]:p[s*r+n]}return f}const Bm={kernelName:s.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:o}=t,{shape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=s.backend_util.calculateShapes(o,r,i),p=zm(n.bufferSync(r),n.bufferSync(o),i,h,u,l,c,d,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};function Pm(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function Vm(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}const Wm={kernelName:s.SearchSorted,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:o}=t,{side:i}=a,c=function(e,t,n,a,r,o){const i=s.util.getArrayFromDType("int32",n*r);for(let s=0;s<n;++s){const n=e.slice(s*a,(s+1)*a),c=s*r;for(let e=0;e<r;++e)i[c+e]="left"===o?Pm(n,t[e+c]):Vm(n,t[e+c])}return i}(n.data.get(r.dataId).values,n.data.get(o.dataId).values,r.shape[0],r.shape[1],o.shape[1],i);return n.makeTensorInfo(o.shape,"int32",c)}};const Um={kernelName:s.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:o}=t;vu([a,r,o],"select");const i=a.shape.length,c=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,d=(0,s.upcastType)(r.dtype,o.dtype),h=s.util.makeZerosTypedArray(s.util.sizeFromShape(r.shape),d);let p=0;const f=0===i||i>1||1===r.shape.length?1:s.util.sizeFromShape(r.shape.slice(1));for(let s=0;s<c.length;s++)for(let e=0;e<f;e++)1===c[s]?h[p++]=l[s]:h[p++]=u[s];return n.makeTensorInfo(r.shape,d,h)}},Gm=s.backend_util.SELU_SCALEALPHA,jm=s.backend_util.SELU_SCALE,Hm=Su(s.Selu,(e=>e>=0?jm*e:Gm*(Math.exp(e)-1))),qm={kernelName:s.Selu,backendName:"cpu",kernelFunc:Hm},Xm=Su(s.Sign,(e=>e<0?-1:e>0?1:0)),Km={kernelName:s.Sign,backendName:"cpu",kernelFunc:Xm},Ym=Su(s.Sin,(e=>Math.sin(e))),Qm={kernelName:s.Sin,backendName:"cpu",kernelFunc:Ym},Zm=Su(s.Sinh,(e=>Math.sinh(e))),Jm={kernelName:s.Sinh,backendName:"cpu",kernelFunc:Zm},$m=Math.log(1.1920928955078125e-7)+2,eg=Su(s.Softplus,(e=>{const t=e>-$m,n=e<$m,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),tg={kernelName:s.Softplus,backendName:"cpu",kernelFunc:eg};const ng={kernelName:s.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,paddings:i}=a;vu([r],"spaceToBatchND");const c=s.util.sizeFromShape(o),l=[[0,0]];l.push(...i);for(let s=1+o.length;s<r.shape.length;++s)l.push([0,0]);const u=nm.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=s.backend_util.getReshaped(u.shape,o,c,!1),h=s.backend_util.getPermuted(d.length,o.length,!1),p=s.backend_util.getReshapedPermuted(u.shape,o,c,!1),f=ad({inputs:{x:u},backend:n,attrs:{shape:d}}),m=gd({inputs:{x:f},backend:n,attrs:{perm:h}}),g=ad({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function ag(e,t,n,a,r,o,i){const c=t[0],l=o[0],u=new Array(l),d=new Array(c),h=t[1];if(0===l){if(0!==c)throw new Error(s.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(c));return[s.util.getArrayFromDType(n,0),[0,h],s.util.getArrayFromDType(r,0),u,d]}let p=!0,f=0;const m=new Array(l).fill(0);for(let y=0;y<c;++y){const t=e[y*h];if(t<0)throw new Error(s.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(y,t));if(t>=l)throw new Error(s.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(y,t,l));++m[t],p=p&&t>=f,f=t}let g=!0;for(let s=0;s<l;++s){const e=0===m[s];u[s]=e,g=g&&!e,m[s]=Math.max(m[s],1),s>0&&(m[s]+=m[s-1])}if(g&&p){const t=e,n=a;for(let e=0;e<c;++e)d[e]=e;return[t,[c,h],n,u,d]}{const t=m[l-1],o=s.util.getArrayFromDType(n,t*h),p=s.util.getArrayFromDType(r,t),f=new Array(l).fill(0);for(let n=0;n<c;++n){const t=e[n*h],r=f[t],s=(0===t?0:m[t-1])+r;f[t]++;for(let a=0;a<h;++a)o[s*h+a]=e[n*h+a];p[s]=a[n],d[n]=s}for(let e=0;e<l;++e){if(0===f[e]){const t=0===e?0:m[e-1];o[t*h+0]=e;for(let e=1;e<h;++e)o[t*h+e]=0;p[t]=i}}return[o,[t,h],p,u,d]}}const rg={kernelName:s.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values[0],[d,h,p,f,m]=ag(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(h,a.dtype,d),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function sg(e,t,n,a,r){const o=s.util.sizeFromShape(a),i=t[0],c=r.length,l=[];let u=1,d=-1;for(let g=0;g<c;++g){const e=r[g];if(-1===e){if(-1!==d)throw new Error(s.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,g));d=g,l.push(1)}else{if(e<0)throw new Error(s.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(g,e));u*=e,l.push(e)}}if(-1!==d){if(u<=0)throw new Error(s.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(o/u);if(u*e!==o)throw new Error(s.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(a,l));l[d]=e}if(s.util.sizeFromShape(l)!==o)throw new Error(s.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(a,l));const h=a.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*a[e+1]}const f=[];if(c>0){f[c-1]=1;for(let e=c-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const m=s.util.getArrayFromDType(n,i*c);for(let s=0;s<i;++s){let t=0;for(let n=0;n<h;++n)t+=e[s*h+n]*p[n];for(let e=0;e<c;++e)m[s*c+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[i,c],l]}const og={kernelName:s.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.data.get(r.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(s.dataId).values),[l,u,d]=sg(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};function ig(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const c=a.length,l=[t[0],e.length/t[0]],u=l[1],d=c>0?r[c-1]+1:0;if(d<0)throw new Error(s.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=d;const p=h.reduce(((e,t)=>e*t),1),f=s.util.getArrayFromDType(n,p);if(0===c)return d>0&&f.fill(i),[f,h];if(d<=0)throw new Error(s.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=r[m];for(;;){let t=0;if(g<c){if(t=r[g],b===t){++g;continue}if(b>=t)throw new Error(s.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=d)throw new Error(s.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,d));b>y&&f.fill(i,y*u,b*u);for(let n=m;n<g;++n){const t=a[n];if(t<0||t>=l[0])throw new Error(s.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,a[n],l[0]));for(let n=0;n<u;n++)f[b*u+n]+=e[t*u+n]}if(o)for(let e=0;e<u;e++)f[b*u+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>c)break}return y<d&&f.fill(i,y*u,d*u),[f,h]}const cg={kernelName:s.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=ig(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const lg={kernelName:s.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=ig(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const ug={kernelName:s.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:o,defaultValue:i}=t,{outputShape:c}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=s.backend_util.calculateShapes(o,r,c),f=!1,m=n.bufferSync(r);let g;switch(o.dtype){case"bool":g=zm(m,n.bufferSync(o),c,p,d,u,l,h,Boolean(n.data.get(i.dataId).values[0]),f);break;case"float32":g=zm(m,n.bufferSync(o),c,p,d,u,l,h,n.data.get(i.dataId).values[0],f);break;case"int32":g=zm(m,n.bufferSync(o),c,p,d,u,l,h,n.data.get(i.dataId).values[0],f);break;case"string":g=zm(m,n.bufferSync(o),c,p,d,u,l,h,s.util.decodeString(n.data.get(i.dataId).values[0]),f);break;default:throw new Error("Unsupported type ".concat(o.dtype))}return n.makeTensorInfo(c,g.dtype,g.values)}};const dg={kernelName:s.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:o,axis:i}=a,c=s.util.parseAxisParam(i,r.shape)[0],l=s.backend_util.prepareSplitSize(r,o,c),u=new Array(r.shape.length).fill(0),d=r.shape.slice();return l.map((e=>{const t=[...d];t[c]=e;const a=Ud({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[c]+=e,a}))}},hg=ku((e=>Math.sqrt(e))),pg=Su(s.Sqrt,(e=>Math.sqrt(e))),fg={kernelName:s.Sqrt,backendName:"cpu",kernelFunc:pg},mg={kernelName:s.Square,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n;vu(a,"square");const s=r.data.get(a.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];o[i]=e*e}return{dataId:r.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},gg=Ru(((e,t)=>{const n=e-t;return n*n})),yg=Zu(s.SquaredDifference,gg),bg={kernelName:s.SquaredDifference,backendName:"cpu",kernelFunc:yg},vg=ku(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),xg=Iu(s.StaticRegexReplace,vg),wg={kernelName:s.StaticRegexReplace,backendName:"cpu",kernelFunc:xg},kg=Su(s.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Sg={kernelName:s.Step,backendName:"cpu",kernelFunc:kg};function Ig(e,t,n,a){const r=(0,s.buffer)(e,t.dtype);for(let s=0;s<r.size;s++){const e=r.indexToLoc(s),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+a[t];r.set(t.get(...o),...e)}return r}const Ng={kernelName:s.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,end:i,strides:c,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=a;vu(r,"stridedSlice");const{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:v,end:x,strides:w}=s.slice_util.sliceInfo(r.shape,o,i,c,l,u,d,h,p);let k;if(g)k=ad({inputs:{x:r},backend:n,attrs:{shape:m}});else if(y||b){s.util.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=s.slice_util.computeOutShape(v,x,w),t=Ud({inputs:{x:r},backend:n,attrs:{begin:v,size:e}});k=ad({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=Ig(f,n.bufferSync(r),w,v);k=n.makeTensorInfo(m,e.dtype,e.values)}return k}};class Tg{constructor(e,t,n,a,r,o){this.separator=s.util.encodeString(e),this.nGramWidths=t,this.leftPad=s.util.encodeString(n),this.rightPad=s.util.encodeString(a),this.padWidth=r,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let o=0;o<r;++o){const i=this.getPadWidth(s),c=Math.max(0,i-o),l=Math.max(0,i-(r-(o+1))),u=s-(c+l),d=t+(c>0?0:o-i);let h=0;h+=c*this.leftPad.length;for(let t=0;t<u;++t)h+=e[d+t].length;h+=l*this.rightPad.length;h+=(c+l+u-1)*this.separator.length,n[a+o]=new Uint8Array(h);const p=n[a+o];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<c;++e)m(this.leftPad),m(this.separator);for(let t=0;t<u-1;++t)m(e[d+t]),m(this.separator);if(u>0){m(e[d+u-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error("Invalid split value ".concat(t[r],", must be in [").concat(e,", ").concat(n,"]"));e=t[r]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const r=a-1,o=s.util.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=r;++t)o[t]=0;return[e,o]}o[0]=0;for(let s=1;s<=r;++s){const e=t[s]-t[s-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),o[s]=o[s-1]+n}const i=new Array(o[r]);for(let s=0;s<r;++s){const n=t[s];let a=o[s];if(this.nGramWidths.forEach((r=>{const o=t[s+1]-t[s],c=this.getNumNGrams(o,r);this.createNGrams(e,n,i,a,c,r),a+=c})),this.preserveShort&&a===o[s]){const r=t[s+1]-t[s];if(0===r)continue;const o=r+2*this.padWidth,c=1;this.createNGrams(e,n,i,a,c,o)}}return[i,o]}}function Cg(e,t,n,a,r,s,o,i){return new Tg(n,a,r,s,o,i).compute(e,t)}const Eg={kernelName:s.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:d}=t,h=n.data.get(u.dataId).values,p=n.data.get(d.dataId).values,[f,m]=Cg(h,p,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};function _g(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(r,s);n&&0===t.length||a.push(t),r=s+1}}function Ag(e,t,n){const a=e.length,r=[];let o=0,i=0;const c=new Array(a);for(let s=0;s<a;++s){const a=r.length;_g(e[s],t,n,r);const l=r.length-a;c[s]=l,o+=l,i=Math.max(i,l)}const l=s.util.getArrayFromDType("int32",2*o),u=new Array(o),d=[a,i];let h=0;for(let s=0;s<a;++s)for(let e=0;e<c[s];++e)l[2*h]=s,l[2*h+1]=e,u[h]=r[h],++h;return[l,u,d]}const Rg={kernelName:s.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values[0],[l,u,d]=Ag(i,c,r),h=u.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};function Fg(e,t){const n=s.util.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=s.util.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}const Dg={kernelName:s.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=Fg(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",o)}},Og=Su(s.Tan,(e=>Math.tan(e))),Mg={kernelName:s.Tan,backendName:"cpu",kernelFunc:Og},Lg=Su(s.Tanh,(e=>Math.tanh(e))),zg={kernelName:s.Tanh,backendName:"cpu",kernelFunc:Lg};const Bg={kernelName:s.TensorScatterUpdate,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:o}=t,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=s.backend_util.calculateShapes(o,r,a.shape),h=n.bufferSync(r),p=n.bufferSync(o),f=n.bufferSync(a),m=zm(h,p,a.shape,d,l,c,i,u,f,!1);return n.makeTensorInfo(a.shape,m.dtype,m.values)}};function Pg(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=(0,s.buffer)(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}const Vg={kernelName:s.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;vu(r,"tile");const o=Pg(n.bufferSync(r),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},Wg=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Ug(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,o=Math.log(r),i=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*i*(r-i)/r)*Math.sign(s-r/2);Ug(e,t,Math.max(n,Math.floor(t-s*i/r+c)),Math.min(a,Math.floor(t+(r-s)*i/r+c)))}const r=e[t];let o=n,i=a;for(s.util.swap(e,n,t),Wg(e[a],r)>0&&s.util.swap(e,n,a);o<i;){for(s.util.swap(e,o,i),o++,i--;Wg(e[o],r)<0;)o+=1;for(;Wg(e[i],r)>0;)i-=1}0===Wg(e[n],r)?s.util.swap(e,n,i):(i+=1,s.util.swap(e,i,a)),i<=t&&(n=i+1),t<=i&&(a=i-1)}}function Gg(e,t,n,a,r){const o=t[t.length-1],[i,c]=[e.length/o,o],l=s.util.getTypedArrayFromDType(n,i*a),u=s.util.getTypedArrayFromDType("int32",i*a);for(let s=0;s<i;s++){const t=s*c,n=e.subarray(t,t+c);let o=new Array(n.length);n.forEach(((e,t)=>o[t]={value:e,index:t})),a<o.length&&(Ug(o,a),o=o.slice(0,a)),r&&o.sort(Wg);const i=s*a,d=l.subarray(i,i+a),h=u.subarray(i,i+a);for(let e=0;e<a;e++)d[e]=o[e].value,h[e]=o[e].index}const d=t.slice();return d[d.length-1]=a,[(0,s.buffer)(d,n,l),(0,s.buffer)(d,"int32",u)]}const jg={kernelName:s.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a;vu(r,"topk");const i=n.data.get(r.dataId).values,[c,l]=Gg(i,r.shape,r.dtype,s,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const Hg={kernelName:s.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:o}=t,{interpolation:i,fillMode:c,fillValue:l,outputShape:u}=n,[d,h,p,f]=r.shape,[m,g]=null!=u?u:[h,p],y=[d,m,g,f],b=s.util.computeStrides(r.shape),v=b[0],x=b[1],w=b[2],k=s.util.computeStrides(y),S=k[0],I=k[1],N=k[2],T=s.util.getTypedArrayFromDType(r.dtype,s.util.sizeFromShape(y));T.fill(l);const C=a.data.get(r.dataId).values,E=a.data.get(o.dataId).values;for(let s=0;s<d;++s){const e=1===o.shape[0]?E:E.subarray(8*s,8*s+8);for(let t=0;t<m;++t)for(let n=0;n<g;++n)for(let a=0;a<f;++a){let r;const o=e[6]*n+e[7]*t+1;if(0===o)continue;const u=(e[0]*n+e[1]*t+e[2])/o,d=(e[3]*n+e[4]*t+e[5])/o,f=qg(u,p,c),m=qg(d,h,c);switch(i){case"nearest":r=Kg(C,h,p,v,x,w,s,m,f,a,l);break;case"bilinear":r=Yg(C,h,p,v,x,w,s,m,f,a,l);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(i))}T[s*S+t*I+n*N+a]=r}return a.makeTensorInfo(y,r.dtype,T)}return{dataId:a.write(T,y,r.dtype),shape:r.shape,dtype:r.dtype}}};function qg(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return s.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return s.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return s.util.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Xg(e,t,n,a,r,s,o,i,c,l,u){return 0<=i&&i<t&&0<=c&&c<n?e[o*a+i*r+c*s+l]:u}function Kg(e,t,n,a,r,s,o,i,c,l,u){return Xg(e,t,n,a,r,s,o,Math.round(i),Math.round(c),l,u)}function Yg(e,t,n,a,r,s,o,i,c,l,u){const d=Math.floor(i),h=Math.floor(c),p=d+1,f=h+1;return(p-i)*((f-c)*Xg(e,t,n,a,r,s,o,d,h,l,u)+(c-h)*Xg(e,t,n,a,r,s,o,d,f,l,u))+(i-d)*((f-c)*Xg(e,t,n,a,r,s,o,p,h,l,u)+(c-h)*Xg(e,t,n,a,r,s,o,p,f,l,u))}function Qg(e,t,n,a){const r=s.util.parseAxisParam(t,n)[0],o=[1,n[0],1];for(let s=0;s<r;s++)o[0]*=n[s];o[1]=n[r];for(let s=r+1;s<n.length;s++)o[2]*=n[s];const i=new Map,c=new Int32Array(n[r]),l=new s.TensorBuffer(o,a,e),u=[],d=1===o[0]&&1===o[2];for(let s=0;s<n[r];s++){let t;if(d)t=e[s].toString();else{const e=[];for(let t=0;t<o[0];t++)for(let n=0;n<o[2];n++)e.push(l.get(t,s,n));t=e.join(",")}const n=i.get(t);if(null!=n)c[s]=n;else{const e=i.size;i.set(t,e),c[s]=e,u.push(s)}}const h=o.slice();h[1]=i.size;const p=new s.TensorBuffer(h,a);u.forEach(((e,t)=>{for(let n=0;n<o[0];n++)for(let a=0;a<o[2];a++)p.set(l.get(n,e,a),n,t,a)}));const f=n.slice();return f[r]=h[1],{outputValues:p.values,outputShape:f,indices:c}}const Zg={kernelName:s.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;vu(s,"unique");const o=a.data.get(s.dataId).values,{outputValues:i,outputShape:c,indices:l}=Qg(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const Jg={kernelName:s.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r.shape.length,i=r.shape[s],c=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==s&&(c[l++]=r.shape[p]);const u=new Array(o).fill(0),d=r.shape.slice();d[s]=1;const h=new Array(i);for(let p=0;p<h.length;p++){u[s]=p;const e=Ud({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});h[p]=ad({inputs:{x:e},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(e)}return h}};const $g={kernelName:s.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:o}=t,{numSegments:i}=a;vu(r,"unsortedSegmentSum");const c=[],l=[],u=r.shape.length-o.shape.length;let d=o;for(let s=0;s<u;++s){const e=np({inputs:{input:d},backend:n,attrs:{dim:s+1}});d=e,l.push(e)}for(let p=0;p<i;++p){const e=s.util.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),a=Gh({inputs:{a:t,b:d},backend:n}),o=Yu({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),i=Lh({inputs:{a:o,b:r},backend:n}),u=Bh({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});c.push(u),l.push(t),l.push(a),l.push(o),l.push(i),l.push(u)}const h=em({inputs:c,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},ey=[id,ld,dd,pd,nd,fd,bd,vd,xd,wd,Sd,Nd,Cd,Ad,Fd,Ld,zd,Bd,Pd,od,Vd,jd,Xd,Qd,Zd,Qu,eh,nh,ju,ah,ch,uh,dh,hh,ph,fh,mh,yh,vh,xh,wh,kh,Sh,Ih,Th,Ch,Eh,_h,Ah,Rh,Fh,Dh,Vh,Tu,Wh,jh,Jh,tp,ap,op,yp,vp,xp,Sp,Tp,Cp,Ep,Ap,Fp,Mp,Bp,Eu,Pp,oh,Wp,Gp,Hp,Au,Kp,Zp,$p,nf,rf,cf,uf,pf,ff,mf,bf,wf,kf,Sf,If,Nf,Tf,Cf,Ef,Rf,Ff,Mf,Bf,zh,Vf,Uf,jf,qf,Yf,Qf,$f,tm,nm,sm,Ou,im,hm,mm,wm,Sm,Xu,lp,Nm,Lu,Bu,rd,Tm,Cm,Em,_m,Am,Rm,Dm,Lm,Bm,Wm,Um,qm,Wu,Km,Qm,Jm,Gd,zf,tg,ng,rg,og,cg,lg,ug,dg,fg,mg,bg,wg,Sg,Ng,Eg,Rg,Dg,pp,Ph,Mg,zg,Bg,Vg,jg,Hg,yd,Zg,Jg,$g,Jf];for(const n of ey)(0,s.registerKernel)(n);const ty={},ny={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ay(e,t){if(!(e in ty)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,s.env)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete ty[e]}),!1),(0,s.env)().getBool("SOFTWARE_WEBGL_ENABLED")&&(ny.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",ny)||n.getContext("experimental-webgl",ny);return n.getContext("webgl2",ny)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;ty[e]=n}const n=ty[e];return null==n||n.isContextLost()?(delete ty[e],ay(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ty[e])}var ry,sy,oy;function iy(e,t){return[t,e]}function cy(e){const t=s.util.sizeFromShape(e),n=Math.ceil(t/4);return s.util.sizeToSquarishShape(n)}function ly(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function uy(e,t){const n=e;let a,r,o,i,c,l,u,d,h,p;return 2===(0,s.env)().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,o=n.RGBA16F,i=n.RGBA32F,c=n.RED,u=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(a=e.RGBA,r=e.RGBA,o=e.RGBA,i=n.RGBA,c=e.RGBA,u=4,d=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:c,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function dy(e,t){const n=t();return(0,s.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(ry||(ry={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(sy||(sy={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(oy||(oy={}));function hy(e){return!!((0,s.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function py(e,t){return ky(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const fy=/ERROR: [0-9]+:([0-9]+):/g;function my(e,t){const n=fy.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const a=+n[1],r=e.split("\n"),o=r.length.toString().length+2,i=r.map(((e,t)=>s.util.rightPad((t+1).toString(),o)+e));let c=0;for(let s=0;s<i.length;s++)c=Math.max(i[s].length,c);const l=i.slice(0,a-1),u=i.slice(a-1,a),d=i.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(s.util.rightPad(u[0],c)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function gy(e,t){if(dy(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function yy(e,t,n,a,r,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(dy(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),dy(e,(()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,s,o))),dy(e,(()=>e.enableVertexAttribArray(i))),!0)}function by(e,t,n,a){dy(e,(()=>function(e,t,n){Sy(e,n),dy(e,(()=>e.activeTexture(e.TEXTURE0+n))),dy(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),dy(e,(()=>e.uniform1i(n,a)))}function vy(e,t,n){dy(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),dy(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function xy(e,t){dy(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),dy(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function wy(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function ky(e,t,n){const a=dy(e,(()=>t()));if(null==a)throw new Error(n);return a}function Sy(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function Iy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return s.util.sizeFromShape(e.slice(0,e.length-t))}function Ny(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Ty(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Iy(e),...Ny(e)]),t}function Cy(e){return e%2===0}function Ey(e,t){if(e=e.slice(-2),t=t.slice(-2),s.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(Cy(n)&&Cy(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Cy(e[0])&&Cy(t[0])}let _y,Ay;function Ry(e,t){return null!=e.getExtension(t)}function Fy(e){try{if(null!=ay(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Dy(e){if(0===e)return!1;const t=ay(e);if(1!==e){if(Ry(t,"EXT_color_buffer_float"))return Oy(t);const e="EXT_color_buffer_half_float";if(Ry(t,e)){const n=t.getExtension(e);return function(e,t){const n=uy(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!Ry(t,"OES_texture_float"))return!1;if(!Ry(t,"WEBGL_color_buffer_float"))return!1;return Oy(t)}function Oy(e){const t=uy(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function My(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&s.util.assert("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend."))}))}const Ly=(0,s.env)();function zy(){let e,t,n,a,r,o,i,c,l,u;return 2===(0,s.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",o="outputColor",i="out vec4 outputColor;",c=(0,s.env)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",o="gl_FragColor",i="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:o,defineOutput:i,defineSpecialNaN:c,defineSpecialInf:l,defineRound:u}}function By(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=s.util.computeStrides(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(t),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(t):"index -= ".concat(e[r]," * ").concat(t);return"".concat(s,"; ").concat(o,";")})).join("")}function Py(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=s.util.computeStrides(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / outShapeStrides[").concat(r,"]"),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * outShapeStrides[").concat(r,"]"):"index -= ".concat(e[r]," * outShapeStrides[").concat(r,"]");return"".concat(s,"; ").concat(o,";")})).join("")}function Vy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(e,t){const n=e.length,a=e.map((e=>"".concat(t,"[").concat(e,"]"))),r=new Array(n-1);r[n-2]=a[n-1];for(let s=n-3;s>=0;--s)r[s]="(".concat(r[s+1]," * ").concat(a[s+1],")");return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(a[r]),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(a[r]):"index -= ".concat(e[r]," * ").concat(a[r]);return"".concat(s,"; ").concat(o,";")})).join("")}function Wy(e){const t=s.util.computeStrides(e).map((e=>e.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}Ly.registerFlag("HAS_WEBGL",(()=>Ly.getNumber("WEBGL_VERSION")>0)),Ly.registerFlag("WEBGL_VERSION",(()=>Fy(2)?2:Fy(1)?1:0)),Ly.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Ly.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Ly.get("WEBGL_VERSION"))),Ly.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Ly.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Ly.registerFlag("WEBGL_PACK",(()=>Ly.getBool("HAS_WEBGL"))),Ly.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Ly.getBool("WEBGL_PACK"))),Ly.registerFlag("WEBGL_PACK_CLIP",(()=>Ly.getBool("WEBGL_PACK"))),Ly.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>Ly.getBool("WEBGL_PACK"))),Ly.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Ly.getBool("WEBGL_PACK"))),Ly.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Ly.getBool("WEBGL_PACK"))),Ly.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Ly.getBool("WEBGL_PACK"))),Ly.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Ly.getBool("WEBGL_PACK"))),Ly.registerFlag("WEBGL_PACK_REDUCE",(()=>Ly.getBool("WEBGL_PACK"))),Ly.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Ly.getBool("WEBGL_PACK"))),Ly.registerFlag("WEBGL_CONV_IM2COL",(()=>Ly.getBool("WEBGL_PACK"))),Ly.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>Ly.getBool("WEBGL_PACK"))),Ly.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==_y){const t=ay(e);_y=t.getParameter(t.MAX_TEXTURE_SIZE)}return _y}(Ly.getNumber("WEBGL_VERSION")))),Ly.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==Ay){const t=ay(e);Ay=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Ay)}(Ly.getNumber("WEBGL_VERSION")))),Ly.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=Ly.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=ay(e);return t=Ry(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Ry(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),Ly.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Ly.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s.device_util.isMobile())),Ly.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=ay(e);if(1===e){if(!Ry(t,"OES_texture_float"))return!1}else if(!Ry(t,"EXT_color_buffer_float"))return!1;return Oy(t)}(Ly.getNumber("WEBGL_VERSION")))),Ly.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Ly.getBool("WEBGL_FORCE_F16_TEXTURES")&&Ly.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Ly.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>Dy(Ly.getNumber("WEBGL_VERSION")))),Ly.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=Ly.getNumber("WEBGL_VERSION"))&&null!=ay(e).fenceSync;var e})),Ly.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Ly.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Ly.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))})),Ly.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>s.device_util.isMobile()?1:-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))})),Ly.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),Ly.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),Ly.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),Ly.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),Ly.registerFlag("WEBGL_EXP_CONV",(()=>!1)),Ly.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>Ly.getBool("IS_TEST"))),Ly.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),Ly.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),Ly.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),Ly.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const Uy="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Gy}=s.backend_util;function jy(e,t,n){const a=[];if(e.forEach((e=>{const t=s.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(a.push("uniform sampler2D ".concat(e.name,";")),a.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=eb(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push("uniform int ".concat(e.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(e.name,"Shape;"))}a.push("uniform ivec2 ".concat(e.name,"TexShape;"))}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),o=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?qy(e,a):Hy(e,a);const o=e.shapeInfo.logicalShape,i=t.logicalShape;o.length<=i.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",o=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,c=Gy(e.shapeInfo.logicalShape,t.logicalShape),l=$y(i),u=i-o;let d;const h=["x","y","z","w","u","v"];d=0===o?"":i<2&&c.length>=1?"coords = 0;":c.map((e=>"coords.".concat(h[e+u]," = 0;"))).join("\n");let p="";p=i<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(h[t+u]))).join(", ");let f="return outputValue;";const m=1===s.util.sizeFromShape(e.shapeInfo.logicalShape),g=s.util.sizeFromShape(t.logicalShape),y=1===g;if(1!==o||m||y){if(m&&!y)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){const e=o-2,t=o-1;c.indexOf(e)>-1&&c.indexOf(t)>-1?f="return vec4(outputValue.x);":c.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(d,"\n      vec4 outputValue = get").concat(a,"(").concat(p,");\n      ").concat(f,"\n    }\n  ")}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",o=t.texShape,i=e.shapeInfo.texShape,c=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&c===l&&null==e.shapeInfo.flatOffset&&s.util.arraysEqual(i,o))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const u=$y(l),d=Gy(e.shapeInfo.logicalShape,t.logicalShape),h=l-c;let p;const f=["x","y","z","w","u","v"];p=0===c?"":l<2&&d.length>=1?"coords = 0;":d.map((e=>"coords.".concat(f[e+h]," = 0;"))).join("\n");let m="";m=l<2&&c>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(f[t+h]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(u," coords = getOutputCoords();\n      ").concat(p,"\n      return get").concat(a,"(").concat(m,");\n    }\n  ")}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,c=zy(),l=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(c);let u,d,h=function(e){const t="".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(Xy,"\n    ").concat(Ky,"\n    ").concat(Yy,"\n  ");return t}(c);t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(s.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let o=s,i="",c="b, r, c";for(let l=2;l<e.length-1;l++)o*=e[e.length-l-1],i="\n      int b".concat(l," = index / ").concat(o,";\n      index -= b").concat(l," * ").concat(o,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(e.length,"(").concat(c,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(c)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(s.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=Py(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const a=By(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=Py(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=By(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=By(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=By(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(c)),n.packedInputs&&(h+=Qy);return[h,l,d,r,u,o,n.userCode].join("\n")}function Hy(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=Zy(n);if(t)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=e.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(Jy(e),"\n      }\n    ");const r=e.shapeInfo.texShape,s=r[0],o=r[1];if(1===o&&1===s)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=Zy(n);if(1===o)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(s,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===s)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(t)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(s,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape;if(null!=o&&s.util.arraysEqual(n,o)){if(t)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const e=o[0],n=o[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:i,keptDims:c}=s.util.squeezeShape(n),l=i;if(l.length<n.length){const n=tb(e,l),a=["row","col"];return"\n      ".concat(Hy(n,t),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(nb(a,c),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(Jy(e),"\n      }\n    ");const u=o[0],d=o[1],h=Zy(a);if(1===d)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(u,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===u)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(d,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(t)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(h,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(h,";\n    vec2 uv = uvFromFlat(").concat(u,", ").concat(d,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[1]*n[2],i=n[2],{newShape:c,keptDims:l}=s.util.squeezeShape(n),u=c;if(u.length<n.length){const n=tb(e,u),a=["row","col","depth"];return"\n        ".concat(Hy(n,t),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(nb(a,l),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(o,", ").concat(i,", 1)));\n        ").concat(Jy(e),"\n      }\n    ");const d=e.shapeInfo.texShape,h=d[0],p=d[1],f=e.shapeInfo.flatOffset;if(p===o&&null==f)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(i,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(p,".0, ").concat(h,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(p===i&&null==f)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(p,".0, ").concat(h,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const m=Zy(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(o," + col * ").concat(i," + depth + ").concat(m,";\n        vec2 uv = uvFromFlat(").concat(h,", ").concat(p,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[3],i=n[2]*o,c=n[1]*i,{newShape:l,keptDims:u}=s.util.squeezeShape(n);if(l.length<n.length){const n=tb(e,l),a=["row","col","depth","depth2"];return"\n      ".concat(Hy(n,t),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(nb(a,u),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(c,", ").concat(i,", ").concat(o,", 1)));\n        ").concat(Jy(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1],m="int stride2 = ".concat(a,"Shape[3];"),g="int stride1 = ".concat(a,"Shape[2] * stride2;"),y="int stride0 = ".concat(a,"Shape[1] * stride1;");if(f===c&&null==d)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(m,"\n        ").concat(g,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(i,", ").concat(o,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(f===o&&null==d)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const b=Zy(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(m,"\n      ").concat(g,"\n      ").concat(y,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(b,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," +\n          depth * ").concat(o," + depth2;\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index + ").concat(b,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],o=t[3]*r,i=t[2]*o,c=t[1]*i,{newShape:l,keptDims:u}=s.util.squeezeShape(t);if(l.length<t.length){const t=tb(e,l),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(Hy(t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(nb(n,u),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(c,", ").concat(i,", ").concat(o,", ").concat(r,")) +\n          depth3;\n        ").concat(Jy(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===c&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(i,", ").concat(o,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===r&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=Zy(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," + depth * ").concat(o," +\n          depth2 * ").concat(r," + depth3 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:o}=s.util.squeezeShape(t);if(r.length<t.length){const t=tb(e,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(Hy(t),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(nb(n,o),");\n      }\n    ")}const i=t[5],c=t[4]*i,l=t[3]*c,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(d,", ").concat(u,", ").concat(l,", ").concat(c,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(i,", 1)));\n        ").concat(Jy(e),"\n      }\n    ");const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];if(m===d&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(m===i&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const g=Zy(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(d," + col * ").concat(u," + depth * ").concat(l," +\n          depth2 * ").concat(c," + depth3 * ").concat(i," + depth4 + ").concat(g,";\n      vec2 uv = uvFromFlat(").concat(f,", ").concat(m,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function qy(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=zy();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=zy();if(t)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape,i=o[0],c=o[1],l=zy();if(null!=o&&s.util.arraysEqual(n,o))return t?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(l.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(c,".0, ").concat(i,".0);\n\n        return ").concat(l.texture2D,"(").concat(a,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(l.texture2D,"(").concat(a,", uv);\n    }\n  ");const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],d=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(d,", ").concat(u[0],", ").concat(u[1],", row, col);\n      return ").concat(l.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=tb(e,n.slice(1)),o=["b","row","col"];return"\n        ".concat(qy(s,t),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(nb(o,a),");\n        }\n      ")}const i=zy();if(t)return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=o[0],l=o[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(d,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=zy();if(t)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],d=Math.ceil(s[o-1]/2);let h=d*Math.ceil(s[o-2]/2),p="int b, int row, int col",f="b * ".concat(h," + (row / 2) * ").concat(d," + (col / 2)");for(let m=2;m<o-1;m++)p="int b".concat(m,", ")+p,h*=s[o-m-1],f="b".concat(m," * ").concat(h," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const Xy="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ky="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Yy="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Qy="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Zy(e){return"offset".concat(e)}function Jy(e){const t=e.name,n=s.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function $y(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function eb(e,t,n){const{newShape:a,keptDims:r}=s.util.squeezeShape(t),o=t.length,i=e&&3===o&&1===t[0],c=i?t.slice(1):a,l=!e&&o>1&&!s.util.arraysEqual(t,n)&&a.length<o||i;return{useSqueezeShape:l,uniformShape:l?c:t,keptDims:r}}function tb(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function nb(e,t){return t.map((t=>e[t])).join(", ")}function ab(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),o=r.map((e=>e.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},c=jy(r,i,t),l=function(e,t){const n=ky(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(dy(e,(()=>e.shaderSource(n,t))),dy(e,(()=>e.compileShader(n))),(0,s.env)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw my(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,c),u=e.createProgram(l);return(0,s.env)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:c,webGLProgram:u,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:c,webGLProgram:u,inShapeInfos:o,outShapeInfo:i},rb(e,t,u)))}function rb(e,t,n){const a=[],r=[];let o,i,c,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===(0,s.env)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(const s of t.variableNames){const r={name:s,uniform:e.getUniformLocation(n,s,d),offset:e.getUniformLocation(n,"offset".concat(s),d)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,"".concat(s,"Shape"),d),r.texShape=e.getUniformLocation(n,"".concat(s,"TexShape"),d)),a.push(r)}if(t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),c=e.getUniformLocation(n,"outShapeStrides",d),i=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(const s of t.customUniforms)r.push(e.getUniformLocation(n,s.name,d));return{variablesLocations:a,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:o,outShapeStridesLocation:c,outTexShapeLocation:i}}function sb(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],o=r.shape;if(!s.util.arraysEqual(a,o))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(o," must match"));if(e.isUniform&&r.isUniform)return;const i=e.texShape,c=r.isUniform?null:r.texData.texShape;if(!s.util.arraysEqual(i,c))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(i," and ").concat(c," must match"))}))}function ob(e){return(0,s.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class ib{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ry.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=zy();this.outputShape=e,this.enableShapeUniforms=ob(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?Py(["r","c","d"],e):By(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class cb{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ry.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=zy();this.outputShape=e,this.enableShapeUniforms=ob(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?Py(["r","c","d"],e):By(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class lb{constructor(e){this.variableNames=["A"],this.outTexUsage=sy.DOWNLOAD;const t=zy();this.outputShape=e,this.userCode="\n      ".concat(Uy,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class ub{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=sy.DOWNLOAD;const t=zy();this.outputShape=e,this.userCode="\n      ".concat(Uy,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const db={R:0,G:1,B:2,A:3};class hb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=zy();this.outputShape=e,this.enableShapeUniforms=ob(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let o=0;o<n.length;o++){const e=n[o];s+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(db[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Wy(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(s,"\n        }\n        ").concat(a.output," = vec4(").concat(r,", 0., 0., 0.);\n      }\n    ")}}class pb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=zy();this.outputShape=e,this.enableShapeUniforms=ob(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const r=2*s+t;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(s," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(s,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(r,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(r,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(r,"] = values[2];\n            } else {\n              result[").concat(r,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Wy(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(r,";\n        }\n    ")}}function fb(e){const t=zy();return function(e,t){const n=ky(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(dy(e,(()=>e.shaderSource(n,t))),dy(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function mb(e){return function(e,t){const n=ky(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return dy(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),dy(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function gb(e){return function(e,t){const n=ky(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return dy(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),dy(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function yb(e,t,n,a,r,o){!function(e,t){const n=(0,s.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const a="[".concat(e,"x").concat(t,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(t,n);const i=function(e){return ky(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),c=e.TEXTURE_2D;return dy(e,(()=>e.bindTexture(c,i))),dy(e,(()=>e.texParameteri(c,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),dy(e,(()=>e.texParameteri(c,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),dy(e,(()=>e.texParameteri(c,e.TEXTURE_MIN_FILTER,e.NEAREST))),dy(e,(()=>e.texParameteri(c,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,s.env)().getNumber("WEBGL_VERSION")?dy(e,(()=>e.texImage2D(c,0,a,t,n,0,r,o,null))):dy(e,(()=>e.texStorage2D(c,1,a,t,n))),dy(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function bb(e){return e.internalFormatFloat}function vb(e){return e.internalFormatHalfFloat}function xb(e){return e.downloadTextureFormat}function wb(e){return e.internalFormatPackedFloat}function kb(e){return e.internalFormatPackedHalfFloat}function Sb(e,t,n,a,r,s,o,i){const c=e,l=new Float32Array(function(e,t){const[n,a]=ly(e,t);return n*a*4}(s,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class Ib{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,s.env)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){ty[e]=t}(t,e)):this.gl=ay(t),e=this.gl,2===(0,s.env)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>dy(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>dy(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>dy(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>dy(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>dy(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>dy(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>dy(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>dy(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,s.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=py(this.gl,e),Ry(this.gl,t))this.textureHalfFloatExtension=py(this.gl,t);else if((0,s.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Ry(this.gl,a))this.colorBufferHalfFloatExtension=py(this.gl,a);else if((0,s.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Ry(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Ry(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=mb(this.gl),this.indexBuffer=gb(this.gl),this.framebuffer=function(e){return ky(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=uy(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,s.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;dy(e,(()=>e.finish())),dy(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),dy(e,(()=>e.deleteFramebuffer(this.framebuffer))),dy(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),dy(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),dy(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=iy(t,n);return yb(e,r,s,bb(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=iy(t,n);return yb(e,r,s,vb(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=iy(t,n);return yb(e,r,s,xb(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){dy(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,s.env)().getNumber("WEBGL_VERSION")?dy(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):dy(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,s.env)().getNumber("WEBGL_VERSION")?dy(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):dy(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),dy(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,o){let i,c,l;dy(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*a*4),c=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*a*4),c=e.FLOAT,l=o.internalFormatPackedFloat),i.set(r),2===(0,s.env)().getNumber("WEBGL_VERSION")?dy(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,c,i))):dy(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,c,i))),dy(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=ly(t,n);return yb(e,r,s,kb(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=ly(t,n);return yb(e,r,s,wb(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(xy(this.gl,this.framebuffer),this.outputTexture=null),dy(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[r,s]=iy(t,n),o=new Uint8Array(t*n*4);return dy(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return Sb(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n,a){const r=e.createBuffer();dy(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return dy(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),dy(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),dy(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,s.env)().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return dy(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=fb(t));const n=function(e){return ky(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);dy(t,(()=>t.attachShader(n,this.vertexShader))),dy(t,(()=>t.attachShader(n,e))),function(e,t){if(dy(e,(()=>e.linkProgram(t))),!(0,s.env)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&gy(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;dy(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){dy(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),yy(e,t,"clipSpacePos",n,3,20,0)&&yy(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(dy(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&gy(this.gl,this.program),dy(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return ky(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),dy(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),by(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=ly(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&gy(this.gl,this.program),wy(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}dy(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),dy(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=py(this.gl,2===(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await s.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,s.env)().platform&&(n=(0,s.env)().platform.setTimeoutCustom.bind((0,s.env)().platform)),s.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),vy(this.gl,e,this.framebuffer),this.debug&&wy(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(vy(this.gl,this.outputTexture,this.framebuffer),this.debug&&wy(this.gl)):xy(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;vy(a,e,this.framebuffer),this.debug&&wy(a),this.outputTexture=e,dy(a,(()=>a.viewport(0,0,t,n))),dy(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),dy(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:Nb,bincountImpl:Tb,bincountReduceImpl:Cb,bitwiseAndImpl:Eb,castImpl:_b,ceilImpl:Ab,concatImpl:Rb,equalImpl:Fb,expImpl:Db,expm1Impl:Ob,floorImpl:Mb,gatherNdImpl:Lb,gatherV2Impl:zb,greaterImpl:Bb,greaterEqualImpl:Pb,lessImpl:Vb,lessEqualImpl:Wb,linSpaceImpl:Ub,logImpl:Gb,maxImpl:jb,maximumImpl:Hb,minimumImpl:qb,multiplyImpl:Xb,negImpl:Kb,notEqualImpl:Yb,prodImpl:Qb,raggedGatherImpl:Zb,raggedRangeImpl:Jb,raggedTensorToTensorImpl:$b,rangeImpl:ev,rsqrtImpl:tv,scatterImpl:nv,sigmoidImpl:av,simpleAbsImpl:rv,sliceImpl:sv,sparseFillEmptyRowsImpl:ov,sparseReshapeImpl:iv,sparseSegmentReductionImpl:cv,sqrtImpl:lv,staticRegexReplaceImpl:uv,stridedSliceImpl:dv,stringNGramsImpl:hv,stringSplitImpl:pv,stringToHashBucketFastImpl:fv,subImpl:mv,tileImpl:gv,topKImpl:yv,transposeImpl:bv,uniqueImpl:vv}=e;function xv(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>"".concat(e,".").concat(t)))}function wv(e,t){return 1===t?[e]:xv(e,t)}class kv{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ob(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=wv("rc",this.rank),t=$y(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(r,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let t=2;t<this.rank;t++)r="".concat(e[e.length-1-t],",")+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class Sv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ob(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?Vy(["r","c","d"],"inputShape"):By(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Wy(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class Iv{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=Tv(t,n),r=Cv(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=Nv(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let o;return a===oy.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===oy.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===oy.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===oy.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===oy.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=Tv(n,a),o=Cv(t,r,a);o in this.freeTextures||(this.freeTextures[o]=[]);const i=Nv(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),c=(0,s.env)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==c&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[o],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Nv(e,t,n,a,r){const s=function(e,t){switch(e){case oy.PACKED_2X2_FLOAT32:return wb(t);case oy.PACKED_2X2_FLOAT16:return kb(t);case oy.UNPACKED_FLOAT32:return bb(t);case oy.UNPACKED_FLOAT16:return vb(t);case oy.PACKED_4X1_UNSIGNED_BYTE:return xb(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,a);let o;if(r){const[t,n]=ly(e[0],e[1]);o=t*n}else{const[t,n]=iy(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,s);return o*i}function Tv(e,t){if(e===sy.UPLOAD)return oy.PACKED_2X2_FLOAT32;if(e===sy.RENDER||null==e)return function(e){return(0,s.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?oy.PACKED_2X2_FLOAT32:oy.UNPACKED_FLOAT32:e?oy.PACKED_2X2_FLOAT16:oy.UNPACKED_FLOAT16}(t);if(e===sy.DOWNLOAD||e===sy.PIXELS)return oy.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function Cv(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class Ev{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ob(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const _v="if (isnan(x)) return x;",Av="return x;",Rv="return abs(x);";const Fv="return (x >= 0.0) ? x : (exp(x) - 1.0);",Dv=_v+"\n  return (x < 0.0) ? 0.0 : x;\n",Ov=_v+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Mv="return x;",Lv="return 1.0 / (1.0 + exp(-1.0 * x));",zv="return x;",Bv="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",Pv="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Vv="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Wv="return 1.0 / (1.0 + exp(-1.0 * x));";class Uv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ob(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class Gv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ob(this.outputShape.length);const t=e.length,n=wv("rc",t),a=$y(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":"vec2(".concat(s.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const jv=s.kernel_impls.whereImpl,Hv={};const qv=(0,s.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Xv extends s.KernelBackend{nextDataId(){return Xv.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,s.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Ib)t=e;else{const n=ay((0,s.env)().getNumber("WEBGL_VERSION"),e);t=new Ib(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=ay((0,s.env)().getNumber("WEBGL_VERSION"));t=new Ib(e),this.binaryCache=((n=(0,s.env)().getNumber("WEBGL_VERSION"))in Hv||(Hv[n]={}),Hv[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Iv(this.gpgpu),this.numMBBeforeWarning=null==(0,s.env)().global.screen?1024:(0,s.env)().global.screen.height*(0,s.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new s.DataStorage(this,(0,s.engine)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,s){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,r]},i.texShape=[a,r];const c=Ty(t),l=new hb(c,!1,s),u=this.runWebGLProgram(l,[o],n,[[a,r]]);return u.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),u.dataId}write(e,t,n){if(((0,s.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,s.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:sy.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if((0,s.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:sy.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:o,shape:i,isPacked:c}=t;if(null!=o){let t;t=c?new Uv(i,Mv):new Ev(i,Mv);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const l=null!=this.activeTimers;let u,d;if(l&&(u=s.util.now()),"complex64"===a){const e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);d=s.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=s.util.now()-u),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:o,complexTensorInfos:i,isPacked:c}=t;if(null!=r){let t;t=c?new Uv(a,Mv):new Ev(a,Mv);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:o}],o),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,s.env)().getBool("DEBUG")&&!(0,s.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,s.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,d=null;if("complex64"!==o&&(0,s.env)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...cy(a))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=s.backend_util.mergeRealAndImagArrays(t,n)}else if(null==d)u=this.getValuesFromTexture(e);else{const e=s.util.sizeFromShape(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){const e=this.gpgpu.gl;dy(e,(()=>e.deleteBuffer(d)))}const h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,s.engine)().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:r,slice:o,dtype:i,isPacked:c,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=o){let n;n=c?new Uv(r,Mv):new Ev(r,Mv);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),s=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),s}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),d=(0,s.engine)().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>s.util.decodeString(e)));return(0,s.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,s.buffer)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!hy(n)){if((0,s.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=s.util.sizeFromShape(t);if((0,s.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...cy(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const o=(0,s.env)().getBool("WEBGL_PACK")&&!0===a,i=o?Ty(t):t,c=o?new ub(i):new lb(i),l=this.runWebGLProgram(c,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=s.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),o=s.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=s.util.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:o[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:s.util.now(),endMs:null}}endTimer(e){return(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=s.util.now(),e)}async getQueryTime(e){if((0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:qv;return(0,s.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&s.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){s.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return jv(e.shape,t)}packedUnaryOp(e,t,n){const a=new Uv(e.shape,t),r=this.compileAndRun(a,[e],n);return(0,s.engine)().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=rv(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Rv,e.dtype);const t=new Ev(e.shape,Rv),n=this.compileAndRun(t,[e]);return(0,s.engine)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&s.util.isString(n[0])){const r=n.map((e=>s.util.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return(0,s.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new Gv(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new kv(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Iy(e.shape),...Ny(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[Iy(t),...Ny(t)],s=new Sv(r,n),o=[n],i=this.runWebGLProgram(s,[a],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:o}=n;if(null!=t){const e=s.util.sizeFromShape(r),n=t[0]*t[1]*4;s.util.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=Ty(r);let c;c=a?new cb(i):new ib(i);const l=[null!=t?t:cy(i)];return{dtype:o,shape:r,dataId:this.runWebGLProgram(c,[{shape:i,dtype:o,dataId:e}],o,l,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5?arguments[5]:void 0;const i=this.makeTensorInfo(e.outputShape,n),c=this.texData.get(i.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===ry.DENSE){const t=null!=o?o:cy(e.outputShape);c.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(c.usage=e.outTexUsage),0===s.util.sizeFromShape(i.shape))return c.values=s.util.getTypedArrayFromDType(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&s.util.sizeFromShape(t.shape)<=(0,s.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Ey(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),l.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const d={shape:i.shape,texData:c,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const o=t.texData.texShape,{useSqueezeShape:i,uniformShape:c,keptDims:l}=eb(e.packedInputs,t.shape,o);let u="",d="",h="";if(1===c.length&&e.packedInputs){const e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];u="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==c.length||e.packedInputs){if(c.length>2&&!e.packedInputs){const e=s.util.computeStrides(c);h="".concat(e[0]===o[1],"_").concat(e[e.length-1]===o[1])}}else d="".concat(c[0]>1,"_").concat(c[1]>1);const p=t.shape.length,f=2===c.length&&s.util.arraysEqual(t.shape,o),m=1===s.util.sizeFromShape(t.shape),g=s.backend_util.getBroadcastDims(t.shape,n.shape),y=!e.packedInputs&&p===n.shape.length&&s.util.arraysEqual(o,n.texData.texShape),b=e.packedInputs||c.length>2?"":"".concat(o[0]>1,"_").concat(o[1]>1);a+="".concat(p,"_").concat(y,"_").concat(i?l:"","_").concat(c.length,"_").concat(m,"_").concat(g,"_").concat(f,"_").concat(u,"_").concat(d,"_").concat(h,"_").concat(b,"_").concat(r)}else{const e=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(e,"_").concat(r)}}));const r=e.userCode;let o=e.constructor.name;return o+="_"+a+"_"+r+"".concat((0,s.env)().getNumber("WEBGL_VERSION")),o}(e,u,d),p=this.getAndSaveBinary(h,(()=>ab(this.gpgpu,e,u,d))),f=null!=this.activeTimers;let m;f&&(m=this.startTimer()),(0,s.env)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(sb(t.inShapeInfos,n),sb([t.outShapeInfo],[a]));const o=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):e.setOutputMatrixTexture(o.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,s.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){const a=n[l],{uniform:r,offset:o,shape:i,texShape:c}=t.variablesLocations[l];if(i){const{uniformShape:n}=eb(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n))}}if(c&&e.gl.uniform2i(c,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(s.util.sizeFromShape(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=a.texData.slice&&null!=o&&e.gl.uniform1i(o,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,l)}const c=t.outShapeLocation;if(c)switch(a.shape.length){case 1:e.gl.uniform1iv(c,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(c,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(c,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(c,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=s.util.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let s=0;s<t.program.customUniforms.length;++s){const n=t.program.customUniforms[s],a=t.customUniformLocations[s],o=r[s];if("float"===n.type)e.gl.uniform1fv(a,o);else if("vec2"===n.type)e.gl.uniform2fv(a,o);else if("vec3"===n.type)e.gl.uniform3fv(a,o);else if("vec4"===n.type)e.gl.uniform4fv(a,o);else if("int"===n.type)e.gl.uniform1iv(a,o);else if("ivec2"===n.type)e.gl.uniform2iv(a,o);else if("ivec3"===n.type)e.gl.uniform3iv(a,o);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(a,o)}}e.executeProgram()}(this.gpgpu,p,u,d,a),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=(0,s.env)().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=s.util.now();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,s.env)().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,s.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,s.tidy)((()=>{if(!(0,s.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,s.env)().getBool("DEBUG");(0,s.env)().set("DEBUG",!1);const t=this.abs((0,s.scalar)(1e-8)).dataSync()[0];if((0,s.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:o,usage:i,isPacked:c}=t;if(null!=o)return;const l=null!=this.activeTimers;let u;l&&(u=s.util.now());let d=t.texShape;if(null==d&&(d=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=(0,s.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=(0,s.env)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&(0,s.env)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?s.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=s.util.squeezeShape(e);e=t.newShape}let r=s.util.sizeFromShape(e),o=null;e.length<=1&&r<=n?o=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?o=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?o=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?o=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?o=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(o=[e[0],e[1]*e[2]*e[3]]);const i=null!=o&&Math.max(...o)>a&&Math.min(...o)<=(t?2:1)&&Math.min(...o)>0;if(null==o||i)if(t){const t=Iy(e);let n=2,a=2;e.length&&([n,a]=Ny(e)),r=t*(n/2)*(a/2),o=s.util.sizeToSquarishShape(r).map((e=>2*e))}else o=s.util.sizeToSquarishShape(r);return o}(n,c),t.texShape=d),null!=r){const e=Ty(n);let o,i=d[1],h=d[0];const p=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!c&&p||([i,h]=ly(d[0],d[1])),o=c?new pb(e,p):new hb(e,p);const f=p?[h,i]:d,m=this.makeTensorInfo(f,a),g=this.texData.get(m.dataId);g.usage=p?sy.PIXELS:sy.UPLOAD,g.texShape=f,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),i,h,r);const y=[[h,i]],b=!0,v=this.runWebGLProgram(o,[m],a,y,b),x=this.texData.get(v.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,(0,s.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(v.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(v.dataId)),this.disposeIntermediateTensorInfo(m),l&&(this.uploadWaitMs+=s.util.now()-u)}else{const e=this.acquireTexture(d,i,a,c);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*s.util.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,s.nextFrame)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw my(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=rb(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:o,channels:i}=e,c=(0,s.engine)().backend;if(!c.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=c.writeTexture(a,t,n,r,o,i);return(0,s.engine)().makeTensorFromDataId(l,t,n,c)}}Xv.nextDataId=0;s.device_util.isBrowser()&&(0,s.registerBackend)("webgl",(()=>new Xv),2);const Kv="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Yv{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=s.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ob(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const Qv="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Zv{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.backend_util.assertAndGetBroadcastShape(t,n);const r=this.outputShape.length;this.enableShapeUniforms=ob(r);let o="";if(a)if(0===r||1===s.util.sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=$y(r);if(o="\n          ".concat(e," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=wv("coords",r);this.enableShapeUniforms?o+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):o+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(o,"\n\n        setOutput(result);\n      }\n    ")}}function Jv(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const $v={kernelName:s.Identity,backendName:"webgl",kernelFunc:Jv};function ex(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(s.dataId),i=Jv({inputs:{x:a},backend:n}),c=Jv({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:c},s}const tx={kernelName:s.Complex,backendName:"webgl",kernelFunc:ex},nx="return (a < 0.) ? b * a : a;",ax="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const rx={kernelName:s.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:o}=a,i=n.makeTensorInfo([],"float32",s.util.createScalarValue(o,"float32")),c=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zv(ax,r.shape,i.shape):new Yv(nx,r.shape,i.shape),l=n.runWebGLProgram(c,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},sx="return (a < 0.) ? b * a : a;",ox="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const ix={kernelName:s.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,o=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zv(ox,a.shape,r.shape):new Yv(sx,a.shape,r.shape);return n.runWebGLProgram(o,[a,r],"float32")}},cx="if (isnan(x)) return x;";function lx(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let{inputs:o,backend:i}=e;const{x:c}=o,l=i,u=r||c.dtype;if(l.shouldExecuteOnCPU([c])&&null!=a){const e=l.texData.get(c.dataId),t=a(e.values,u);return l.makeTensorInfo(c.shape,u,t)}let d;return d=(0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new Uv(c.shape,n):new Ev(c.shape,t),l.runWebGLProgram(d,[c],u)}}function ux(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:o,dtype:i}=e;return e=>{let{inputs:c,backend:l}=e;const{a:u,b:d}=c,h=l;if(r&&"complex64"===u.dtype){const e=h.texData.get(u.dataId),n=h.texData.get(d.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},o={dataId:a.dataId,dtype:a.dtype,shape:d.shape},i=new Yv(t,u.shape,d.shape);return h.runWebGLProgram(i,[r,o],(0,s.upcastType)(n.dtype,a.dtype))})),o=ex({inputs:{real:a,imag:r},backend:h});return h.disposeIntermediateTensorInfo(a),h.disposeIntermediateTensorInfo(r),o}const p=i||(0,s.upcastType)(u.dtype,d.dtype);if(("string"===u.dtype||"string"===d.dtype||h.shouldExecuteOnCPU([u,d]))&&null!=o){const e=h.texData.get(u.dataId).values,t=h.texData.get(d.dataId).values,n="string"===u.dtype?s.backend_util.fromUint8ToStringArray(e):e,a="string"===u.dtype?s.backend_util.fromUint8ToStringArray(t):t,[r,i]=o(u.shape,d.shape,n,a,p),c=h.makeTensorInfo(i,p);return h.texData.get(c.dataId).values=r,c}let f;return f=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new Zv(n,u.shape,d.shape,a):new Yv(t,u.shape,d.shape),h.runWebGLProgram(f,[u,d],p)}}function dx(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?zv:Av;if("relu"===e)return t?Pv:Dv;if("elu"===e)return t?Bv:Fv;if("relu6"===e)return t?Vv:Ov;if("prelu"===e)return t?ox:sx;if("leakyrelu"===e)return t?ax:nx;if("sigmoid"===e)return t?Wv:Lv;throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class hx{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ob(this.outputShape.length);const l=a?e[1]:e[2],u=Math.ceil(l/2),d=a?"i * 2, rc.y":"rc.y, i * 2",h=r?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(v="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(b,";\n        int batchB = ").concat(v,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(d,");\n          vec4 b = getMatrixB(batchB, ").concat(h,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const px={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class fx{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=s.backend_util.assertAndGetBroadcastShape(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const mx="return a * b;";function gx(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,o=s.backend_util.upcastType(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),s=new fx(px.REAL,a.shape,r.shape),o=new fx(px.IMAG,a.shape,r.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(s,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),u=ex({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[s,i]=Xb(a.shape,r.shape,e.values,t.values,o),c=n.makeTensorInfo(i,o);return n.texData.get(c.dataId).values=s,c}let i;return i=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zv(mx,a.shape,r.shape):new Yv(mx,a.shape,r.shape),n.runWebGLProgram(i,[a,r],o)}const yx={kernelName:s.Multiply,backendName:"webgl",kernelFunc:gx};function bx(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:o}=a,i=n,c=s.util.sizeFromShape(r.shape),l=s.util.inferFromImplicitShape(o,c),u=s.util.sizeFromShape(l);s.util.assert(c===u,(()=>"The new shape (".concat(l,") has ").concat(u," elements and the old ")+"shape (".concat(r.shape,") has ").concat(c," elements. The new shape and old ")+"shape must have the same number of elements."));const d=i.texData.get(r.dataId);return!d.isPacked||Ey(r.shape,l)||null!==d.texture&&Ey(d.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const a=[Iy(e.shape),...Ny(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[Iy(t),...Ny(t)],o=new Sv(s,a),i=[a],c=n.runWebGLProgram(o,[r],e.dtype,i,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}(r,l,i)}const vx={kernelName:s.Reshape,backendName:"webgl",kernelFunc:bx};class xx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:o}=e;this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l="sumValue += dot(values * ".concat(s.util.isInt(e)?e.toPrecision(2):e,", ones);")}let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(l,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class wx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let c="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let d="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),h="vec4";"all"===t?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";r%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(d,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(2===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(3===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(d,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function kx(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=s.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let o=e;for(let s=0;s<r.length;s++){const{inSize:i,windowSize:c,outSize:l}=r[s];let u,d;u="mean"===n?0===s?new xx({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},i):new xx({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l}):new wx({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},n),d=o,o=a.runWebGLProgram(u,[o],t),d.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(d)}return o}class Sx{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const a=$y(this.rank),r=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class Ix{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=$y(this.rank),r=xv("rc",this.rank),s=new Array(this.rank);for(let l=0;l<t.length;l++)s[t[l]]=r[l];const o="vec2(".concat(s.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(s.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function Nx(e,t,n){const a=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ix(e.shape,t):new Sx(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function Tx(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:i}=a;return function(e,t,n,a){const r=t,o=e.shape.length,i=s.util.parseAxisParam(r,e.shape);let c=i;const l=s.backend_util.getAxesPermutation(c,o),u=null!=l;let d=e;u&&(d=Nx(e,l,a),c=s.backend_util.getInnerMostAxes(c.length,o)),s.backend_util.assertAxesAreInnerMostDims("sum",c,o);const[h,p]=s.backend_util.computeOutAndReduceShapes(d.shape,c);let f=h;n&&(f=s.backend_util.expandShapeToKeepDim(h,i));const m=s.util.sizeFromShape(p),g=bx({inputs:{x:d},attrs:{shape:[s.util.sizeFromShape(e.shape)/m,m]},backend:a}),y=kx(g,(0,s.sumOutType)(e.dtype),"sum",a),b=bx({inputs:{x:y},attrs:{shape:f},backend:a});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(y),u&&a.disposeIntermediateTensorInfo(d),b}(r,o,i,n)}const Cx={kernelName:s.Sum,backendName:"webgl",kernelFunc:Tx};function Ex(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,o=n,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[s[u]];let l;if(o.shouldExecuteOnCPU([r])){const e=o.texData.get(r.dataId).values,t=bv(e,r.shape,r.dtype,s,c);l=o.makeTensorInfo(c,r.dtype);o.texData.get(l.dataId).values=t}else l=Nx(r,s,o);return l}const _x={kernelName:s.Transpose,backendName:"webgl",kernelFunc:Ex},Ax=1e3;function Rx(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:o,bias:i=null,preluActivationWeights:c=null,leakyreluAlpha:l=0,activation:u=null}=e;const d=t.shape.length,h=n.shape.length,p=a?t.shape[d-2]:t.shape[d-1],f=r?n.shape[h-1]:n.shape[h-2],m=a?t.shape[d-1]:t.shape[d-2],g=r?n.shape[h-2]:n.shape[h-1],y=t.shape.slice(0,-2),b=n.shape.slice(0,-2),v=s.util.sizeFromShape(y),x=s.util.sizeFromShape(b),w=s.broadcast_util.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([m,g]);s.util.assert(p===f,(()=>"Error in matMul: inner shapes (".concat(p,") and (")+"".concat(f,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const k=a?[v,p,m]:[v,m,p],S=r?[x,g,f]:[x,f,g],I=bx({inputs:{x:t},backend:o,attrs:{shape:k}}),N=bx({inputs:{x:n},backend:o,attrs:{shape:S}}),T=[I,N],C=Math.max(v,x),E=a?I.shape[1]:I.shape[2],_=null!=i,A=null!=c,R="leakyrelu"===u,F=null!=u?dx(u,!0):null;let D;if((1===m||1===g)&&E>Ax&&!1===(_||A||R||null!=F)){let e=I,t=N;a&&(e=Ex({inputs:{x:I},backend:o,attrs:{perm:[0,2,1]}}),T.push(e)),r&&(t=Ex({inputs:{x:N},backend:o,attrs:{perm:[0,2,1]}}),T.push(t));const n=1===g;let s=e;1!==g&&(s=bx({inputs:{x:e},backend:o,attrs:{shape:[C,E,1]}}),T.push(s));const i=1===g?2:1;let c=t;n&&(c=bx({inputs:{x:t},backend:o,attrs:{shape:[C,1,E]}}),T.push(c));const l=gx({inputs:{a:s,b:c},backend:o});D=Tx({inputs:{x:l},backend:o,attrs:{axis:i,keepDims:!0}}),T.push(l)}else{const e=(0,s.upcastType)(t.dtype,n.dtype),u=new hx(k,S,[C,m,g],a,r,_,F,A,R),d=[I,N];if(null!=i&&d.push(i),A&&d.push(c),R){const e=o.makeTensorInfo([],"float32",s.util.createScalarValue(l,"float32"));d.push(e),T.push(e)}D=o.runWebGLProgram(u,d,e)}const O=bx({inputs:{x:D},backend:o,attrs:{shape:w}});T.push(D);for(const s of T)o.disposeIntermediateTensorInfo(s);return O}const Fx={kernelName:s._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=a;return Rx({a:r,b:s,transposeA:c,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}},Dx="return abs(x);";const Ox={kernelName:s.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=rv(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=(0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Uv(a.shape,Dx):new Ev(a.shape,Dx),n.runWebGLProgram(r,[a],a.dtype)}},Mx=lx({opSnippet:_v+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Lx={kernelName:s.Acos,backendName:"webgl",kernelFunc:Mx},zx=lx({opSnippet:_v+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Bx={kernelName:s.Acosh,backendName:"webgl",kernelFunc:zx},Px="return a + b;",Vx=ux({opSnippet:Px,packedOpSnippet:Px,supportsComplex:!0,cpuKernelImpl:Nb}),Wx={kernelName:s.Add,backendName:"webgl",kernelFunc:Vx};class Ux{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class Gx{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const jx={kernelName:s.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return Jv({inputs:{x:r[0]},backend:a});if(r.length>(0,s.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}const o=r.map((e=>e.dtype)).reduce(((e,t)=>(0,s.upcastType)(e,t))),i=r.map((e=>e.shape)),c=(0,s.env)().getBool("WEBGL_PACK")?new Gx(r[0].shape,i):new Ux(r[0].shape,i);return a.runWebGLProgram(c,r,o)}};const Hx={kernelName:s.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:i}=a,c=r.shape.length,l=s.util.parseAxisParam(o,r.shape);let u=l;const d=s.backend_util.getAxesPermutation(u,c);let h=r;null!=d&&(h=Ex({inputs:{x:r},backend:n,attrs:{perm:d}}),u=s.backend_util.getInnerMostAxes(u.length,c)),s.backend_util.assertAxesAreInnerMostDims("all",u,c);const[p,f]=s.backend_util.computeOutAndReduceShapes(h.shape,u),m=bx({inputs:{x:h},backend:n,attrs:{shape:[-1,s.util.sizeFromShape(f)]}}),g=kx(m,m.dtype,"all",n);let y;if(i){y=bx({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(p,l)}})}else y=bx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}};const qx={kernelName:s.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:i}=a,c=r.shape.length,l=s.util.parseAxisParam(o,r.shape);let u=l;const d=s.backend_util.getAxesPermutation(u,c);let h=r;null!=d&&(h=Ex({inputs:{x:r},backend:n,attrs:{perm:d}}),u=s.backend_util.getInnerMostAxes(u.length,c)),s.backend_util.assertAxesAreInnerMostDims("any",u,c);const[p,f]=s.backend_util.computeOutAndReduceShapes(h.shape,u),m=bx({inputs:{x:h},backend:n,attrs:{shape:[-1,s.util.sizeFromShape(f)]}}),g=kx(m,m.dtype,"any",n);let y;if(i){y=bx({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(p,l)}})}else y=bx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}};class Xx{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class Kx{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,s.util.assert(e.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=e[e.length-1],o=Math.ceil(r/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,l=$y(c),u=wv("coords",c);let d,h;if(1===o){h=c+1;const e=$y(h);d="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(u.join(),", 0);\n        ++").concat(u[c-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(u.join(),", 0);\n        ++").concat(u[c-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(u.join(),", 0);\n        --").concat(u[c-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(u.join(),", 0);\n        --").concat(u[c-2],";")}else h=c,d="\n        ".concat(l," sourceLocR = coords;\n        ++").concat(u[c-1],";\n        ").concat(l," sourceLocG = coords;\n        ++").concat(u[c-2],";\n        ").concat(l," sourceLocA = coords;\n        --").concat(u[c-1],";\n        ").concat(l," sourceLocB = coords;\n        --").concat(u[c-2],";");const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map((e=>"int "+e)),g=wv("sourceLocR",h-1).concat("inIdx.r"),y=wv("sourceLocG",h-1).concat("inIdx.g"),b=wv("sourceLocB",h-1).concat("inIdx.b"),v=wv("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),"),\n                             getBestIndicesAChannel(").concat(v.join(),")));"),k="vec4(\n            getAChannel(".concat(g.join(),"),\n            hasNextCol ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(b.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(v.join(),") : 0.)"),S=a?"":"\n      float getBestIndicesAChannel(".concat(m.join(),") {\n        return getChannel(getBestIndicesA(").concat(p.join(),"),\n                                          vec2(").concat(p.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(m.join(),") {\n        return getChannel(getA(").concat(p.join(),"),\n                               vec2(").concat(p.slice(-2).join(),"));\n      }\n      ").concat(S,"\n      void main() {\n        ").concat(l," coords = getOutputCoords();\n        bool hasNextCol = ").concat(u[c-1]," < ").concat(i[c-1]-1,";\n        bool hasNextRow = ").concat(u[c-2]," < ").concat(i[c-2]-1,";\n        ").concat(d,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(f,", sourceLocG").concat(f,",\n          sourceLocB").concat(f,", sourceLocA").concat(f,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(k,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(w,"\n          vec4 candidate = ").concat(k,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(x,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function Yx(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],o=t.shape[1];null!=a&&(r=a.shape[0],o=a.shape[1]);const i=s.backend_util.computeOptimalWindowSize(o),c={windowSize:i,inSize:o,batchSize:r,outSize:Math.ceil(o/i)},l=new Xx(c,n,null==a),u=[t];null!=a&&u.push(a);const d=e.runWebGLProgram(l,u,"int32");if(1===d.shape[1])return d;const h=Yx(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function Qx(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:t.shape,o=r[r.length-1],i=s.backend_util.computeOptimalWindowSize(o),c=new Kx(r,i,n,null==a),l=null==a?[t]:[t,a],u=e.runWebGLProgram(c,l,"int32");if(u.shape.length===t.shape.length){const a=Qx(e,t,n,u);return e.disposeIntermediateTensorInfo(u),a}return u}function Zx(e,t,n,a){const r=[n];if(s.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!(0,s.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],o=e.texData.get(t.dataId);let i=t;null!==o&&o.isPacked&&(i=e.unpackTensor(t),n.push(i));const[c,l]=s.backend_util.computeOutAndReduceShapes(i.shape,r),u=s.util.sizeFromShape(l),d=bx({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(d);const h=Yx(e,d,a);n.push(h);const p=bx({inputs:{x:h},backend:e,attrs:{shape:c}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return Qx(e,t,a)}const Jx={kernelName:s.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;let i=s.util.parseAxisParam(o,r.shape);const c=s.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=Ex({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=s.backend_util.getInnerMostAxes(i.length,l.shape.length)),s.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const d=Zx(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const $x={kernelName:s.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;let i=s.util.parseAxisParam(o,r.shape);const c=s.backend_util.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=c&&(l=Ex({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(l),i=s.backend_util.getInnerMostAxes(i.length,l.shape.length)),s.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const d=Zx(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},ew=lx({opSnippet:_v+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),tw={kernelName:s.Asin,backendName:"webgl",kernelFunc:ew},nw=lx({opSnippet:_v+"return log(x + sqrt(x * x + 1.0));"}),aw={kernelName:s.Asinh,backendName:"webgl",kernelFunc:nw},rw=lx({opSnippet:_v+"\n  return atan(x);\n"}),sw={kernelName:s.Atan,backendName:"webgl",kernelFunc:rw},ow=ux({opSnippet:Kv+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Qv+"\n  return result;\n"}),iw={kernelName:s.Atan2,backendName:"webgl",kernelFunc:ow},cw=lx({opSnippet:_v+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),lw={kernelName:s.Atanh,backendName:"webgl",kernelFunc:cw};class uw{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),g="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:g:"wR * ".concat(d," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(b="avgValue / max(count, 1.0)");const v=4*Math.floor(s/4),x=s%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(v,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(v,";\n          if (").concat(1===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class dw{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let v="0.0";if(b||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(h,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(d,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let x="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),k=s%4,S="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(v,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(v,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(h,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(d,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(d,", ch)\n              );\n\n              ").concat(S,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                initializationValue\n              );\n\n              ").concat(S,"\n            }\n          }\n        }\n        setOutput(").concat(x,");\n      }\n    ")}}const hw={kernelName:s.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;My(r,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=s.backend_util.computePool2DInfo(r.shape,o,i,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&s.util.arraysEqual(u.inShape,u.outShape))return Jv({inputs:{x:r},backend:n});const d=new uw(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}};const pw={kernelName:s.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l,dataFormat:u}=a,d=s.backend_util.computePool3DInfo(r.shape,o,i,[1,1,1],c,l,u),h=new dw(d,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class fw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.top,u=c-1-e.padInfo.left,d=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(d,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class mw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=u-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(d,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const gw={kernelName:s.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,i=o,{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,h=s.backend_util.computePool3DInfo(i.shape,c,l,[1,1,1],u,d),p=new mw(h);return n.runWebGLProgram(p,[r],i.dtype)}};const yw={kernelName:s.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,i=o;My([r,o],"avgPoolGrad");const{filterSize:c,strides:l,pad:u}=a,d=s.backend_util.computePool2DInfo(i.shape,c,l,1,u),h=new fw(d);return n.runWebGLProgram(h,[r],i.dtype)}};const bw={kernelName:s.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;return Rx({a:r,b:s,transposeA:o,transposeB:i,backend:n})}};class vw{constructor(e,t,n,a,r,o){this.outputShape=[],this.variableNames=["x","mean","variance"],s.backend_util.assertAndGetBroadcastShape(e,t),s.backend_util.assertAndGetBroadcastShape(e,n);let i="0.0";null!=a&&(s.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";null!=r&&(s.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(i,";\n        float scale = ").concat(c,";\n        float inv = scale * inversesqrt(variance + float(").concat(o,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class xw{constructor(e,t,n,a,r,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],s.backend_util.assertAndGetBroadcastShape(e,t),s.backend_util.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=a&&(s.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";null!=r&&(s.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(i,";\n        vec4 scale = ").concat(c,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(o,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const ww={kernelName:s.FusedBatchNorm,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,mean:o,variance:i,offset:c,scale:l}=t;s.util.assert(o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.util.assert(null==c||o.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.util.assert(null==l||o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=a;null==u&&(u=.001);const d=[r,o,i];let h=null;null!=c&&(h=c.shape,d.push(c));let p=null;null!=l&&(p=l.shape,d.push(l));const f=(0,s.env)().getBool("WEBGL_PACK_NORMALIZATION")?new xw(r.shape,o.shape,i.shape,h,p,u):new vw(r.shape,o.shape,i.shape,h,p,u);return n.runWebGLProgram(f,d,d[0].dtype)}};class kw{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=$y(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Sw.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let a;const r=e.map(((e,t)=>"sourceLoc.".concat(Sw[t]," = start[").concat(t,"] + coords.").concat(Sw[t],";")));a="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(r.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const Sw=["x","y","z","w","u","v"];class Iw{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=$y(this.rank),n=wv("coords",this.rank),a=wv("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),s="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),o="\n      result.x = ".concat(s,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(s,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(s,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(s,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map(((e,t)=>"start[".concat(t,"]"))).join(),");"):e.map(((e,t)=>"".concat(a[t]," = ").concat(n[t]," + start[").concat(t,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function Nw(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,size:i}=a,[c,l]=s.slice_util.parseSliceParams(r,o,i);if(s.slice_util.assertParamsValid(r,c,l),0===s.util.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=sv(e.values,c,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),d=s.slice_util.isSliceContinous(r.shape,c,l);if(u||!d){const e=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Iw(l):new kw(l),t=[c];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),o=a.makeTensorInfo(n,e.dtype),i=a.texData.get(o.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let c=s.slice_util.computeFlatOffset(t,s.util.computeStrides(e.shape));r.slice&&(c+=r.slice.flatOffset),i.slice={flatOffset:c,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),o}(r,c,l,n)}const Tw={kernelName:s.Slice,backendName:"webgl",kernelFunc:Nw},Cw={kernelName:s.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,crops:i}=a;s.util.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const c=o.reduce(((e,t)=>e*t)),l=s.backend_util.getReshaped(r.shape,o,c),u=s.backend_util.getPermuted(l.length,o.length),d=s.backend_util.getReshapedPermuted(r.shape,o,c),h=s.backend_util.getSliceBeginCoords(i,o.length),p=s.backend_util.getSliceSize(d,i,o.length),f=[],m=bx({inputs:{x:r},backend:n,attrs:{shape:l}}),g=Ex({inputs:{x:m},backend:n,attrs:{perm:u}}),y=bx({inputs:{x:g},backend:n,attrs:{shape:d}}),b=Nw({inputs:{x:y},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}};const Ew={kernelName:s.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=n.readSync(r.dataId),c=n.readSync(s.dataId),l=Tb(i,c,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,l)}};const _w={kernelName:s.BitwiseAnd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,o=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=(0,s.env)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===i){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[s,o]=Eb(a.shape,r.shape,e,t,a.dtype),i=n.makeTensorInfo(o,a.dtype);return n.texData.get(i.dataId).values=s,i}let c;return c=o?new Zv("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new Yv("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(c,[a,r],a.dtype)}};const Aw={kernelName:s.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=s.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},Rw=ux({opSnippet:"return float(a != b);",cpuKernelImpl:Yb,dtype:"bool"}),Fw={kernelName:s.NotEqual,backendName:"webgl",kernelFunc:Rw};function Dw(e){const{inputs:t,backend:n}=e,{input:a}=t;return Jv({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const Ow={kernelName:s.Real,backendName:"webgl",kernelFunc:Dw},Mw="return float(int(x));";const Lw={kernelName:s.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:o}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===o.dtype)return Jv({inputs:{x:o},backend:a});const t=s.zeros(o.shape),n=e({inputs:{x:o},backend:a,attrs:{dtype:"float32"}}),r=ex({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===o.dtype){const t=Dw({inputs:{input:o},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(t),n}if(!s.util.hasEncodingLoss(o.dtype,i)){const e=Jv({inputs:{x:o},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(a.shouldExecuteOnCPU([o])){const e=a.texData.get(o.dataId).values,[t,n,r]=_b(e,o.shape,o.dtype,i);return a.makeTensorInfo(t,n,r)}if("int32"===i)return function(e,t){const n=new Ev(e.shape,Mw),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(o,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",s.util.getTypedArrayFromDType("bool",1)),t=Rw({inputs:{a:o,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(o.dtype," to ").concat(i))}},zw="return ceil(x);",Bw=lx({opSnippet:zw,packedOpSnippet:zw,cpuKernelImpl:Ab}),Pw={kernelName:s.Ceil,backendName:"webgl",kernelFunc:Bw};class Vw{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Ww{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Uw={kernelName:s.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:o,clipValueMax:i}=a;let c;c=(0,s.env)().getBool("WEBGL_PACK_CLIP")?new Ww(r.shape):new Vw(r.shape);const l=[[o],[i]];return n.runWebGLProgram(c,[r],r.dtype,l)}};class Gw{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function jw(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Hw={kernelName:s.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new Gw(a.shape),o=[jw(a,r.complexTensorInfos.real),jw(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class qw{constructor(e){this.outputShape=[],this.outputShape=s.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t)));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let s=1;s<t.length;s++){const e=t[s-1];n.push("else if (yC < ".concat(t[s],") ")+"setOutput(getT".concat(s,"(yR, yC-").concat(e,"));"))}const a=t.length,r=t[t.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class Xw{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=s.backend_util.computeOutShape(e,t);const n=this.outputShape,a=n.length,r=$y(a),o=wv("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>"T".concat(t)));const c=new Array(e.length-1);c[0]=e[0][t];for(let s=1;s<c.length;s++)c[s]=c[s-1]+e[s][t];const l=i[t],u=i.slice(-2),d=i.join();let h="if (".concat(l," < ").concat(c[0],") {\n        return getChannel(\n            getT0(").concat(d,"), vec2(").concat(u.join(),"));\n        }");for(let s=1;s<c.length;s++){const e=c[s-1];h+="\n        if (".concat(l," < ").concat(c[s],"  && ").concat(l," >= ").concat(c[s-1],") {\n          return getChannel(\n            getT").concat(s,"(").concat(Kw(i,l,e),"),\n            vec2(").concat(Kw(u,l,e),"));\n        }")}const p=c.length,f=c[c.length-1];h+="\n        return getChannel(\n          getT".concat(p,"(").concat(Kw(i,l,f),"),\n          vec2(").concat(Kw(u,l,f),"));"),this.userCode="\n      float getValue(".concat(i.map((e=>"int "+e)),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(o,"), 0., 0., 0.);\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," + 1;\n        if (").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-2]," = ").concat(o[a-2]," + 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," - 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2]," &&\n            ").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(o,");\n        }\n        setOutput(result);\n      }\n    ")}}function Kw(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?"".concat(e," - ").concat(n):e)).join()}function Yw(e){const{inputs:t,backend:n}=e,{input:a}=t;return Jv({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const Qw={kernelName:s.Imag,backendName:"webgl",kernelFunc:Yw};function Zw(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>Dw({inputs:{input:e},backend:n}))),r=e.map((e=>Yw({inputs:{input:e},backend:n}))),s=Zw(a,t,n),o=Zw(r,t,n),i=ex({inputs:{real:s,imag:o},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=s.util.sizeFromShape(e.shape.slice(t));return bx({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),o=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=s.backend_util.computeOutShape(r.map((e=>e.shape)),1),c=1===r[0].shape[0],l=Rb(o,i,a,c),u=s.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,a,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const o=e.filter((e=>s.util.sizeFromShape(e.shape)>0)),i=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(1===o.length){const t=i?new Ev(e[0].shape,Mv):new Uv(e[0].shape,Mv);return n.runWebGLProgram(t,e,a)}const c=(0,s.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>c){const e=[];for(let r=0;r<o.length;r+=c){const a=o.slice(r,r+c);e.push(Zw(a,t,n))}const a=Zw(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(i){const e=new Xw(o.map((e=>e.shape)),t);return n.runWebGLProgram(e,o,a)}const{tensors2D:l,outShape:u}=function(e,t,n){const a=s.backend_util.computeOutShape(e.map((e=>e.shape)),t),r=e.map((e=>bx({inputs:{x:e},attrs:{shape:[-1,s.util.sizeFromShape(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:a}}(o,t,n),d=new qw(l.map((e=>e.shape))),h=n.runWebGLProgram(d,l,a);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=bx({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),p}function Jw(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,o=s.util.parseAxisParam(r,t[0].shape)[0],i=t.map((e=>e.shape));s.backend_util.assertParamsConsistent(i,o);const c=s.backend_util.computeOutShape(t.map((e=>e.shape)),o);if(0===s.util.sizeFromShape(c))return n.makeTensorInfo(c,t[0].dtype,[]);const l=t.filter((e=>s.util.sizeFromShape(e.shape)>0));return 1===l.length?Jv({inputs:{x:l[0]},backend:n}):Zw(l,o,n)}const $w={kernelName:s.Concat,backendName:"webgl",kernelFunc:Jw};class ek{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let v="",x="";n&&(v=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(v,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(d,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(h,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(x,"\n        setOutput(result);\n      }\n    ")}}class tk{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(s,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(d,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class nk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ob(this.outputShape.length);const o=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let s=0;s<u;s++)h+="\n           vec4 xTexelC".concat(2*s,";\n           int xTexelC").concat(2*s,"Ready;\n           vec4 xTexelC").concat(2*s+1,";\n           int xTexelC").concat(2*s+1,"Ready;\n           vec4 xC").concat(s,";");h+="\n     for (int r = 0; r < ".concat(l,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let s=0;s<u;s++)h+="\n           xTexelC".concat(2*s," = vec4(0.0);\n           xTexelC").concat(2*s,"Ready = 0;\n           xTexelC").concat(2*s+1," = vec4(0.0);\n           xTexelC").concat(2*s+1,"Ready = 0;\n           xC").concat(s," = vec4(0.0);");h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let g=0;g<(d+1)/2;g++){const t=2*g;if(h+="\n           xC = xCCorner + ".concat(t*c,";\n           "),1===i){if(t<u&&(o%2===1?(h+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),h+=1===c&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):h+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<u)){const e=o%2===0?s.util.nearestLargerEven(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(h+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),h+=c>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):h+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<u&&(o%2===1?(h+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<u&&(h+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(h+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<u&&(h+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<u&&(h+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<u&&(h+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(p,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(h,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(m,"\n         ").concat(f,"\n         setOutput(result);\n       }\n     ")}}class ak{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ob(this.outputShape.length);const{dataFormat:n}=t,a=zy(),r="channelsLast"===n,s=r?1:2,o=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let c="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)c+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(s,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(r,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function rk(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function sk(e){let{x:t,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const u=t.shape,d=r.texData.get(t.dataId),h=a.inChannels,p=u[0]*u[1]*u[2],f=a.outChannels,m="channelsLast"===a.dataFormat;let g;const y=[];if(null!=i){const e=rk(i.shape,m);null!=e&&(i=bx({inputs:{x:i},backend:r,attrs:{shape:e}}),y.push(i))}if(null!=o){const e=rk(o.shape,m);null!=e&&(o=bx({inputs:{x:o},backend:r,attrs:{shape:e}}),y.push(o))}if(!((1===p||1===f)&&h>Ax)&&d.isPacked&&m&&null!=d.texture&&u[2]%2!==0&&s.util.arraysEqual(d.shape.slice(-3),u.slice(-3))){const e=u[0]*u[1]*(u[2]+1),h={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},p=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,s.util.assert(Ey(d.shape,h.shape),(()=>"packed reshape ".concat(d.shape," to ").concat(h.shape," isn't free")));const f=bx({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});y.push(f);const m=Rx({a:h,b:f,backend:r,transposeA:false,transposeB:false,bias:o,activation:l,preluActivationWeights:i,leakyreluAlpha:c}),b=r.texData.get(m.dataId);s.util.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),d.shape=p,b.shape=a.outShape,g=Jv({inputs:{x:m},backend:r}),g.shape=a.outShape,y.push(m)}else{const e=a.outHeight*a.outWidth,s=bx({inputs:{x:t},backend:r,attrs:{shape:m?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),u=bx({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),d=Rx({a:m?s:u,b:m?u:s,transposeA:!m,transposeB:false,backend:r,bias:o,activation:l,preluActivationWeights:i,leakyreluAlpha:c});g=bx({inputs:{x:d},backend:r,attrs:{shape:a.outShape}}),y.push(s),y.push(u),y.push(d)}for(const s of y)r.disposeIntermediateTensorInfo(s);return g}function ok(e){let{x:t,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const{filterWidth:u,filterHeight:d,inChannels:h,outWidth:p,outHeight:f,dataFormat:m}=a,g="channelsLast"===m,y=u*d*h,b=f*p,v=[a.batchSize,y,b],x=[];if(null!=i){const e=rk(i.shape,g);null!=e&&(i=bx({inputs:{x:i},backend:r,attrs:{shape:e}}),x.push(i))}if(null!=o){const e=rk(o.shape,g);null!=e&&(o=bx({inputs:{x:o},backend:r,attrs:{shape:e}}),x.push(o))}const w=bx({inputs:{x:n},backend:r,attrs:{shape:[1,y,s.util.sizeFromShape(n.shape)/y]}});x.push(w);const k=new ak(v,a),S=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],I=r.runWebGLProgram(k,[t],"float32",S),N=bx({inputs:{x:I},backend:r,attrs:{shape:v}});x.push(I),x.push(N);const T=null!=o,C=null!=i,E="leakyrelu"===l,_=l?dx(l,!0):null,A=new hx(g?N.shape:w.shape,g?w.shape:N.shape,g?[a.batchSize,b,a.outChannels]:[a.batchSize,a.outChannels,b],!0,!1,T,_,C,E),R=g?[N,w]:[w,N];if(o&&R.push(o),C&&R.push(i),E){const e=r.makeTensorInfo([],"float32",s.util.createScalarValue(c,"float32"));R.push(e),x.push(e)}const F=r.runWebGLProgram(A,R,"float32"),D=bx({inputs:{x:F},backend:r,attrs:{shape:a.outShape}});x.push(F);for(const s of x)r.disposeIntermediateTensorInfo(s);return D}const ik={kernelName:s.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:i,pad:c,dataFormat:l,dilations:u,dimRoundingMode:d}=a,h=s.backend_util.convertConv2DDataFormat(l),p=s.backend_util.computeConv2DInfo(r.shape,o.shape,i,u,c,d,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&(0,s.env)().getBool("WEBGL_EXP_CONV")){const e=new nk(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];f=n.runWebGLProgram(e,[r,o],"float32",t)}else if((0,s.env)().getBool("WEBGL_CONV_IM2COL"))f=ok({x:r,filter:o,convInfo:p,backend:n});else{const e=new ek(p);f=n.runWebGLProgram(e,[r,o],"float32")}else f=sk({x:r,filter:o,convInfo:p,backend:n});const m=bx({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class ck{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class lk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=s?1:2,l=s?2:3,u=s?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(s,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class uk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(s,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class dk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const hk={kernelName:s.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:i,pad:c,dataFormat:l,dimRoundingMode:u,filterShape:d}=a,h=s.backend_util.convertConv2DDataFormat(l),p=s.backend_util.computeConv2DInfo(r.shape,d,i,1,c,u,!1,h),f=new ck(p);return n.runWebGLProgram(f,[r,o],"float32")}};class pk{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=ob(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const fk={kernelName:s.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{inputShape:i,strides:c,pad:l,dataFormat:u,dimRoundingMode:d}=a,h=s.backend_util.convertConv2DDataFormat(u),p=s.backend_util.computeConv2DInfo(i,o.shape,c,1,l,d,!1,h);if((0,s.env)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[p.strideHeight,p.strideWidth]],t=new pk(p);return n.runWebGLProgram(t,[r,o],"float32",e)}{const e=new lk(p);return n.runWebGLProgram(e,[r,o],"float32")}}};const mk={kernelName:s.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:i,pad:c,dilations:l}=a,u=s.backend_util.computeConv3DInfo(r.shape,o.shape,i,l,c),d=new tk(u);return n.runWebGLProgram(d,[r,o],"float32")}};const gk={kernelName:s.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:i,pad:c,filterShape:l}=a,u=s.backend_util.computeConv3DInfo(r.shape,l,i,1,c),d=new uk(u);return n.runWebGLProgram(d,[r,o],"float32")}};const yk={kernelName:s.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{pad:i,strides:c,inputShape:l}=a,u=s.backend_util.computeConv3DInfo(l,o.shape,c,1,i),d=new dk(u);return n.runWebGLProgram(d,[r,o],"float32")}},bk=lx({opSnippet:cx+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Qv,"\n  return result;\n")}),vk={kernelName:s.Cos,backendName:"webgl",kernelFunc:bk},xk=lx({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),wk={kernelName:s.Cosh,backendName:"webgl",kernelFunc:xk};class kk{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,c]=e,[l]=t,[u,d]=n;this.outputShape=[l,u,d,c];const h="bilinear"===a?1:0,[p,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[m,g,y]=u>1?["".concat((o-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[b,v,x]=d>1?["".concat((i-1)/(d-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(v,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(x,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(h," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const Sk={kernelName:s.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=a,u=new kk(r.shape,s.shape,i,c,l);return n.runWebGLProgram(u,[r,s,o],"float32")}};var Ik;!function(e){e.Prod="*",e.Sum="+"}(Ik||(Ik={}));class Nk{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,s=this.op===Ik.Prod?"1.0":"0.0",o=n?s:"getX(".concat(Tk(r,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat($y(r)," coords = getOutputCoords();\n        int end = ").concat(Ck(r,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(Ck(r,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(Tk(r,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function Tk(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function Ck(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function Ek(e,t,n,a,r,o){const i=t.shape.length,c=s.backend_util.getAxesPermutation([a],i);let l=t;null!=c&&(l=Ex({inputs:{x:t},backend:n,attrs:{perm:c}}));const u=s.backend_util.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const d=l.shape[u];let h=Jv({inputs:{x:l},backend:n});for(let s=0;s<=Math.ceil(Math.log2(d))-1;s++){const t=new Nk(e,l.shape,!1,o),a=[[s]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const t=new Nk(e,l.shape,r,o),a=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=c){const e=Ex({inputs:{x:h},backend:n,attrs:{perm:s.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const _k={kernelName:s.Cumprod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return Ek(Ik.Prod,r,n,s,o,i)}};const Ak={kernelName:s.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return Ek(Ik.Sum,r,n,s,o,i)}};const Rk={kernelName:s.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=Tb(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(s),a=Cb(e,t,o,i);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class Fk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Dk={kernelName:s.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a,i=r.shape[0],c=("NHWC"===o?r.shape[1]:r.shape[2])*s,l=("NHWC"===o?r.shape[2]:r.shape[3])*s,u=("NHWC"===o?r.shape[3]:r.shape[1])/(s*s),d=new Fk("NHWC"===o?[i,c,l,u]:[i,u,c,l],s,o);return n.runWebGLProgram(d,[r],r.dtype)}};class Ok{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ob(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(s,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class Mk{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ob(this.outputShape.length);const o=e.outChannels/e.inChannels,i=e.padInfo.left,c=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,h=d;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let s=0;s<d;s++)p+="\n          vec4 xTexelC".concat(2*s,";\n          int xTexelC").concat(2*s,"Ready;\n          vec4 xTexelC").concat(2*s+1,";\n          int xTexelC").concat(2*s+1,"Ready;\n          vec4 xC").concat(s,";");p+="\n    for (int r = 0; r < ".concat(u,"; r++) {\n      ");for(let s=0;s<d;s++)p+="\n          xTexelC".concat(2*s," = vec4(0.0);\n          xTexelC").concat(2*s,"Ready = 0;\n          xTexelC").concat(2*s+1," = vec4(0.0);\n          xTexelC").concat(2*s+1,"Ready = 0;\n          xC").concat(s," = vec4(0.0);");p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(h+1)/2;y++){const e=2*y;if(p+="\n          xC = xCCorner + ".concat(e*l,";\n          "),1===c){if(e<d&&(i%2===1?(p+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),p+=1===l&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):p+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<d)){const t=i%2===0?s.util.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(p+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),p+=l>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):p+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<d&&(i%2===1?(p+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<d&&(p+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(p+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<d&&(p+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<d&&(p+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<d&&(p+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(f,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(o,";\n        int q = d2 - d1 * ").concat(o,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(p,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(g,"\n        ").concat(m,"\n        setOutput(result);\n      }\n    ")}}const Lk={kernelName:s.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:i,pad:c,dilations:l,dimRoundingMode:u}=a;let d=l;null==d&&(d=[1,1]),s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,d),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(d,"'")));const h=s.backend_util.computeConv2DInfo(r.shape,o.shape,i,d,c,u,!0);let p;p=(0,s.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new Mk(h):new Ok(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[r,o],"float32",f)}};class zk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(s," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Bk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Pk={kernelName:s.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:i,dilations:c,pad:l,dimRoundingMode:u,filterShape:d}=a,h=s.backend_util.computeConv2DInfo(r.shape,d,i,c,l,u,!0),p=new zk(h);return n.runWebGLProgram(p,[r,o],"float32")}};const Vk={kernelName:s.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{strides:i,dilations:c,pad:l,dimRoundingMode:u,inputShape:d}=a,h=s.backend_util.computeConv2DInfo(d,o.shape,i,c,l,u,!0),p=new Bk(h);return n.runWebGLProgram(p,[r,o],"float32")}};class Wk{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Uk={kernelName:s.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],o=s.util.sizeFromShape(a.shape),i=bx({inputs:{x:a},backend:n,attrs:{shape:[o]}}),c=new Wk(o),l=n.runWebGLProgram(c,[i],i.dtype),u=bx({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class Gk{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:l}=e,{top:u,left:d}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(d,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const jk={kernelName:s.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:i,pad:c,dilations:l}=a,u=s.backend_util.computeDilation2DInfo(r.shape,o.shape,i,c,"NHWC",l);let d;const h=new Gk(u);d=n.runWebGLProgram(h,[r,o],"float32");const p=bx({inputs:{x:d},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(d),p}};const Hk={kernelName:s.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,o=t,{allDims:i,summedDims:c,idDims:l}=s.backend_util.decodeEinsumEquation(r,o.length);s.backend_util.checkEinsumDimSizes(i.length,l,o);const{path:u,steps:d}=s.backend_util.getEinsumComputePath(c,l),h=d.length;let p=null,f=i.length;const m=[];for(let g=0;g<h;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:a}=s.backend_util.getEinsumPermutation(f,l[e]);let r;s.backend_util.isIdentityPermutation(t)?r=o[e]:(r=Ex({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),m.push(r));const i=r.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);s.util.arraysEqual(r.shape,i)||(r=bx({inputs:{x:r},backend:n,attrs:{shape:i}}),m.push(r)),null===p?p=r:(p=gx({inputs:{a:r,b:p},backend:n}),m.push(p))}g<h-1&&(u[g]>=0&&(p=Tx({inputs:{x:p},backend:n,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),m.push(p)),f--)}for(const s of m)s!==p&&n.disposeIntermediateTensorInfo(s);return p}},qk=lx({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Xk={kernelName:s.Elu,backendName:"webgl",kernelFunc:qk},Kk={kernelName:s.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,o=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zv("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new Yv("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(o,[a,r],a.dtype)}},Yk=ux({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Fb}),Qk={kernelName:s.Equal,backendName:"webgl",kernelFunc:Yk},Zk=lx({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(s.backend_util.ERF_P,";\n  float a1 = ").concat(s.backend_util.ERF_A1,";\n  float a2 = ").concat(s.backend_util.ERF_A2,";\n  float a3 = ").concat(s.backend_util.ERF_A3,";\n  float a4 = ").concat(s.backend_util.ERF_A4,";\n  float a5 = ").concat(s.backend_util.ERF_A5,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),Jk={kernelName:s.Erf,backendName:"webgl",kernelFunc:Zk},$k=lx({opSnippet:cx+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Db,dtype:"float32"}),eS={kernelName:s.Exp,backendName:"webgl",kernelFunc:$k};function tS(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:o}=t,i=o.shape.length,c=o.shape.slice();let l=r;return r<0&&(s.util.assert(-(i+1)<=r,(()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]"))),l=i+r+1),c.splice(l,0,1),bx({inputs:{x:o},backend:a,attrs:{shape:c}})}const nS={kernelName:s.ExpandDims,backendName:"webgl",kernelFunc:tS},aS="return exp(x) - 1.0;",rS=lx({opSnippet:aS,packedOpSnippet:aS,cpuKernelImpl:Ob}),sS={kernelName:s.Expm1,backendName:"webgl",kernelFunc:rS};class oS{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),s=n?"".concat(a,".0"):"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function iS(e,t,n){const a=n.texData.get(e.dataId),r=s.util.sizeFromShape(e.shape),o=e.shape[e.shape.length-1],i=bx({inputs:{x:e},backend:n,attrs:{shape:[r/o,o]}}),c=i.shape,l=new oS("real",c,t),u=new oS("imag",c,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:c},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:c}],h=n.runWebGLProgram(l,d,"float32"),p=n.runWebGLProgram(u,d,"float32"),f=ex({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=bx({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const cS={kernelName:s.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return iS(a,!1,n)}};class lS{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function uS(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:o}=n;if(o=o||s.util.inferDtype(r),"string"===o){const e=s.util.getArrayFromDType(o,s.util.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,o,e)}{const e=new lS(a,r),n=[[r]];return t.runWebGLProgram(e,[],o,n)}}const dS={kernelName:s.Fill,backendName:"webgl",kernelFunc:uS};class hS{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const pS={kernelName:s.FlipLeftRight,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,s=new hS(a.shape);return r.runWebGLProgram(s,[a],a.dtype)}},fS="return floor(x);",mS=lx({opSnippet:fS,packedOpSnippet:fS,cpuKernelImpl:Mb}),gS={kernelName:s.Floor,backendName:"webgl",kernelFunc:mS},yS=ux({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),bS={kernelName:s.FloorDiv,backendName:"webgl",kernelFunc:yS};class vS{constructor(e){this.variableNames=["A"];const t=zy(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class xS{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=zy(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const wS={kernelName:s.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:o}=a,i="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,c="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[u,l],h=[u,l,o];if(c||i){const e=(0,s.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=kS&&e===SS||(SS=e,kS=document.createElement("canvas").getContext("2d",{willReadFrequently:SS})),kS.canvas.width=l,kS.canvas.height=u,kS.drawImage(r,0,0,l,u),r=kS.canvas}const p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=sy.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const f=(0,s.env)().getBool("WEBGL_PACK")?new xS(h):new vS(h),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let kS,SS=(0,s.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const IS={kernelName:s.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,bias:i,preluActivationWeights:c}=t,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=a,g=s.backend_util.convertConv2DDataFormat(d),y=s.backend_util.computeConv2DInfo(r.shape,o.shape,l,h,u,p,!1,g);let b;const v=[],x=null!=i,w=null!=c,k="leakyrelu"===f,S=()=>{const e=[r,o],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=bx({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return v.push(t),t}return e};if(x&&e.push(t(i,d)),w&&e.push(t(c,d)),k){const t=n.makeTensorInfo([],"float32",s.util.createScalarValue(m,"float32"));e.push(t),v.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&(0,s.env)().getBool("WEBGL_EXP_CONV")){const e=f?dx(f,!0):null,t=new nk(y,x,e,w,k),a=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],r=S();b=n.runWebGLProgram(t,r,"float32",a)}else if((0,s.env)().getBool("WEBGL_CONV_IM2COL"))b=ok({x:r,filter:o,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});else{const e=f?dx(f,!1):null,t=new ek(y,x,e,w,k),a=S();b=n.runWebGLProgram(t,a,"float32")}else b=sk({x:r,filter:o,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});const I=bx({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return v.push(b),v.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};const NS={kernelName:s.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,bias:i,preluActivationWeights:c}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a,m=[];let g=d;null==g&&(g=[1,1]),s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(l,g),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(l," and dilations '").concat(g,"'")));const y=s.backend_util.computeConv2DInfo(r.shape,o.shape,l,g,u,h,!0),b=(0,s.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,v=p?dx(p,b):null,x=[r,o],w=null!=i,k=null!=c,S="leakyrelu"===p;if(w&&x.push(i),k&&x.push(c),S){const e=n.makeTensorInfo([],"float32",s.util.createScalarValue(f,"float32"));x.push(e),m.push(e)}let I;I=b?new Mk(y,w,v,k,S):new Ok(y,w,v,k,S);const N=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],T=n.runWebGLProgram(I,x,"float32",N);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}};class TS{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=$y(n.length);let s="\n    int index;";for(let o=0;o<this.sliceDim;o++)s+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(s,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const CS={kernelName:s.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,o=r.shape,i=o[o.length-1],c=s.util.sizeFromShape(a.shape),[l,u,d,h]=s.backend_util.prepareAndValidate(a,r),p=bx({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),f=bx({inputs:{x:a},backend:n,attrs:{shape:[s.util.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),s=Lb(e,t,a.dtype,u,i,d,h,a.shape,c);return n.makeTensorInfo(l,a.dtype,s.values)}const m=new TS(i,h,[u,d],a.shape),g=n.runWebGLProgram(m,[f,p],f.dtype),y=bx({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class ES{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=$y(this.rank),a=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e.length;r++)2===r?a.push("index"):a.push("".concat(n[r]));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function _S(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:o}=t,{axis:i,batchDims:c}=a,l=s.util.parseAxisParam(i,r.shape)[0];if((0,s.env)().get("DEBUG")){const e=n.readSync(o.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const a=e[n];s.util.assert(a<=t-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(t-1,"]")))}}const u=s.backend_util.segment_util.collectGatherOpShapeInfo(r,o,l,c),d=s.util.sizeFromShape(o.shape),h=[],p=bx({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=bx({inputs:{x:o},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});h.push(p),h.push(f);const m=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,o])||"string"===r.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),a=zb(t,e,m);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}const g=new ES(p.shape,m),y=n.runWebGLProgram(g,[p,f],p.dtype);h.push(y);const b=bx({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const AS={kernelName:s.GatherV2,backendName:"webgl",kernelFunc:_S},RS=ux({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Bb,dtype:"bool"}),FS={kernelName:s.Greater,backendName:"webgl",kernelFunc:RS},DS=ux({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Pb}),OS={kernelName:s.GreaterEqual,backendName:"webgl",kernelFunc:DS};const MS={kernelName:s.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return iS(a,!0,n)}},LS=lx({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),zS={kernelName:s.IsFinite,backendName:"webgl",kernelFunc:LS},BS=lx({opSnippet:"return float(isinf(x));",dtype:"bool"}),PS={kernelName:s.IsInf,backendName:"webgl",kernelFunc:BS},VS=lx({opSnippet:"return float(isnan(x));",dtype:"bool"}),WS={kernelName:s.IsNan,backendName:"webgl",kernelFunc:VS},US=ux({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Vb,dtype:"bool"}),GS={kernelName:s.Less,backendName:"webgl",kernelFunc:US},jS=ux({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Wb,dtype:"bool"}),HS={kernelName:s.LessEqual,backendName:"webgl",kernelFunc:jS};const qS={kernelName:s.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=Ub(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},XS=lx({opSnippet:cx+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Gb}),KS={kernelName:s.Log,backendName:"webgl",kernelFunc:XS},YS=lx({opSnippet:cx+"\n  return log(1.0 + x);\n"}),QS={kernelName:s.Log1p,backendName:"webgl",kernelFunc:YS},ZS=ux({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),JS={kernelName:s.LogicalAnd,backendName:"webgl",kernelFunc:ZS},$S=lx({opSnippet:"return float(!(x >= 1.0));"}),eI={kernelName:s.LogicalNot,backendName:"webgl",kernelFunc:$S},tI=ux({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),nI={kernelName:s.LogicalOr,backendName:"webgl",kernelFunc:tI};class aI{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s,"; j <= ").concat(s,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class rI{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s,"; j <= ").concat(s,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const sI={kernelName:s.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:o,bias:i,alpha:c,beta:l}=a,u=(0,s.env)().getBool("WEBGL_PACK_NORMALIZATION")?new rI(r.shape,o,i,c,l):new aI(r.shape,o,i,c,l);return n.runWebGLProgram(u,[r],r.dtype)}};class oI{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const iI={kernelName:s.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a,d=new oI(r.shape,i,c,l,u);return n.runWebGLProgram(d,[r,s,o],r.dtype)}};function cI(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:o,keepDims:i}=a,c=r.shape.length,l=s.util.parseAxisParam(o,r.shape);let u=l;const d=s.backend_util.getAxesPermutation(u,c),h=null!=d,p=n.shouldExecuteOnCPU([r]);let f=r;if(h){if(p){const e=n.texData.get(f.dataId).values,t=new Array(c);for(let n=0;n<t.length;n++)t[n]=r.shape[d[n]];const a=bv(e,r.shape,r.dtype,d,t);f=n.makeTensorInfo(t,r.dtype);n.texData.get(f.dataId).values=a}else f=Nx(r,d,n);u=s.backend_util.getInnerMostAxes(u.length,c)}s.backend_util.assertAxesAreInnerMostDims("max",u,c);const[m,g]=s.backend_util.computeOutAndReduceShapes(f.shape,u);let y,b=m;if(i&&(b=s.backend_util.expandShapeToKeepDim(m,l)),p){const e=n.texData.get(f.dataId).values,t=jb(e,s.util.sizeFromShape(g),b,r.dtype);y=n.makeTensorInfo(b,r.dtype);n.texData.get(y.dataId).values=t}else y=function(e,t,n,a){const r=s.util.sizeFromShape(t),o=bx({inputs:{x:e},attrs:{shape:[s.util.sizeFromShape(e.shape)/r,r]},backend:a}),i=kx(o,e.dtype,"max",a),c=bx({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(i),c}(f,g,b,n);return h&&n.disposeIntermediateTensorInfo(f),y}const lI={kernelName:s.Max,backendName:"webgl",kernelFunc:cI},uI=ux({opSnippet:Kv+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Qv+"\n  return result;\n",cpuKernelImpl:Hb}),dI={kernelName:s.Maximum,backendName:"webgl",kernelFunc:uI};const hI={kernelName:s.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;My(r,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'")));const u=s.backend_util.computePool2DInfo(r.shape,o,i,1,c,l);if(1===u.filterWidth&&1===u.filterHeight&&s.util.arraysEqual(u.inShape,u.outShape))return Jv({inputs:{x:r},backend:n});const d=new uw(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}};const pI={kernelName:s.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,d=s.backend_util.computePool3DInfo(r.shape,o,i,[1,1,1],c,u,l),h=new dw(d,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class fI{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=s-1-e.padInfo.left,c=r*s-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(s," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class mI{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=c-1-e.padInfo.top,h=l-1-e.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(d,", ").concat(h,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const gI={kernelName:s.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,i=o,{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,h=s.backend_util.computePool3DInfo(i.shape,c,l,[1,1,1],u,d),p=new dw(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new mI(h),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const yI={kernelName:s.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o,output:i}=t,c=o;My([o,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=a,p=s.backend_util.computePool2DInfo(c.shape,l,u,1,d,h),f=new uw(p,"max",!0),m=n.runWebGLProgram(f,[c],c.dtype),g=new fI(p),y=n.runWebGLProgram(g,[r,m],c.dtype);return n.disposeIntermediateTensorInfo(m),y}};const bI={kernelName:s.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:o,strides:i,pad:c,includeBatchInIndex:l}=n,u=a;s.util.assert(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const d=[1,1];s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,d),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(d,"'")));const h=s.backend_util.computePool2DInfo(r.shape,o,i,d,c),[p,f]=function(e,t,n,a){let r=new uw(n,"max",!1);const s=a.runWebGLProgram(r,[e],"float32");return r=new uw(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(r,l,h,u);return[p,f]}};const vI={kernelName:s.Mean,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{keepDims:o,axis:i}=n,c=a,l=r.shape.length,u=s.util.parseAxisParam(i,r.shape);let d=u;const h=s.backend_util.getAxesPermutation(d,l),p=null!=h,f=c.shouldExecuteOnCPU([r]),m=[];let g=r;if(p){if(f){const e=c.texData.get(g.dataId).values,t=new Array(l);for(let a=0;a<t.length;a++)t[a]=r.shape[h[a]];const n=bv(e,r.shape,r.dtype,h,t);g=c.makeTensorInfo(t,r.dtype);c.texData.get(g.dataId).values=n}else g=Nx(r,h,c);m.push(g),d=s.backend_util.getInnerMostAxes(d.length,l)}s.backend_util.assertAxesAreInnerMostDims("sum",d,l);const[y,b]=s.backend_util.computeOutAndReduceShapes(g.shape,d);let v=y;o&&(v=s.backend_util.expandShapeToKeepDim(y,u));const x=function(e,t,n,a){const r=s.util.sizeFromShape(t),o=bx({inputs:{x:e},attrs:{shape:[s.util.sizeFromShape(e.shape)/r,r]},backend:a}),i=kx(o,"float32","mean",a),c=bx({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(i),c}(g,b,v,c);for(const s of m)c.disposeIntermediateTensorInfo(s);return x}};const xI={kernelName:s.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:i}=a,c=r.shape.length,l=s.util.parseAxisParam(o,r.shape);let u=l;const d=s.backend_util.getAxesPermutation(u,c);let h=r;null!=d&&(h=Ex({inputs:{x:r},backend:n,attrs:{perm:d}}),u=s.backend_util.getInnerMostAxes(u.length,r.shape.length)),s.backend_util.assertAxesAreInnerMostDims("min",u,c);const[p,f]=s.backend_util.computeOutAndReduceShapes(h.shape,u),m=bx({inputs:{x:h},backend:n,attrs:{shape:[-1,s.util.sizeFromShape(f)]}}),g=kx(m,m.dtype,"min",n);let y;if(i){y=bx({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(p,l)}})}else y=bx({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(h),y}},wI=ux({opSnippet:Kv+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Qv+"\n  return result;\n",cpuKernelImpl:qb}),kI={kernelName:s.Minimum,backendName:"webgl",kernelFunc:wI};class SI{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=$y(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class II{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=$y(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=wv("rc",a),c=wv("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d="reflect"===n?0:1;let h="";if(1===a){const e="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(d,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(d,";\n        }\n        source -= start;\n      ");h="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const e="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(d,") +\n                gte * ((end - 1) * 2 - source + ").concat(d,");\n        source -= start;\n      ");h="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(h,"\n        setOutput(result);\n      }\n    ")}}const NI={kernelName:s.MirrorPad,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{paddings:o,mode:i}=a,c=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new II(r.shape,o,i):new SI(r.shape,o,i);return n.runWebGLProgram(c,[r],r.dtype)}},TI=ux({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Qv+"\n  return result;\n"}),CI={kernelName:s.Mod,backendName:"webgl",kernelFunc:TI};class EI{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const _I=ux({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),AI={kernelName:s.RealDiv,backendName:"webgl",kernelFunc:_I},RI="return a - b;",FI=ux({opSnippet:RI,packedOpSnippet:RI,supportsComplex:!0,cpuKernelImpl:mv}),DI={kernelName:s.Sub,backendName:"webgl",kernelFunc:FI};function OI(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:o}=a,i=s.util.parseAxisParam([o],r.shape),c=cI({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=s.backend_util.expandShapeToKeepDim(c.shape,i),u=bx({inputs:{x:c},backend:n,attrs:{shape:l}}),d=FI({inputs:{a:r,b:u},backend:n}),h=$k({inputs:{x:d},backend:n}),p=Tx({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),f=bx({inputs:{x:p},backend:n,attrs:{shape:l}}),m=_I({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const MI={kernelName:s.Softmax,backendName:"webgl",kernelFunc:OI};const LI={kernelName:s.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a,c=i?r:OI({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],d=new EI(l,u,s),h=[[o]],p=n.runWebGLProgram(d,[c],"int32",h);return i||n.disposeIntermediateTensorInfo(c),p}},zI=_v+"\n  return -x;\n";const BI={kernelName:s.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=Kb(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=(0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Uv(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Ev(a.shape,zI),n.runWebGLProgram(r,[a],a.dtype)}},PI=s.kernel_impls.nonMaxSuppressionV3Impl;const VI={kernelName:s.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l}=a,u=n.readSync(r.dataId),d=n.readSync(o.dataId),{selectedIndices:h}=PI(u,d,i,c,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},WI=s.kernel_impls.nonMaxSuppressionV4Impl;const UI={kernelName:s.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l,padToMaxOutputSize:u}=a,d=n.readSync(r.dataId),h=n.readSync(o.dataId),{selectedIndices:p,validOutputs:f}=WI(d,h,i,c,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},GI=s.kernel_impls.nonMaxSuppressionV5Impl;const jI={kernelName:s.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:i,iouThreshold:c,scoreThreshold:l,softNmsSigma:u}=a,d=n.readSync(r.dataId),h=n.readSync(o.dataId),p=i,f=c,m=l,g=u,{selectedIndices:y,selectedScores:b}=GI(d,h,p,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class HI{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const qI={kernelName:s.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:o,depth:i,onValue:c,offValue:l}=a,u=s.util.sizeFromShape(r.shape),d=new HI(u,i,c,l),h=bx({inputs:{x:r},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(d,[h],o);n.disposeIntermediateTensorInfo(h);const f=bx({inputs:{x:p},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(p),f}};function XI(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=Dw({inputs:{input:a},backend:n}),t=XI({inputs:{x:e},backend:n}),r=Yw({inputs:{input:a},backend:n}),s=XI({inputs:{x:r},backend:n}),o=ex({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return uS({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const KI={kernelName:s.ZerosLike,backendName:"webgl",kernelFunc:XI};const YI={kernelName:s.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=Dw({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=Yw({inputs:{input:r},backend:a}),o=XI({inputs:{x:s},backend:a}),i=ex({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return uS({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const QI={kernelName:s.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return tS({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const o=t[0].shape,i=t[0].dtype;t.forEach((e=>{s.util.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),s.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=[],l=Jw({inputs:t.map((e=>{const t=tS({inputs:{input:e},backend:n,attrs:{dim:r}});return c.push(t),t})),backend:n,attrs:{axis:r}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class ZI{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=$y(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class JI{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=$y(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=wv("rc",a),c=wv("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],h=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===a?2:4;f<m;f++)p+="\n        ".concat(d[f],"\n        if (").concat(h,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const $I=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:o,constantValue:i}=a;if(0===s.util.sizeFromShape(r.shape)){const e=o.map(((e,t)=>e[0]+r.shape[t]+e[1]));return uS({backend:n,attrs:{shape:e,value:i,dtype:r.dtype}})}const c=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JI(r.shape,o,i):new ZI(r.shape,o,i),l=[[i]];return n.runWebGLProgram(c,[r],r.dtype,l)},eN={kernelName:s.PadV2,backendName:"webgl",kernelFunc:$I},tN=ux({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Qv+"\n  return result;\n"}),nN={kernelName:s.Pow,backendName:"webgl",kernelFunc:tN};const aN={kernelName:s.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:i}=a,c=r.shape.length,l=[],u=s.util.parseAxisParam(o,r.shape);let d=u;const h=s.backend_util.getAxesPermutation(d,c);let p,f=r;if(null!=h&&(f=Ex({inputs:{x:r},backend:n,attrs:{perm:h}}),d=s.backend_util.getInnerMostAxes(d.length,c),l.push(f)),s.backend_util.assertAxesAreInnerMostDims("prod",d,c),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:a,outDtype:r}=Qb(f.shape,f.dtype,e,d);p=n.makeTensorInfo(a,r,t)}else{const[e,t]=s.backend_util.computeOutAndReduceShapes(f.shape,d),a=s.util.sizeFromShape(t),o=bx({inputs:{x:f},backend:n,attrs:{shape:[-1,a]}}),i=kx(o,(0,s.sumOutType)(r.dtype),"prod",n);p=bx({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(o),l.push(i)}if(i){l.push(p);const e=s.backend_util.expandShapeToKeepDim(p.shape,u);p=bx({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const rN={kernelName:s.RaggedGather,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.readSync(e.dataId))),l=r.map((e=>e.shape)),u=n.readSync(s.dataId),d=n.readSync(o.dataId),[h,p,f]=Zb(c,l,u,s.shape,s.dtype,d,o.shape,i),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}};const sN={kernelName:s.RaggedRange,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=Jb(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};const oN={kernelName:s.RaggedTensorToTensor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),d=n.readSync(o.dataId),h=i.map((e=>n.readSync(e.dataId))),p=i.map((e=>e.shape)),[f,m]=$b(l,r.shape,u,s.shape,s.dtype,d,o.shape,h,p,c);return n.makeTensorInfo(f,s.dtype,m)}},iN=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:o}=n,i=ev(a,r,s,o);return t.makeTensorInfo([i.length],o,i)},cN={kernelName:s.Range,backendName:"webgl",kernelFunc:iN},lN=lx({opSnippet:"return 1.0 / x;"}),uN={kernelName:s.Reciprocal,backendName:"webgl",kernelFunc:lN},dN=lx({opSnippet:_v+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),hN={kernelName:s.Relu,backendName:"webgl",kernelFunc:dN},pN=lx({opSnippet:_v+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),fN={kernelName:s.Relu6,backendName:"webgl",kernelFunc:pN};class mN{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class gN{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const yN={kernelName:s.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:i,size:c}=a,[l,u]=c,d=(0,s.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new gN(r.shape,l,u,o,i):new mN(r.shape,l,u,o,i);return n.runWebGLProgram(d,[r],"float32")}};class bN{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],d=1/l,h=1/u,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const vN={kernelName:s.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new bN(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class xN{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let h;h=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class wN{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let h;h=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const kN={kernelName:s.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:i,size:c}=a,[l,u]=c,d=(0,s.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new wN(r.shape,l,u,o,i):new xN(r.shape,l,u,o,i);return n.runWebGLProgram(d,[r],r.dtype)}};class SN{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],d=1/l,h=1/u,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const IN={kernelName:s.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new SN(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class NN{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),r=$y(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class TN{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const a=wv("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),s="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=$y(n);function i(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n))),r=a.join(","),s=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(s,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(a.slice()),";\n          }\n          if(").concat(s,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const CN={kernelName:s.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:o}=a,i=r.shape.length,c=s.util.parseAxisParam(o,r.shape);if(0===i)return Jv({inputs:{x:r},backend:n});const l=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TN(r.shape,c):new NN(r.shape,c);return n.runWebGLProgram(l,[r],r.dtype)}};class EN{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const _N={kernelName:s.RotateWithOffset,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:o,fillValue:i,center:c}=n,l=a,u=new EN(r.shape,i),[d,h]=s.backend_util.getImageCenter(c,r.shape[1],r.shape[2]),p=[[d,h,Math.sin(o),Math.cos(o)]];return l.runWebGLProgram(u,[r],r.dtype,p)}},AN=lx({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),RN={kernelName:s.Round,backendName:"webgl",kernelFunc:AN},FN=lx({opSnippet:"return inversesqrt(x);",cpuKernelImpl:tv}),DN={kernelName:s.Rsqrt,backendName:"webgl",kernelFunc:FN};class ON{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=$y(r.length),c=$y(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const h="getUpdates(".concat(d,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(h,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class MN{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const i=$y(r.length),c=$y(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const h="getUpdates(".concat(d,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(h,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const LN={kernelName:s.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:o}=t,{shape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=s.backend_util.calculateShapes(o,r,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const f=bx({inputs:{x:r},backend:n,attrs:{shape:[l,c]}}),m=bx({inputs:{x:o},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let y;y=(0,s.env)().getBool("WEBGL_PACK")?new MN(l,c,f.shape.length,m.shape.length,d,p):new ON(l,c,f.shape.length,m.shape.length,d,p);const b=n.runWebGLProgram(y,[m,f,g],m.dtype),v=bx({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),v}};class zN{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),o=2===(0,s.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(o,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(i," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const BN={kernelName:s.SearchSorted,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=new zN(r.shape[0],r.shape[1],s.shape[1],o),c=[[r.shape[1]]];return n.runWebGLProgram(i,[r,s],"int32",c)}};class PN{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let a=0;a<t.length;a++)o.push("".concat(n[a])),a<e&&s.push("".concat(n[a]));a=s.join(),r=o.join()}const s=$y(n);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const VN={kernelName:s.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:o}=t,i=new PN(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[a,r,o],(0,s.upcastType)(r.dtype,o.dtype))}},WN=lx({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(s.backend_util.SELU_SCALEALPHA,";\n  float scale = ").concat(s.backend_util.SELU_SCALE,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),UN={kernelName:s.Selu,backendName:"webgl",kernelFunc:WN},GN=lx({opSnippet:cx+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:av}),jN={kernelName:s.Sigmoid,backendName:"webgl",kernelFunc:GN},HN=lx({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),qN={kernelName:s.Sign,backendName:"webgl",kernelFunc:HN},XN=lx({opSnippet:cx+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Qv,"\n  return result;\n")}),KN={kernelName:s.Sin,backendName:"webgl",kernelFunc:XN},YN=lx({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),QN={kernelName:s.Sinh,backendName:"webgl",kernelFunc:YN},ZN=lx({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),JN={kernelName:s.Softplus,backendName:"webgl",kernelFunc:ZN},$N={kernelName:s.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,paddings:i}=a;s.util.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const c=o.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let s=1+o.length;s<r.shape.length;++s)l.push([0,0]);const u=[],d=$I({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=s.backend_util.getReshaped(d.shape,o,c,!1),p=s.backend_util.getPermuted(h.length,o.length,!1),f=s.backend_util.getReshapedPermuted(d.shape,o,c,!1),m=bx({inputs:{x:d},backend:n,attrs:{shape:h}}),g=Ex({inputs:{x:m},backend:n,attrs:{perm:p}}),y=bx({inputs:{x:g},backend:n,attrs:{shape:f}});return u.push(d),u.push(m),u.push(g),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const eT={kernelName:s.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(a.dataId),c=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[d,h,p,f,m]=ov(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(h,a.dtype,d),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const tT={kernelName:s.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(s.dataId)),[l,u,d]=iv(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const nT={kernelName:s.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=cv(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const aT={kernelName:s.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=cv(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const rT={kernelName:s.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:o,defaultValue:i}=t,{outputShape:c}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=s.backend_util.calculateShapes(o,r,c);if("string"===o.dtype){const e=n.bufferSync(r),t=n.bufferSync(o),a=s.util.decodeString(n.readSync(i.dataId)[0]),f=nv(e,t,c,p,d,u,l,h,a,false);return n.makeTensorInfo(c,f.dtype,f.values)}const f=new ON(u,l,r.shape.length,o.shape.length,h,[p,1],false),m=n.runWebGLProgram(f,[o,r,i],o.dtype),g=bx({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),g}};const sT={kernelName:s.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:o,axis:i}=a,c=s.util.parseAxisParam(i,r.shape)[0],l=s.backend_util.prepareSplitSize(r,o,c),u=r.shape.length,d=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[c]=e;const a=Nw({inputs:{x:r},backend:n,attrs:{begin:d,size:t}});return d[c]+=e,a}))}},oT="return sqrt(x);",iT=lx({opSnippet:oT,packedOpSnippet:oT,cpuKernelImpl:lv}),cT={kernelName:s.Sqrt,backendName:"webgl",kernelFunc:iT},lT=lx({opSnippet:"return x * x;"}),uT={kernelName:s.Square,backendName:"webgl",kernelFunc:lT},dT="return (a - b) * (a - b);",hT=ux({opSnippet:dT,packedOpSnippet:dT}),pT={kernelName:s.SquaredDifference,backendName:"webgl",kernelFunc:hT};const fT={kernelName:s.StaticRegexReplace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const o=n.readSync(r.dataId),i=s.backend_util.fromUint8ToStringArray(o),c=uv(i,"string",a);return n.makeTensorInfo(r.shape,"string",c)}};const mT={kernelName:s.Step,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,s=_v+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new Ev(r.shape,s);return a.runWebGLProgram(o,[r],r.dtype)}};class gT{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=$y(n.length),s=$y(n.length);let o="";if(1===a)o="coords * strides + begin";else{let e=0;o=n.map(((t,a)=>(e++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(e-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(e,");\n      ").concat(r," strides = ").concat(r,"(").concat(t,");\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const yT={kernelName:s.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,end:i,strides:c,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:v,end:x,strides:w}=s.slice_util.sliceInfo(r.shape,o,i,c,l,u,d,h,p);let k;if(g)k=bx({inputs:{x:r},backend:n,attrs:{shape:m}});else if(y||b){s.util.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=s.slice_util.computeOutShape(v,x,w),t=Nw({inputs:{x:r},backend:n,attrs:{begin:v,size:e}});k=bx({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=(0,s.buffer)(r.shape,r.dtype,e),a=dv(f,t,w,v);k=n.makeTensorInfo(m,r.dtype,a.values)}else{const e=new gT(v,w,f);k=n.runWebGLProgram(e,[r],r.dtype)}}const S=bx({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),S}};const bT={kernelName:s.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:d}=t,h=n.readSync(u.dataId),p=n.readSync(d.dataId),[f,m]=hv(h,p,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const vT={kernelName:s.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[l,u,d]=pv(i,c,r),h=u.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const xT={kernelName:s.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=fv(o,r);return n.makeTensorInfo(s.shape,"int32",i)}},wT=lx({opSnippet:"return tan(x);"}),kT={kernelName:s.Tan,backendName:"webgl",kernelFunc:wT},ST=lx({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),IT={kernelName:s.Tanh,backendName:"webgl",kernelFunc:ST};const NT={kernelName:s.TensorScatterUpdate,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:o,updates:i}=t,{}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=s.backend_util.calculateShapes(i,o,r.shape),p=[h/u,u];if(0===h)return n.makeTensorInfo(r.shape,o.dtype);const f=bx({inputs:{x:o},backend:n,attrs:{shape:[l,c]}}),m=bx({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),g=bx({inputs:{x:r},backend:n,attrs:{shape:p}}),y=new ON(l,c,f.shape.length,m.shape.length,d,p,!1,!0),b=n.runWebGLProgram(y,[m,f,g],g.dtype),v=bx({inputs:{x:b},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),v}};class TT{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const a=$y(this.rank),r=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push("imod(".concat(n[r],", ").concat(e[r],")"));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function CT(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:o}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>s.util.decodeString(e))):e,a=(0,s.buffer)(r.shape,r.dtype,t),i=gv(a,o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new TT(r.shape,o);return n.runWebGLProgram(i,[r],r.dtype)}const ET={kernelName:s.Tile,backendName:"webgl",kernelFunc:CT};class _T{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class AT{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function RT(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function FT(e){let t=1;for(;t<e;)t*=2;return t}const DT={kernelName:s.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:o,sorted:i}=a,c=(0,s.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,s.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([r])||d<c||o>l){const e=n.readSync(r.dataId),[t,a]=yv(e,u,r.dtype,o,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===o)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===d)return[r,uS({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),p=null!==h&&h.isPacked,f=p?n.unpackTensor(r):r,m=s.util.sizeFromShape(u)/d,g=bx({inputs:{x:f},attrs:{shape:[m,d]},backend:n});p&&RT(n,f);const y=FT(o),b=FT(d);let v=null;const x=()=>null===v?[g,g]:[g,v],w=(e,t,a)=>{const r=x(),s=new _T(a),o=[[d],[null===v?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=v;v=n.runWebGLProgram(s,r,"int32",o),RT(n,i)};for(let s=1;s<y;s*=2){const e=2*s;for(let t=s;t>=1;t/=2)w(e,t,[m,b])}for(let s=b;s>y;s/=2){const e=x(),t=new AT([m,s/2]),a=[[d],[null===v?1:0],[y]],r=v;v=n.runWebGLProgram(t,e,"int32",a),RT(n,r);const o=y/2,i=2*o;for(let n=o;n>=1;n/=2)w(i,n,v.shape)}let k=v;v=Nw({inputs:{x:v},backend:n,attrs:{begin:0,size:[m,o]}}),RT(n,k);let S=_S({inputs:{x:g,indices:v},backend:n,attrs:{axis:1,batchDims:1}});RT(n,g);const I=u.slice(0,-1);I.push(o),k=v,v=bx({inputs:{x:v},attrs:{shape:I},backend:n}),RT(n,k);const N=S;return S=bx({inputs:{x:S},attrs:{shape:I},backend:n}),RT(n,N),[S,v]}};class OT{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const MT={kernelName:s.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=a,[u,d,h,p]=r.shape,[f,m]=null!=l?l:[d,h],g=new OT(d,h,o,i,c,[u,f,m,p]);return n.runWebGLProgram(g,[r,s],"float32")}};const LT={kernelName:s.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;My(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(s.dataId),{outputValues:i,outputShape:c,indices:l}=vv(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const zT={kernelName:s.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r,i=o.shape.length,c=r.shape[s],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==s&&(l[u++]=o.shape[m]);const d=[],h=new Array(i).fill(0),p=o.shape.slice();p[s]=1;const f=new Array(c);for(let m=0;m<f.length;m++){h[s]=m;const e=Nw({inputs:{x:o},backend:n,attrs:{begin:h,size:p}}),t=bx({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class BT{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,o=s*Math.ceil(r/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let d="";r%n>0&&(d="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(d,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(s,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(s,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const PT={kernelName:s.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:o}=t,{numSegments:i}=a,c=r.shape.length,l=[];let u=0;const d=s.backend_util.getAxesPermutation([u],c);let h=r;null!=d&&(h=Ex({inputs:{x:r},backend:n,attrs:{perm:d}}),l.push(h),u=s.backend_util.getInnerMostAxes(1,c)[0]);const p=s.backend_util.segment_util.computeOutShape(h.shape,u,i),f=s.util.sizeFromShape([h.shape[u]]),m=bx({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,s.sumOutType)(r.dtype),y=(e,t,a,r,o)=>{const i=e.shape[0],c=e.shape[1],u=s.backend_util.segment_util.segOpComputeOptimalWindowSize(c,o),d=new BT({windowSize:u,inSize:c,batchSize:i,numSegments:o},t),h=n.compileAndRun(d,[e,a],r);if(l.push(h),h.shape[1]===o)return h;const p=iN({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),f=CT({inputs:{x:p},backend:n,attrs:{reps:[c/u]}});l.push(p),l.push(f);return y(h,t,f,r,o)},b=bx({inputs:{x:y(m,"unsortedSegmentSum",o,g,i)},backend:n,attrs:{shape:p}});let v=b;if(null!=d){l.push(b);const e=s.backend_util.getUndoAxesPermutation(d);v=Ex({inputs:{x:v},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},VT=[Fx,Ox,Lx,Bx,Wx,jx,Hx,qx,Jx,$x,tw,aw,sw,iw,lw,hw,pw,gw,yw,bw,ww,Cw,Ew,_w,Aw,Lw,Pw,Uw,tx,Hw,$w,ik,hk,fk,mk,gk,yk,vk,wk,Sk,_k,Ak,Rk,Dk,Lk,Pk,Vk,Uk,jk,Hk,Xk,Kk,Qk,Jk,eS,nS,sS,cS,dS,pS,gS,bS,wS,IS,NS,CS,AS,FS,OS,$v,MS,Qw,zS,PS,WS,rx,GS,HS,qS,KS,QS,JS,eI,nI,sI,iI,lI,dI,hI,pI,gI,yI,bI,vI,xI,kI,NI,CI,LI,yx,BI,VI,UI,jI,Fw,qI,YI,QI,eN,nN,ix,aN,rN,sN,oN,cN,Ow,AI,uN,hN,fN,vx,yN,vN,kN,IN,CN,_N,RN,DN,LN,BN,VN,UN,jN,qN,KN,QN,Tw,MI,JN,$N,eT,tT,nT,aT,rT,sT,cT,uT,pT,fT,mT,yT,bT,vT,xT,DI,Cx,kT,IT,NT,ET,DT,MT,_x,LT,zT,PT,KI];for(const n of VT)(0,s.registerKernel)(n);s.version_core,Wl.version_converter;var WT=n(3684),UT=n(184);const GT=function(){const[e,n]=(0,t.useState)(!1),a=(0,t.useRef)(null),s=(0,t.useRef)(null),o=(0,t.useRef)(null);return(0,t.useEffect)((()=>((async()=>{o.current=await r.load()})().catch(console.error),()=>{})),[]),(0,t.useEffect)((()=>{if(!e)return void(a.current&&a.current.srcObject&&a.current.srcObject.getTracks().forEach((e=>e.stop())));const t=a.current,n=s.current;n.width=640,n.height=480;return new WT.Camera(a.current,{onFrame:async()=>{if(o.current){const e=await o.current.detect(a.current),t=s.current.getContext("2d");s.current.width=a.current.videoWidth,s.current.height=a.current.videoHeight,t.clearRect(0,0,s.current.width,s.current.height),e.forEach((e=>{if("sports ball"===e.class){console.log("Sports ball detected",e);const[n,a,r,s]=e.bbox;t.strokeStyle="red",t.lineWidth=4,t.strokeRect(n,a,r,s)}}))}},width:640,height:480}).start(),()=>{t.srcObject&&t.srcObject.getTracks().forEach((e=>e.stop()))}}),[e]),(0,UT.jsxs)("div",{children:[(0,UT.jsx)("button",{onClick:()=>{n(!e)},className:"camera-toggle-button",children:e?"Turn Off Camera":"Turn On Camera"}),(0,UT.jsxs)("div",{className:"video-container",children:[(0,UT.jsx)("video",{ref:a,className:"input-video",autoPlay:!0,playsInline:!0,style:{display:"block"}}),(0,UT.jsx)("canvas",{ref:s,className:"pose-overlay output-canvas"})]})]})};var jT=n(2509),HT=n(9809);const qT=function(){const[e,n]=(0,t.useState)(!1),a=(0,t.useRef)(null),r=(0,t.useRef)(null),s=(0,t.useRef)(null),o=(0,t.useRef)(null);return(0,t.useEffect)((()=>{if(!e){return r.current.getContext("2d").clearRect(0,0,r.current.width,r.current.height),o.current&&cancelAnimationFrame(o.current),void(a.current&&a.current.srcObject&&(a.current.srcObject.getTracks().forEach((e=>e.stop())),a.current.style.display="none"))}a.current.style.display="block";const t=a.current,n=r.current;s.current=new jT.Pose({locateFile:e=>"https://cdn.jsdelivr.net/npm/@mediapipe/pose/".concat(e)}),s.current.setOptions({modelComplexity:1,smoothLandmarks:!0,minDetectionConfidence:.5,minTrackingConfidence:.5}),s.current.onResults((e=>{if(e.poseLandmarks){n.width=t.videoWidth,n.height=t.videoHeight;const a=n.getContext("2d");a.save(),a.clearRect(0,0,n.width,n.height);const r=new Set([0,1,2,3,4,5,6,7,8,9,10]),s=jT.POSE_CONNECTIONS.filter((e=>!r.has(e[0])&&!r.has(e[1]))),o=e.poseLandmarks.filter(((e,t)=>!r.has(t)));(0,HT.drawConnectors)(a,e.poseLandmarks,s,{color:"#00FF00",lineWidth:.5}),(0,HT.drawLandmarks)(a,o,{color:"#FF0000",lineWidth:1}),a.restore()}}));return new WT.Camera(t,{onFrame:async()=>{await s.current.send({image:t})},width:640,height:480}).start(),()=>{o.current&&cancelAnimationFrame(o.current),t.srcObject&&(t.srcObject.getTracks().forEach((e=>e.stop())),t.style.display="none")}}),[e]),(0,UT.jsxs)("div",{children:[(0,UT.jsx)("button",{onClick:()=>{n(!e)},className:"camera-toggle-button",children:e?"Turn Off Camera":"Turn On Camera"}),(0,UT.jsxs)("div",{className:"video-container",children:[(0,UT.jsx)("video",{ref:a,className:"input-video",autoPlay:!0,playsInline:!0,style:{display:"block"}}),(0,UT.jsx)("canvas",{ref:r,className:"pose-overlay output-canvas"})]})]})};var XT=n(5731);const KT=11,YT=12,QT=13,ZT=14,JT=15,$T=16,eC=23,tC=24,nC=25,aC=26,rC=27,sC=28,oC=(e,t,n)=>{const a=Math.atan2(n.y-t.y,n.x-t.x)-Math.atan2(e.y-t.y,e.x-t.x);let r=Math.abs(180*a/Math.PI);return r>180&&(r=360-r),r};const iC=function(){const[e,n]=(0,t.useState)(null),a=(0,t.useRef)(null),r=(0,t.useRef)(null),s=(0,t.useRef)(null),o=(0,t.useRef)(null),[i,c]=(0,t.useState)(!1),[l,u]=(0,t.useState)(null),d=(0,t.useRef)(!1),h=(0,t.useRef)(!1),p=(0,t.useRef)(!1),f=(0,t.useRef)(!1),m=(0,t.useRef)(!1),g=(0,t.useRef)(!1),y=(0,t.useRef)(!1),b=(0,t.useRef)(!1),[v,x]=(0,t.useState)(null),[w,k]=(0,t.useState)(null),[S,I]=(0,t.useState)(null),[N,T]=(0,t.useState)(null),[C,E]=(0,t.useState)(null),[_,A]=(0,t.useState)(null),[R,F]=(0,t.useState)(null),[D,O]=(0,t.useState)(null);(0,t.useEffect)((()=>{const e=new jT.Pose({locateFile:e=>"https://cdn.jsdelivr.net/npm/@mediapipe/pose/".concat(e)});e.setOptions({modelComplexity:1,smoothLandmarks:!0,minDetectionConfidence:.5,minTrackingConfidence:.5}),e.onResults((e=>{u(e.poseLandmarks);const t=s.current.getContext("2d");if(t.save(),t.clearRect(0,0,s.current.width,s.current.height),t.drawImage(r.current,0,0,s.current.width,s.current.height),e.poseLandmarks){(0,HT.drawConnectors)(t,e.poseLandmarks,jT.POSE_CONNECTIONS,{color:"#00FF00",lineWidth:4}),(0,HT.drawLandmarks)(t,e.poseLandmarks,{color:"#FF0000",lineWidth:2});const n=e.poseLandmarks[nC],a=e.poseLandmarks[aC],r=e.poseLandmarks[eC],o=e.poseLandmarks[tC],i=e.poseLandmarks[rC],c=e.poseLandmarks[sC],l=e.poseLandmarks[KT],u=e.poseLandmarks[YT],v=e.poseLandmarks[JT],w=e.poseLandmarks[$T],S=e.poseLandmarks[QT],N=e.poseLandmarks[ZT];if(h.current&&a&&o&&c){const e=oC(o,a,c);k(e);const n=a.x*s.current.width,r=a.y*s.current.height;t.fillStyle="blue",t.font="60px Arial",t.fillText("".concat(Math.round(e),"\xb0"),n,r)}if(d.current&&n&&r&&i){const e=oC(r,n,i);x(e);const a=n.x*s.current.width,o=n.y*s.current.height;t.fillStyle="red",t.font="60px Arial",t.fillText("".concat(Math.round(e),"\xb0"),a,o)}if(p.current&&r&&l&&n){const e=oC(l,r,n);I(e);const a=r.x*s.current.width,o=r.y*s.current.height;t.fillStyle="green",t.font="60px Arial",t.fillText("".concat(Math.round(e),"\xb0"),a,o)}if(f.current&&o&&u&&a){const e=oC(u,o,a);T(e);const n=o.x*s.current.width,r=o.y*s.current.height;t.fillStyle="purple",t.font="60px Arial",t.fillText("".concat(Math.round(e),"\xb0"),n,r)}if(m.current&&l&&r&&S){const e=oC(r,l,S);F(e);const n=l.x*s.current.width,a=l.y*s.current.height;t.fillStyle="orange",t.font="60px Arial",t.fillText("".concat(Math.round(e),"\xb0"),n,a)}if(g.current&&u&&o&&N){const e=oC(o,u,N);O(e);const n=u.x*s.current.width,a=u.y*s.current.height;t.fillStyle="yellow",t.font="60px Arial",t.fillText("".concat(Math.round(e),"\xb0"),n,a)}if(y.current&&S&&l&&v){const e=oC(l,S,v);E(e);const n=S.x*s.current.width,a=S.y*s.current.height;t.fillStyle="cyan",t.font="60px Arial",t.fillText("".concat(Math.round(e),"\xb0"),n,a)}if(b.current&&N&&u&&w){const e=oC(u,N,w);A(e);const n=N.x*s.current.width,a=N.y*s.current.height;t.fillStyle="magenta",t.font="60px Arial",t.fillText("".concat(Math.round(e),"\xb0"),n,a)}}t.restore()})),r.current.pose=e}),[]);const M=e=>{const t=e.target.files[0];if(t){const e=URL.createObjectURL(t);n(e)}},L=()=>{const e=r.current,t=e.pose,n=s.current.getContext("2d"),a=async()=>{e.paused||e.ended||(n.drawImage(e,0,0,s.current.width,s.current.height),await t.send({image:e}),requestAnimationFrame(a))};e.addEventListener("loadedmetadata",(()=>{s.current.width=e.videoWidth,s.current.height=e.videoHeight,e.currentTime=0})),e.addEventListener("loadeddata",(()=>{t?t.send({image:e}):n.drawImage(e,0,0,s.current.width,s.current.height),e.pause(),c(!1)})),e.addEventListener("play",a)};(0,t.useEffect)((()=>(e&&L(),()=>{o.current&&cancelAnimationFrame(o.current)})),[e]);const[z,B]=(0,t.useState)(!1),P=e=>{e.current=!e.current,B((e=>!e))},V=[{name:"Left Knee",ref:d,toggle:()=>P(d)},{name:"Right Knee",ref:h,toggle:()=>P(h)},{name:"Left Hip",ref:p,toggle:()=>P(p)},{name:"Right Hip",ref:f,toggle:()=>P(f)},{name:"Left Shoulder",ref:m,toggle:()=>P(m)},{name:"Right Shoulder",ref:g,toggle:()=>P(g)},{name:"Left Elbow",ref:y,toggle:()=>P(y)},{name:"Right Elbow",ref:b,toggle:()=>P(b)}].map(((e,t)=>{const n=e.ref.current;return(0,UT.jsxs)("div",{style:{display:"flex",flexDirection:"column",alignItems:"center",margin:"5px"},children:[(0,UT.jsx)("span",{children:e.name}),(0,UT.jsx)("button",{onClick:e.toggle,children:n?"Hide Angle":"Show Angle"})]},t)}));return(0,UT.jsxs)("div",{children:[(0,UT.jsxs)("div",{className:"drop-area",children:[!e&&(0,UT.jsx)(XT.FileDrop,{onDrop:M,onTargetClick:()=>a.current.click(),children:"Drop your video here or click to upload"}),(0,UT.jsx)("input",{ref:a,type:"file",onChange:M,style:{display:"none"}}),e&&(0,UT.jsx)("canvas",{ref:s,style:{width:"100%",height:"auto"}})]}),(0,UT.jsx)("div",{children:e&&(0,UT.jsxs)(UT.Fragment,{children:[(0,UT.jsx)("button",{onClick:()=>{const e=r.current;e&&(e.paused||e.ended?(e.play(),c(!0)):(e.pause(),c(!1)))},children:i?"Pause":"Play"}),(0,UT.jsx)("button",{onClick:()=>{const e=r.current,t=e.pose;e&&(e.pause(),e.currentTime=0,c(!1),e.onseeked=async()=>{t&&await t.send({image:e}),e.onseeked=null})},children:"Reset"}),(0,UT.jsx)("button",{onClick:()=>{n(null),c(!1);s.current.getContext("2d").clearRect(0,0,s.current.width,s.current.height),a.current&&(a.current.value="")},children:"Remove"})]})}),(0,UT.jsx)("div",{className:"joint-controls-container",children:(0,UT.jsx)("div",{style:{display:"flex",flexWrap:"wrap",justifyContent:"center"},children:V})}),(0,UT.jsx)("div",{style:{display:"none"},children:(0,UT.jsx)("video",{ref:r,src:e,preload:"metadata"})})]})};const cC=function(){const[e,n]=(0,t.useState)(null),a=(0,t.useRef)(null),s=(0,t.useRef)(null),o=(0,t.useRef)(null),[i,c]=(0,t.useState)(!1),l=(0,t.useRef)(null);(0,t.useEffect)((()=>((async()=>{l.current=await r.load()})().catch(console.error),()=>{})),[]);const u=e=>{const t=e.target.files[0];if(t){const e=URL.createObjectURL(t);n(e)}},d=()=>{const e=s.current,t=o.current.getContext("2d"),n=async()=>{e.paused||e.ended||(t.drawImage(e,0,0,o.current.width,o.current.height),await(async()=>{l.current&&e&&(await l.current.detect(e)).forEach((e=>{if("sports ball"===e.class){const[n,a,r,s]=e.bbox;t.strokeStyle="red",t.lineWidth=4,t.strokeRect(n,a,r,s)}}))})(),requestAnimationFrame(n))};e.addEventListener("loadedmetadata",(()=>{o.current.width=e.videoWidth,o.current.height=e.videoHeight,e.currentTime=0})),e.addEventListener("loadeddata",(()=>{e.pause(),c(!1),n()})),e.addEventListener("play",n)};return(0,t.useEffect)((()=>{e&&d()}),[e]),(0,UT.jsxs)("div",{children:[(0,UT.jsxs)("div",{className:"drop-area",children:[!e&&(0,UT.jsx)(XT.FileDrop,{onDrop:u,onTargetClick:()=>a.current.click(),children:"Drop your video here or click to upload"}),(0,UT.jsx)("input",{ref:a,type:"file",onChange:u,style:{display:"none"}}),e&&(0,UT.jsx)("canvas",{ref:o,style:{width:"100%",height:"auto"}})]}),(0,UT.jsx)("div",{children:e&&(0,UT.jsxs)(UT.Fragment,{children:[(0,UT.jsx)("button",{onClick:()=>{const e=s.current;e&&(e.paused||e.ended?(e.play(),c(!0)):(e.pause(),c(!1)))},children:i?"Pause":"Play"}),(0,UT.jsx)("button",{onClick:()=>{const e=s.current;e&&(e.pause(),e.currentTime=0,c(!1))},children:"Reset"}),(0,UT.jsx)("button",{onClick:()=>{n(null),c(!1),a.current&&(a.current.value="")},children:"Remove"})]})}),(0,UT.jsx)("div",{style:{display:"none"},children:(0,UT.jsx)("video",{ref:s,src:e,preload:"metadata"})})]})},lC=()=>(0,UT.jsxs)("nav",{className:"navbar",children:[(0,UT.jsx)("img",{src:"/assets/TPhead.png",alt:"Training Point Logo",className:"logo"}),(0,UT.jsxs)("div",{className:"links",children:[(0,UT.jsx)("a",{href:"/",children:"Sign Up"}),(0,UT.jsx)("a",{href:"/create",style:{color:"white",backgroundColor:"#1EB980",borderRadius:"8px"},children:"Login"})]})]});const uC=function(){const[e,n]=(0,t.useState)(!1),[a,r]=(0,t.useState)(!0);return(0,UT.jsxs)("div",{className:"App",children:[(0,UT.jsx)(lC,{}),(0,UT.jsxs)("div",{className:"toggle-switch",children:[(0,UT.jsx)("button",{onClick:()=>{n(!e)},children:e?"Switch to Video Upload":"Switch to Camera"}),(0,UT.jsx)("button",{onClick:()=>{r(!a)},children:a?"Switch to Object Detection":"Switch to Pose Detection"})]}),e?a?(0,UT.jsx)(qT,{}):(0,UT.jsx)(GT,{}):a?(0,UT.jsx)(iC,{}):(0,UT.jsx)(cC,{})]})},dC=e=>{e&&e instanceof Function&&n.e(787).then(n.bind(n,787)).then((t=>{let{getCLS:n,getFID:a,getFCP:r,getLCP:s,getTTFB:o}=t;n(e),a(e),r(e),s(e),o(e)}))};a.createRoot(document.getElementById("root")).render((0,UT.jsx)(t.StrictMode,{children:(0,UT.jsx)(uC,{})})),dC()})()})();
//# sourceMappingURL=main.212fa1de.js.map